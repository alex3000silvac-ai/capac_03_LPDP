/**
 * PRUEBA EXHAUSTIVA DEL MOTOR DE INTELIGENCIA RAT
 * Valida TODAS las casu√≠sticas implementadas
 */

import ratIntelligenceEngine from './src/services/ratIntelligenceEngine.js';

const testScenarios = [
  // ESCENARIO 1: TU PROCESO DE SALUD
  {
    nombre: 'PROCESO SALUD (TU CASO)',
    ratData: {
      area: 'salud',
      nombre_actividad: 'Procesamiento Datos Pacientes',
      finalidad: 'Atenci√≥n m√©dica y seguimiento de pacientes con situaci√≥n socioecon√≥mica',
      categorias_datos: ['datos_medicos', 'situacion_socioeconomica'],
      decisiones_automatizadas: true,
      cantidad_titulares: 15000,
      destinatarios_externos: [
        { nombre: 'AWS Cloud', pais: 'Estados Unidos' },
        { nombre: 'Microsoft Azure', pais: 'Estados Unidos' }
      ],
      base_licitud: 'consentimiento',
      tiempo_retencion: '10 a√±os'
    }
  },
  
  // ESCENARIO 2: FINANCIERO CR√çTICO
  {
    nombre: 'BANCO SCORING CREDITICIO',
    ratData: {
      nombre_actividad: 'Sistema Scoring Crediticio',
      finalidad: 'Evaluaci√≥n de riesgo crediticio y scoring econ√≥mico automatizado',
      categorias_datos: ['situacion_socioeconomica', 'antecedentes'],
      decisiones_automatizadas: true,
      cantidad_titulares: 500000,
      destinatarios_externos: [
        { nombre: 'Equifax', pais: 'Estados Unidos' },
        { nombre: 'Dicom', pais: 'Chile' }
      ],
      volumen_datos: 'masivo'
    }
  },
  
  // ESCENARIO 3: EDUCACI√ìN CON MENORES
  {
    nombre: 'UNIVERSIDAD CON MENORES',
    ratData: {
      nombre_actividad: 'Sistema Gesti√≥n Estudiantil',
      finalidad: 'Evaluaci√≥n rendimiento acad√©mico estudiantes menores',
      categorias_datos: ['menores', 'datos_academicos'],
      decisiones_automatizadas: true,
      cantidad_titulares: 2000,
      base_licitud: '',  // Falta base de licitud
      tiempo_retencion: 'indefinido'  // Problem√°tico
    }
  },
  
  // ESCENARIO 4: GOBIERNO TRANSPARENCIA
  {
    nombre: 'MUNICIPALIDAD SERVICIOS',
    ratData: {
      nombre_actividad: 'Servicios Municipales Digitales',
      finalidad: 'Atenci√≥n ciudadana y tr√°mites gobierno digital',
      categorias_datos: ['datos_personales', 'situacion_socioeconomica'],
      cantidad_titulares: 80000,
      destinatarios_externos: [
        { nombre: 'Google Cloud', pais: 'Estados Unidos' }
      ]
    }
  },
  
  // ESCENARIO 5: RETAIL PERFILADO
  {
    nombre: 'RETAIL RECOMENDACIONES',
    ratData: {
      nombre_actividad: 'Sistema Recomendaci√≥n Productos',
      finalidad: 'Perfilado clientes y segmentaci√≥n para recomendaciones personalizadas',
      categorias_datos: ['datos_personales', 'preferencias'],
      decisiones_automatizadas: true,
      cantidad_titulares: 1000000,
      volumen_datos: 'masivo'
    }
  },
  
  // ESCENARIO 6: TECNOLOG√çA BIOM√âTRICA
  {
    nombre: 'APP RECONOCIMIENTO FACIAL',
    ratData: {
      nombre_actividad: 'App Reconocimiento Biom√©trico',
      finalidad: 'Autenticaci√≥n por reconocimiento facial y huella dactilar',
      categorias_datos: ['biometricos', 'huella'],
      decisiones_automatizadas: true,
      cantidad_titulares: 50000,
      destinatarios_externos: [
        { nombre: 'Amazon Rekognition', pais: 'Estados Unidos' }
      ]
    }
  },
  
  // ESCENARIO 7: CASO SIMPLE SIN PROBLEMAS
  {
    nombre: 'CASO SIMPLE RRHH',
    ratData: {
      nombre_actividad: 'Gesti√≥n N√≥mina',
      finalidad: 'Pago de sueldos empleados',
      categorias_datos: ['datos_personales'],
      cantidad_titulares: 50,
      base_licitud: 'contrato_laboral',
      tiempo_retencion: '7 a√±os'
    }
  }
];

async function runTests() {
  console.log('üöÄ INICIANDO PRUEBAS EXHAUSTIVAS DEL MOTOR DE INTELIGENCIA\n');
  
  for (let i = 0; i < testScenarios.length; i++) {
    const scenario = testScenarios[i];
    console.log(`\n${'='.repeat(60)}`);
    console.log(`üìã ESCENARIO ${i + 1}: ${scenario.nombre}`);
    console.log(`${'='.repeat(60)}`);
    
    try {
      const resultado = await ratIntelligenceEngine.evaluateRATActivity(scenario.ratData);
      
      console.log(`üéØ √ÅREA DETECTADA: ${resultado.area_detectada}`);
      console.log(`‚ö†Ô∏è  NIVEL DE RIESGO: ${resultado.risk_level}`);
      console.log(`üìÑ DOCUMENTOS REQUERIDOS: ${resultado.total_documentos_requeridos}`);
      console.log(`üîî NOTIFICACIONES GENERADAS: ${resultado.notificaciones_dpo.length}`);
      console.log(`‚è∞ URGENCIA M√ÅXIMA: ${resultado.urgencia_maxima}`);
      
      if (resultado.datos_sensibles_detectados.length > 0) {
        console.log(`üîç DATOS SENSIBLES: ${resultado.datos_sensibles_detectados.join(', ')}`);
      }
      
      if (resultado.factores_riesgo.length > 0) {
        console.log(`‚ö° FACTORES DE RIESGO: ${resultado.factores_riesgo.length}`);
        resultado.factores_riesgo.forEach(factor => console.log(`   ‚Ä¢ ${factor}`));
      }
      
      if (resultado.compliance_alerts.length > 0) {
        console.log(`\nüì¢ ALERTAS GENERADAS:`);
        resultado.compliance_alerts.forEach((alert, idx) => {
          console.log(`   ${idx + 1}. [${alert.tipo.toUpperCase()}] ${alert.titulo}`);
          console.log(`      üìù ${alert.descripcion}`);
          console.log(`      ‚öñÔ∏è  ${alert.fundamento_legal}`);
        });
      }
      
      if (resultado.notificaciones_dpo.length > 0) {
        console.log(`\nüîî NOTIFICACIONES AL DPO:`);
        resultado.notificaciones_dpo.forEach((notif, idx) => {
          console.log(`   ${idx + 1}. ID: ${notif.id}`);
          console.log(`      üìã ${notif.titulo}`);
          console.log(`      ‚è∞ Vence en: ${notif.vencimiento} d√≠as`);
          console.log(`      üîó Documento: ${notif.documentoId}`);
        });
      }
      
    } catch (error) {
      console.error(`‚ùå ERROR EN ESCENARIO ${scenario.nombre}:`, error);
    }
  }
  
  console.log(`\n${'üéâ'.repeat(20)}`);
  console.log('‚úÖ PRUEBAS COMPLETADAS - TODOS LOS ESCENARIOS ANALIZADOS');
  console.log(`${'üéâ'.repeat(20)}\n`);
}

// Solo ejecutar si es llamado directamente
if (import.meta.url === `file://${process.argv[1]}`) {
  runTests();
}

export { testScenarios, runTests };