{
  "timestamp": "2025-09-04T17:29:53.097Z",
  "phase": "EXHAUSTIVE_SYSTEM_AUDIT",
  "description": "Auditor√≠a exhaustiva l√≠nea por l√≠nea - Testing REAL Supabase - 11 M√≥dulos",
  "user_request": "AUTOMATIZACI√ìN COMPLETA - NO SIMULACIONES - TESTING F√çSICO REAL",
  "phases": {
    "phase1_code_analysis": {
      "status": "completed",
      "files_analyzed": 105,
      "supabase_calls_found": 662,
      "total_lines_analyzed": 58276
    },
    "phase2_real_testing": {
      "status": "completed",
      "tests_executed": 67,
      "success_rate": 0,
      "successful_tests": 0
    },
    "phase3_table_validation": {
      "status": "completed",
      "tables_validated": 110,
      "discrepancies": 707
    },
    "phase4_module_analysis": {
      "status": "completed",
      "modules_analyzed": 11
    },
    "phase5_integration_testing": {
      "status": "completed",
      "integration_tests": 9,
      "successful_tests": 7,
      "success_rate": 78
    }
  },
  "results": {
    "supabase_connections": [
      {
        "file": "frontend/src/components/APIPartnersIntegration.js",
        "line": 57,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 55,
            "code": "TrendingUp as TrendingIcon",
            "current": false
          },
          {
            "line": 56,
            "code": "} from '@mui/icons-material';",
            "current": false
          },
          {
            "line": 57,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 58,
            "code": "import { useTenant } from '../contexts/TenantContext';",
            "current": false
          },
          {
            "line": 59,
            "code": "import { useAuth } from '../contexts/AuthContext';",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/APIPartnersIntegration.js",
        "line": 95,
        "code": ".from('api_partners')",
        "type": "OTHER",
        "table": "api_partners",
        "operation": "OTHER",
        "context": [
          {
            "line": 93,
            "code": "// üîå PARTNERS REGISTRADOS (tabla nueva requerida)",
            "current": false
          },
          {
            "line": 94,
            "code": "const { data: partnersData, error: partnersError } = await supabase",
            "current": false
          },
          {
            "line": 95,
            "code": ".from('api_partners')",
            "current": true
          },
          {
            "line": 96,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 97,
            "code": ".eq('is_active', true)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "api_partners",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006994686_k20hck646\\\"\"}",
          "timestamp": "2025-09-04T17:29:54.911Z"
        }
      },
      {
        "file": "frontend/src/components/APIPartnersIntegration.js",
        "line": 96,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 94,
            "code": "const { data: partnersData, error: partnersError } = await supabase",
            "current": false
          },
          {
            "line": 95,
            "code": ".from('api_partners')",
            "current": false
          },
          {
            "line": 96,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 97,
            "code": ".eq('is_active', true)",
            "current": false
          },
          {
            "line": 98,
            "code": ".order('created_at', { ascending: false });",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/APIPartnersIntegration.js",
        "line": 104,
        "code": ".from('partner_tokens')",
        "type": "OTHER",
        "table": "partner_tokens",
        "operation": "OTHER",
        "context": [
          {
            "line": 102,
            "code": "// üîë API KEYS ACTIVAS",
            "current": false
          },
          {
            "line": 103,
            "code": "const { data: keysData, error: keysError } = await supabase",
            "current": false
          },
          {
            "line": 104,
            "code": ".from('partner_tokens')",
            "current": true
          },
          {
            "line": 105,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 106,
            "code": ".eq('is_active', true);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "partner_tokens",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006995112_659z0dvp6\\\"\"}",
          "timestamp": "2025-09-04T17:29:55.303Z"
        }
      },
      {
        "file": "frontend/src/components/APIPartnersIntegration.js",
        "line": 105,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 103,
            "code": "const { data: keysData, error: keysError } = await supabase",
            "current": false
          },
          {
            "line": 104,
            "code": ".from('partner_tokens')",
            "current": false
          },
          {
            "line": 105,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 106,
            "code": ".eq('is_active', true);",
            "current": false
          },
          {
            "line": 107,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/APIPartnersIntegration.js",
        "line": 112,
        "code": ".from('webhook_configs')",
        "type": "OTHER",
        "table": "webhook_configs",
        "operation": "OTHER",
        "context": [
          {
            "line": 110,
            "code": "// üîî WEBHOOKS CONFIGURADOS",
            "current": false
          },
          {
            "line": 111,
            "code": "const { data: webhooksData, error: webhooksError } = await supabase",
            "current": false
          },
          {
            "line": 112,
            "code": ".from('webhook_configs')",
            "current": true
          },
          {
            "line": 113,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 114,
            "code": ".eq('is_active', true);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "webhook_configs",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006995504_4d7zym6y7\\\"\"}",
          "timestamp": "2025-09-04T17:29:55.690Z"
        }
      },
      {
        "file": "frontend/src/components/APIPartnersIntegration.js",
        "line": 113,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 111,
            "code": "const { data: webhooksData, error: webhooksError } = await supabase",
            "current": false
          },
          {
            "line": 112,
            "code": ".from('webhook_configs')",
            "current": false
          },
          {
            "line": 113,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 114,
            "code": ".eq('is_active', true);",
            "current": false
          },
          {
            "line": 115,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/APIPartnersIntegration.js",
        "line": 130,
        "code": ".from('api_usage_metrics')",
        "type": "OTHER",
        "table": "api_usage_metrics",
        "operation": "OTHER",
        "context": [
          {
            "line": 128,
            "code": "// üìä M√âTRICAS TIEMPO REAL API",
            "current": false
          },
          {
            "line": 129,
            "code": "const { data: metricsData, error } = await supabase",
            "current": false
          },
          {
            "line": 130,
            "code": ".from('api_usage_metrics')",
            "current": true
          },
          {
            "line": 131,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 132,
            "code": ".gte('created_at', new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString()) // √öltimos 30 d√≠as",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "api_usage_metrics",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006995891_b68m27dti\\\"\"}",
          "timestamp": "2025-09-04T17:29:56.066Z"
        }
      },
      {
        "file": "frontend/src/components/APIPartnersIntegration.js",
        "line": 131,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 129,
            "code": "const { data: metricsData, error } = await supabase",
            "current": false
          },
          {
            "line": 130,
            "code": ".from('api_usage_metrics')",
            "current": false
          },
          {
            "line": 131,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 132,
            "code": ".gte('created_at', new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString()) // √öltimos 30 d√≠as",
            "current": false
          },
          {
            "line": 133,
            "code": ".order('created_at', { ascending: false });",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/APIPartnersIntegration.js",
        "line": 162,
        "code": ".from('api_partners')",
        "type": "OTHER",
        "table": "api_partners",
        "operation": "OTHER",
        "context": [
          {
            "line": 160,
            "code": "// üîå CREAR PARTNER EN BD",
            "current": false
          },
          {
            "line": 161,
            "code": "const { data: partnerData, error: partnerError } = await supabase",
            "current": false
          },
          {
            "line": 162,
            "code": ".from('api_partners')",
            "current": true
          },
          {
            "line": 163,
            "code": ".insert({",
            "current": false
          },
          {
            "line": 164,
            "code": "company_name: newPartner.company_name,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "api_partners",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006994686_k20hck646\\\"\"}",
          "timestamp": "2025-09-04T17:29:54.911Z"
        }
      },
      {
        "file": "frontend/src/components/APIPartnersIntegration.js",
        "line": 163,
        "code": ".insert({",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 161,
            "code": "const { data: partnerData, error: partnerError } = await supabase",
            "current": false
          },
          {
            "line": 162,
            "code": ".from('api_partners')",
            "current": false
          },
          {
            "line": 163,
            "code": ".insert({",
            "current": true
          },
          {
            "line": 164,
            "code": "company_name: newPartner.company_name,",
            "current": false
          },
          {
            "line": 165,
            "code": "contact_email: newPartner.contact_email,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/APIPartnersIntegration.js",
        "line": 174,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 172,
            "code": "created_by: user.id",
            "current": false
          },
          {
            "line": 173,
            "code": "})",
            "current": false
          },
          {
            "line": 174,
            "code": ".select()",
            "current": true
          },
          {
            "line": 175,
            "code": ".single();",
            "current": false
          },
          {
            "line": 176,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/APIPartnersIntegration.js",
        "line": 183,
        "code": "await supabase.from('partner_tokens').insert({",
        "type": "INSERT",
        "table": "partner_tokens",
        "operation": "CREATE",
        "context": [
          {
            "line": 181,
            "code": "const apiSecret = generateSecureSecret();",
            "current": false
          },
          {
            "line": 182,
            "code": "",
            "current": false
          },
          {
            "line": 183,
            "code": "await supabase.from('partner_tokens').insert({",
            "current": true
          },
          {
            "line": 184,
            "code": "partner_id: partnerData.id,",
            "current": false
          },
          {
            "line": 185,
            "code": "token: apiKey,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "partner_tokens",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006995112_659z0dvp6\\\"\"}",
          "timestamp": "2025-09-04T17:29:55.303Z"
        }
      },
      {
        "file": "frontend/src/components/APIPartnersIntegration.js",
        "line": 195,
        "code": "await supabase.from('webhook_configs').insert({",
        "type": "INSERT",
        "table": "webhook_configs",
        "operation": "CREATE",
        "context": [
          {
            "line": 193,
            "code": "// üîî CONFIGURAR WEBHOOK SI PROPORCIONADO",
            "current": false
          },
          {
            "line": 194,
            "code": "if (newPartner.webhook_url) {",
            "current": false
          },
          {
            "line": 195,
            "code": "await supabase.from('webhook_configs').insert({",
            "current": true
          },
          {
            "line": 196,
            "code": "partner_id: partnerData.id,",
            "current": false
          },
          {
            "line": 197,
            "code": "webhook_url: newPartner.webhook_url,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "webhook_configs",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006995504_4d7zym6y7\\\"\"}",
          "timestamp": "2025-09-04T17:29:55.690Z"
        }
      },
      {
        "file": "frontend/src/components/APIPartnersIntegration.js",
        "line": 205,
        "code": "await supabase.from('audit_log').insert({",
        "type": "INSERT",
        "table": "audit_log",
        "operation": "CREATE",
        "context": [
          {
            "line": 203,
            "code": "",
            "current": false
          },
          {
            "line": 204,
            "code": "// üìù AUDIT LOG CREACI√ìN PARTNER",
            "current": false
          },
          {
            "line": 205,
            "code": "await supabase.from('audit_log').insert({",
            "current": true
          },
          {
            "line": 206,
            "code": "tenant_id: 'SYSTEM',",
            "current": false
          },
          {
            "line": 207,
            "code": "user_id: user.id,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "audit_log",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006996267_qouphpev8\\\"\"}",
          "timestamp": "2025-09-04T17:29:56.444Z"
        }
      },
      {
        "file": "frontend/src/components/APIPartnersIntegration.js",
        "line": 259,
        "code": "await supabase.from('webhook_deliveries').insert({",
        "type": "INSERT",
        "table": "webhook_deliveries",
        "operation": "CREATE",
        "context": [
          {
            "line": 257,
            "code": "",
            "current": false
          },
          {
            "line": 258,
            "code": "// üìä REGISTRAR RESULTADO",
            "current": false
          },
          {
            "line": 259,
            "code": "await supabase.from('webhook_deliveries').insert({",
            "current": true
          },
          {
            "line": 260,
            "code": "webhook_id: webhookId,",
            "current": false
          },
          {
            "line": 261,
            "code": "payload: testPayload,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "webhook_deliveries",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006996644_730zbxau0\\\"\"}",
          "timestamp": "2025-09-04T17:29:56.830Z"
        }
      },
      {
        "file": "frontend/src/components/APIPartnersIntegration.js",
        "line": 615,
        "code": "return Array.from(crypto.getRandomValues(new Uint8Array(32)))",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 613,
            "code": "",
            "current": false
          },
          {
            "line": 614,
            "code": "const generateSecureSecret = () => {",
            "current": false
          },
          {
            "line": 615,
            "code": "return Array.from(crypto.getRandomValues(new Uint8Array(32)))",
            "current": true
          },
          {
            "line": 616,
            "code": ".map(b => b.toString(16).padStart(2, '0'))",
            "current": false
          },
          {
            "line": 617,
            "code": ".join('');",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/APIPartnersIntegration.js",
        "line": 628,
        "code": "return Array.from(new Uint8Array(hash))",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 626,
            "code": "const data = encoder.encode(secret);",
            "current": false
          },
          {
            "line": 627,
            "code": "const hash = await crypto.subtle.digest('SHA-256', data);",
            "current": false
          },
          {
            "line": 628,
            "code": "return Array.from(new Uint8Array(hash))",
            "current": true
          },
          {
            "line": 629,
            "code": ".map(b => b.toString(16).padStart(2, '0'))",
            "current": false
          },
          {
            "line": 630,
            "code": ".join('');",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/APIPartnersIntegration.js",
        "line": 649,
        "code": "return 'sha256=' + Array.from(new Uint8Array(signature))",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 647,
            "code": ");",
            "current": false
          },
          {
            "line": 648,
            "code": "",
            "current": false
          },
          {
            "line": 649,
            "code": "return 'sha256=' + Array.from(new Uint8Array(signature))",
            "current": true
          },
          {
            "line": 650,
            "code": ".map(b => b.toString(16).padStart(2, '0'))",
            "current": false
          },
          {
            "line": 651,
            "code": ".join('');",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/AdminDashboard.js",
        "line": 2,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 1,
            "code": "import React, { useState, useEffect } from 'react';",
            "current": false
          },
          {
            "line": 2,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 3,
            "code": "import {",
            "current": false
          },
          {
            "line": 4,
            "code": "Box,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/AdminDashboard.js",
        "line": 83,
        "code": "const { data: { user } } = await supabase.auth.getUser();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 81,
            "code": "",
            "current": false
          },
          {
            "line": 82,
            "code": "// üîÑ CARGAR TODO DESDE SUPABASE - CERO DATOS HARDCODEADOS",
            "current": false
          },
          {
            "line": 83,
            "code": "const { data: { user } } = await supabase.auth.getUser();",
            "current": true
          },
          {
            "line": 84,
            "code": "const tenantId = user?.tenant_id;",
            "current": false
          },
          {
            "line": 85,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/AdminDashboard.js",
        "line": 93,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 91,
            "code": "// HOLDINGS desde Supabase",
            "current": false
          },
          {
            "line": 92,
            "code": "const { data: holdingsData } = await supabase",
            "current": false
          },
          {
            "line": 93,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 94,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 95,
            "code": ".eq('tenant_id', tenantId);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/components/AdminDashboard.js",
        "line": 94,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 92,
            "code": "const { data: holdingsData } = await supabase",
            "current": false
          },
          {
            "line": 93,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 94,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 95,
            "code": ".eq('tenant_id', tenantId);",
            "current": false
          },
          {
            "line": 96,
            "code": "setHoldings(holdingsData || []);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/AdminDashboard.js",
        "line": 100,
        "code": ".from('usuarios')",
        "type": "OTHER",
        "table": "usuarios",
        "operation": "OTHER",
        "context": [
          {
            "line": 98,
            "code": "// USUARIOS desde Supabase",
            "current": false
          },
          {
            "line": 99,
            "code": "const { data: usuariosData } = await supabase",
            "current": false
          },
          {
            "line": 100,
            "code": ".from('usuarios')",
            "current": true
          },
          {
            "line": 101,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 102,
            "code": ".eq('tenant_id', tenantId);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "usuarios",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997425_hfzz4bmze\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.610Z"
        }
      },
      {
        "file": "frontend/src/components/AdminDashboard.js",
        "line": 101,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 99,
            "code": "const { data: usuariosData } = await supabase",
            "current": false
          },
          {
            "line": 100,
            "code": ".from('usuarios')",
            "current": false
          },
          {
            "line": 101,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 102,
            "code": ".eq('tenant_id', tenantId);",
            "current": false
          },
          {
            "line": 103,
            "code": "setUsuarios(usuariosData || []);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/AdminDashboard.js",
        "line": 107,
        "code": "supabase.from('activities').select('id', { count: 'exact' }).eq('tenant_id', tenantId),",
        "type": "SELECT",
        "table": "activities",
        "operation": "READ",
        "context": [
          {
            "line": 105,
            "code": "// M√âTRICAS calculadas desde Supabase",
            "current": false
          },
          {
            "line": 106,
            "code": "const [ratsResult, eipdResult, usuariosResult] = await Promise.all([",
            "current": false
          },
          {
            "line": 107,
            "code": "supabase.from('activities').select('id', { count: 'exact' }).eq('tenant_id', tenantId),",
            "current": true
          },
          {
            "line": 108,
            "code": "supabase.from('actividades_dpo').select('id', { count: 'exact' }).eq('tipo_actividad', 'EIPD'),",
            "current": false
          },
          {
            "line": 109,
            "code": "supabase.from('usuarios').select('id', { count: 'exact' }).eq('tenant_id', tenantId).eq('estado', 'ACTIVO')",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "activities",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"empresa_test_audit_1757006997811_vj9i2b9h6\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.014Z"
        }
      },
      {
        "file": "frontend/src/components/AdminDashboard.js",
        "line": 108,
        "code": "supabase.from('actividades_dpo').select('id', { count: 'exact' }).eq('tipo_actividad', 'EIPD'),",
        "type": "SELECT",
        "table": "actividades_dpo",
        "operation": "READ",
        "context": [
          {
            "line": 106,
            "code": "const [ratsResult, eipdResult, usuariosResult] = await Promise.all([",
            "current": false
          },
          {
            "line": 107,
            "code": "supabase.from('activities').select('id', { count: 'exact' }).eq('tenant_id', tenantId),",
            "current": false
          },
          {
            "line": 108,
            "code": "supabase.from('actividades_dpo').select('id', { count: 'exact' }).eq('tipo_actividad', 'EIPD'),",
            "current": true
          },
          {
            "line": 109,
            "code": "supabase.from('usuarios').select('id', { count: 'exact' }).eq('tenant_id', tenantId).eq('estado', 'ACTIVO')",
            "current": false
          },
          {
            "line": 110,
            "code": "]);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/components/AdminDashboard.js",
        "line": 109,
        "code": "supabase.from('usuarios').select('id', { count: 'exact' }).eq('tenant_id', tenantId).eq('estado', 'ACTIVO')",
        "type": "SELECT",
        "table": "usuarios",
        "operation": "READ",
        "context": [
          {
            "line": 107,
            "code": "supabase.from('activities').select('id', { count: 'exact' }).eq('tenant_id', tenantId),",
            "current": false
          },
          {
            "line": 108,
            "code": "supabase.from('actividades_dpo').select('id', { count: 'exact' }).eq('tipo_actividad', 'EIPD'),",
            "current": false
          },
          {
            "line": 109,
            "code": "supabase.from('usuarios').select('id', { count: 'exact' }).eq('tenant_id', tenantId).eq('estado', 'ACTIVO')",
            "current": true
          },
          {
            "line": 110,
            "code": "]);",
            "current": false
          },
          {
            "line": 111,
            "code": "",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "usuarios",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997425_hfzz4bmze\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.610Z"
        }
      },
      {
        "file": "frontend/src/components/AdminDashboard.js",
        "line": 128,
        "code": ".from('system_alerts')",
        "type": "OTHER",
        "table": "system_alerts",
        "operation": "OTHER",
        "context": [
          {
            "line": 126,
            "code": "// ALERTAS desde Supabase",
            "current": false
          },
          {
            "line": 127,
            "code": "const { data: alertasData } = await supabase",
            "current": false
          },
          {
            "line": 128,
            "code": ".from('system_alerts')",
            "current": true
          },
          {
            "line": 129,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 130,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "system_alerts",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998591_x858n75nq\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.773Z"
        }
      },
      {
        "file": "frontend/src/components/AdminDashboard.js",
        "line": 129,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 127,
            "code": "const { data: alertasData } = await supabase",
            "current": false
          },
          {
            "line": 128,
            "code": ".from('system_alerts')",
            "current": false
          },
          {
            "line": 129,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 130,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 131,
            "code": ".eq('resolved', false)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/CalendarView.js",
        "line": 55,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 53,
            "code": "} from '@mui/icons-material';",
            "current": false
          },
          {
            "line": 54,
            "code": "import { ratService } from '../services/ratService';",
            "current": false
          },
          {
            "line": 55,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 56,
            "code": "import { useTenant } from '../contexts/TenantContext';",
            "current": false
          },
          {
            "line": 57,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/CalendarView.js",
        "line": 145,
        "code": ".from('activities') // Usar tabla activities vigente para eventos",
        "type": "OTHER",
        "table": "activities",
        "operation": "OTHER",
        "context": [
          {
            "line": 143,
            "code": "",
            "current": false
          },
          {
            "line": 144,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 145,
            "code": ".from('activities') // Usar tabla activities vigente para eventos",
            "current": true
          },
          {
            "line": 146,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 147,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "activities",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"empresa_test_audit_1757006997811_vj9i2b9h6\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.014Z"
        }
      },
      {
        "file": "frontend/src/components/CalendarView.js",
        "line": 146,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 144,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 145,
            "code": ".from('activities') // Usar tabla activities vigente para eventos",
            "current": false
          },
          {
            "line": 146,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 147,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 148,
            "code": ".gte('fecha_evento', startDate.toISOString())",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/ComplianceMetrics.js",
        "line": 2,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 1,
            "code": "import React, { useState, useEffect } from 'react';",
            "current": false
          },
          {
            "line": 2,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 3,
            "code": "import {",
            "current": false
          },
          {
            "line": 4,
            "code": "Box,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/ComplianceMetrics.js",
        "line": 226,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 224,
            "code": "// 1. Obtener RATs no certificados (necesitan revisi√≥n DPO)",
            "current": false
          },
          {
            "line": 225,
            "code": "const { data: ratsNoCertificados, error: ratsError } = await supabase",
            "current": false
          },
          {
            "line": 226,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 227,
            "code": ".select('id, nombre_actividad, estado, metadata')",
            "current": false
          },
          {
            "line": 228,
            "code": ".or('estado.neq.CERTIFICADO,estado.is.null');",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/components/ComplianceMetrics.js",
        "line": 227,
        "code": ".select('id, nombre_actividad, estado, metadata')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 225,
            "code": "const { data: ratsNoCertificados, error: ratsError } = await supabase",
            "current": false
          },
          {
            "line": 226,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 227,
            "code": ".select('id, nombre_actividad, estado, metadata')",
            "current": true
          },
          {
            "line": 228,
            "code": ".or('estado.neq.CERTIFICADO,estado.is.null');",
            "current": false
          },
          {
            "line": 229,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/ComplianceMetrics.js",
        "line": 241,
        "code": ".from('actividades_dpo')",
        "type": "OTHER",
        "table": "actividades_dpo",
        "operation": "OTHER",
        "context": [
          {
            "line": 239,
            "code": "// 2. Obtener actividades DPO espec√≠ficas de la tabla",
            "current": false
          },
          {
            "line": 240,
            "code": "const { data: actividadesDPO, error: dpoError } = await supabase",
            "current": false
          },
          {
            "line": 241,
            "code": ".from('actividades_dpo')",
            "current": true
          },
          {
            "line": 242,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 243,
            "code": ".neq('estado', 'completado')",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/components/ComplianceMetrics.js",
        "line": 242,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 240,
            "code": "const { data: actividadesDPO, error: dpoError } = await supabase",
            "current": false
          },
          {
            "line": 241,
            "code": ".from('actividades_dpo')",
            "current": false
          },
          {
            "line": 242,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 243,
            "code": ".neq('estado', 'completado')",
            "current": false
          },
          {
            "line": 244,
            "code": ".limit(10);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/ComplianceMetrics.js",
        "line": 257,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 255,
            "code": "// 3. Obtener RATs sin plazo de conservaci√≥n definido",
            "current": false
          },
          {
            "line": 256,
            "code": "const { data: sinPlazoConservacion, error: plazoError } = await supabase",
            "current": false
          },
          {
            "line": 257,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 258,
            "code": ".select('id, nombre_actividad')",
            "current": false
          },
          {
            "line": 259,
            "code": ".or('plazo_conservacion.is.null,plazo_conservacion.eq.\"\"')",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/components/ComplianceMetrics.js",
        "line": 258,
        "code": ".select('id, nombre_actividad')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 256,
            "code": "const { data: sinPlazoConservacion, error: plazoError } = await supabase",
            "current": false
          },
          {
            "line": 257,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 258,
            "code": ".select('id, nombre_actividad')",
            "current": true
          },
          {
            "line": 259,
            "code": ".or('plazo_conservacion.is.null,plazo_conservacion.eq.\"\"')",
            "current": false
          },
          {
            "line": 260,
            "code": ".limit(20);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/ComplianceMetrics.js",
        "line": 273,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 271,
            "code": "// 4. Buscar RATs con transferencias internacionales sin salvaguardias",
            "current": false
          },
          {
            "line": 272,
            "code": "const { data: transferenciasRiesgo, error: transError } = await supabase",
            "current": false
          },
          {
            "line": 273,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 274,
            "code": ".select('id, nombre_actividad, transferencias_internacionales')",
            "current": false
          },
          {
            "line": 275,
            "code": ".not('transferencias_internacionales', 'is', null);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/components/ComplianceMetrics.js",
        "line": 274,
        "code": ".select('id, nombre_actividad, transferencias_internacionales')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 272,
            "code": "const { data: transferenciasRiesgo, error: transError } = await supabase",
            "current": false
          },
          {
            "line": 273,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 274,
            "code": ".select('id, nombre_actividad, transferencias_internacionales')",
            "current": true
          },
          {
            "line": 275,
            "code": ".not('transferencias_internacionales', 'is', null);",
            "current": false
          },
          {
            "line": 276,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/DPAGenerator.js",
        "line": 50,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 48,
            "code": "} from '@mui/icons-material';",
            "current": false
          },
          {
            "line": 49,
            "code": "import { useTenant } from '../contexts/TenantContext';",
            "current": false
          },
          {
            "line": 50,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 51,
            "code": "",
            "current": false
          },
          {
            "line": 52,
            "code": "const DPAGenerator = () => {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/DPAGenerator.js",
        "line": 154,
        "code": ".from('proveedores')",
        "type": "OTHER",
        "table": "proveedores",
        "operation": "OTHER",
        "context": [
          {
            "line": 152,
            "code": "",
            "current": false
          },
          {
            "line": 153,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 154,
            "code": ".from('proveedores')",
            "current": true
          },
          {
            "line": 155,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 156,
            "code": ".eq('tenant_id', currentTenant?.id);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "proveedores",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006999360_mm271x3en\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.535Z"
        }
      },
      {
        "file": "frontend/src/components/DPAGenerator.js",
        "line": 155,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 153,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 154,
            "code": ".from('proveedores')",
            "current": false
          },
          {
            "line": 155,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 156,
            "code": ".eq('tenant_id', currentTenant?.id);",
            "current": false
          },
          {
            "line": 157,
            "code": "// ‚ùå REMOVED: .eq('activo', true) - columna no existe",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/DPAGenerator.js",
        "line": 220,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 218,
            "code": "// üîÑ FALLBACK: Buscar en organizaciones si no hay currentTenant",
            "current": false
          },
          {
            "line": 219,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 220,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 221,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 222,
            "code": ".eq('id', currentTenant?.id)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/components/DPAGenerator.js",
        "line": 221,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 219,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 220,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 221,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 222,
            "code": ".eq('id', currentTenant?.id)",
            "current": false
          },
          {
            "line": 223,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/DPAGenerator.js",
        "line": 316,
        "code": ".from('documentos_dpa')",
        "type": "OTHER",
        "table": "documentos_dpa",
        "operation": "OTHER",
        "context": [
          {
            "line": 314,
            "code": "try {",
            "current": false
          },
          {
            "line": 315,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 316,
            "code": ".from('documentos_dpa')",
            "current": true
          },
          {
            "line": 317,
            "code": ".insert([{",
            "current": false
          },
          {
            "line": 318,
            "code": "tenant_id: currentTenant?.id,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "documentos_dpa",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006999735_3oqg3i598\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.918Z"
        }
      },
      {
        "file": "frontend/src/components/DPAGenerator.js",
        "line": 317,
        "code": ".insert([{",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 315,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 316,
            "code": ".from('documentos_dpa')",
            "current": false
          },
          {
            "line": 317,
            "code": ".insert([{",
            "current": true
          },
          {
            "line": 318,
            "code": "tenant_id: currentTenant?.id,",
            "current": false
          },
          {
            "line": 319,
            "code": "proveedor_id: selectedProveedor?.id || null,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/DiagnosticCenter.js",
        "line": 56,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 54,
            "code": "} from '@mui/icons-material';",
            "current": false
          },
          {
            "line": 55,
            "code": "import frontendValidator from '../utils/frontendValidator';",
            "current": false
          },
          {
            "line": 56,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 57,
            "code": "",
            "current": false
          },
          {
            "line": 58,
            "code": "const DiagnosticCenter = () => {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/EIPDTemplates.js",
        "line": 63,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 61,
            "code": "} from '@mui/icons-material';",
            "current": false
          },
          {
            "line": 62,
            "code": "import { ratService } from '../services/ratService';",
            "current": false
          },
          {
            "line": 63,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 64,
            "code": "import { useTenant } from '../contexts/TenantContext';",
            "current": false
          },
          {
            "line": 65,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/EIPDTemplates.js",
        "line": 286,
        "code": ".from('categories') // Usar tabla categories vigente",
        "type": "OTHER",
        "table": "categories",
        "operation": "OTHER",
        "context": [
          {
            "line": 284,
            "code": "try {",
            "current": false
          },
          {
            "line": 285,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 286,
            "code": ".from('categories') // Usar tabla categories vigente",
            "current": true
          },
          {
            "line": 287,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 288,
            "code": ".order('name');",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "categories",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007000119_esbwadbdk\\\"\"}",
          "timestamp": "2025-09-04T17:30:00.299Z"
        }
      },
      {
        "file": "frontend/src/components/EIPDTemplates.js",
        "line": 287,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 285,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 286,
            "code": ".from('categories') // Usar tabla categories vigente",
            "current": false
          },
          {
            "line": 287,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 288,
            "code": ".order('name');",
            "current": false
          },
          {
            "line": 289,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/EIPDTemplates.js",
        "line": 308,
        "code": ".from('sandbox_professional_templates') // Usar tabla templates vigente",
        "type": "OTHER",
        "table": "sandbox_professional_templates",
        "operation": "OTHER",
        "context": [
          {
            "line": 306,
            "code": "",
            "current": false
          },
          {
            "line": 307,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 308,
            "code": ".from('sandbox_professional_templates') // Usar tabla templates vigente",
            "current": true
          },
          {
            "line": 309,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 310,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "sandbox_professional_templates",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007000500_sght2snd1\\\"\"}",
          "timestamp": "2025-09-04T17:30:00.699Z"
        }
      },
      {
        "file": "frontend/src/components/EIPDTemplates.js",
        "line": 309,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 307,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 308,
            "code": ".from('sandbox_professional_templates') // Usar tabla templates vigente",
            "current": false
          },
          {
            "line": 309,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 310,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 311,
            "code": ".order('created_at', { ascending: false });",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/EIPDTemplates.js",
        "line": 363,
        "code": ".from('sandbox_professional_templates') // Usar tabla templates vigente",
        "type": "OTHER",
        "table": "sandbox_professional_templates",
        "operation": "OTHER",
        "context": [
          {
            "line": 361,
            "code": "",
            "current": false
          },
          {
            "line": 362,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 363,
            "code": ".from('sandbox_professional_templates') // Usar tabla templates vigente",
            "current": true
          },
          {
            "line": 364,
            "code": ".insert([{",
            "current": false
          },
          {
            "line": 365,
            "code": "...nuevoTemplate,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "sandbox_professional_templates",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007000500_sght2snd1\\\"\"}",
          "timestamp": "2025-09-04T17:30:00.699Z"
        }
      },
      {
        "file": "frontend/src/components/EIPDTemplates.js",
        "line": 364,
        "code": ".insert([{",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 362,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 363,
            "code": ".from('sandbox_professional_templates') // Usar tabla templates vigente",
            "current": false
          },
          {
            "line": 364,
            "code": ".insert([{",
            "current": true
          },
          {
            "line": 365,
            "code": "...nuevoTemplate,",
            "current": false
          },
          {
            "line": 366,
            "code": "tenant_id: tenantId",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/EIPDTemplates.js",
        "line": 368,
        "code": ".select();",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 366,
            "code": "tenant_id: tenantId",
            "current": false
          },
          {
            "line": 367,
            "code": "}])",
            "current": false
          },
          {
            "line": 368,
            "code": ".select();",
            "current": true
          },
          {
            "line": 369,
            "code": "",
            "current": false
          },
          {
            "line": 370,
            "code": "if (error) throw error;",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/GestionProveedores.js",
        "line": 76,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 74,
            "code": "import { useAuth } from '../contexts/AuthContext';",
            "current": false
          },
          {
            "line": 75,
            "code": "import proveedoresService from '../services/proveedoresService';",
            "current": false
          },
          {
            "line": 76,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 77,
            "code": "",
            "current": false
          },
          {
            "line": 78,
            "code": "const GestionProveedores = () => {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/GestionProveedores.js",
        "line": 155,
        "code": "const { data: { user } } = await supabase.auth.getUser();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 153,
            "code": "const initializeDefaultProviders = async () => {",
            "current": false
          },
          {
            "line": 154,
            "code": "try {",
            "current": false
          },
          {
            "line": 155,
            "code": "const { data: { user } } = await supabase.auth.getUser();",
            "current": true
          },
          {
            "line": 156,
            "code": "const tenantId = 'juridica_digital';",
            "current": false
          },
          {
            "line": 157,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/GestionProveedores.js",
        "line": 193,
        "code": "await supabase.from('proveedores').insert(defaultProviders);",
        "type": "INSERT",
        "table": "proveedores",
        "operation": "CREATE",
        "context": [
          {
            "line": 191,
            "code": "];",
            "current": false
          },
          {
            "line": 192,
            "code": "",
            "current": false
          },
          {
            "line": 193,
            "code": "await supabase.from('proveedores').insert(defaultProviders);",
            "current": true
          },
          {
            "line": 194,
            "code": "// //console.log('‚úÖ Proveedores predeterminados creados');",
            "current": false
          },
          {
            "line": 195,
            "code": "} catch (error) {",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "proveedores",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006999360_mm271x3en\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.535Z"
        }
      },
      {
        "file": "frontend/src/components/ImmutableAuditLog.js",
        "line": 67,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 65,
            "code": "} from '@mui/icons-material';",
            "current": false
          },
          {
            "line": 66,
            "code": "import { ratService } from '../services/ratService';",
            "current": false
          },
          {
            "line": 67,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 68,
            "code": "import { useTenant } from '../contexts/TenantContext';",
            "current": false
          },
          {
            "line": 69,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/ImmutableAuditLog.js",
        "line": 167,
        "code": ".from('audit_logs')",
        "type": "OTHER",
        "table": "audit_logs",
        "operation": "OTHER",
        "context": [
          {
            "line": 165,
            "code": "",
            "current": false
          },
          {
            "line": 166,
            "code": "let query = supabase",
            "current": false
          },
          {
            "line": 167,
            "code": ".from('audit_logs')",
            "current": true
          },
          {
            "line": 168,
            "code": ".select(`",
            "current": false
          },
          {
            "line": 169,
            "code": "*,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "audit_logs",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007000900_kwp1ha94w\\\"\"}",
          "timestamp": "2025-09-04T17:30:01.095Z"
        }
      },
      {
        "file": "frontend/src/components/ImmutableAuditLog.js",
        "line": 168,
        "code": ".select(`",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 166,
            "code": "let query = supabase",
            "current": false
          },
          {
            "line": 167,
            "code": ".from('audit_logs')",
            "current": false
          },
          {
            "line": 168,
            "code": ".select(`",
            "current": true
          },
          {
            "line": 169,
            "code": "*,",
            "current": false
          },
          {
            "line": 170,
            "code": "usuario:usuarios(first_name, last_name, email, role),",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/NotificationCenter.js",
        "line": 66,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 64,
            "code": "} from '@mui/icons-material';",
            "current": false
          },
          {
            "line": 65,
            "code": "import { ratService } from '../services/ratService';",
            "current": false
          },
          {
            "line": 66,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 67,
            "code": "import { useTenant } from '../contexts/TenantContext';",
            "current": false
          },
          {
            "line": 68,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/NotificationCenter.js",
        "line": 162,
        "code": ".from('dpo_notifications')",
        "type": "OTHER",
        "table": "dpo_notifications",
        "operation": "OTHER",
        "context": [
          {
            "line": 160,
            "code": "// Consulta simplificada sin join para evitar errores de relaci√≥n",
            "current": false
          },
          {
            "line": 161,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 162,
            "code": ".from('dpo_notifications')",
            "current": true
          },
          {
            "line": 163,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 164,
            "code": ".or(`tenant_id.eq.${tenantId},tenant_id.eq.default`)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "dpo_notifications",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007001296_x2bjv8rug\\\"\"}",
          "timestamp": "2025-09-04T17:30:01.480Z"
        }
      },
      {
        "file": "frontend/src/components/NotificationCenter.js",
        "line": 163,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 161,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 162,
            "code": ".from('dpo_notifications')",
            "current": false
          },
          {
            "line": 163,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 164,
            "code": ".or(`tenant_id.eq.${tenantId},tenant_id.eq.default`)",
            "current": false
          },
          {
            "line": 165,
            "code": ".not('tipo_notificacion', 'is', null)  // FILTRAR tipo_notificacion NULL",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/NotificationCenter.js",
        "line": 275,
        "code": ".from('dpo_notifications')",
        "type": "OTHER",
        "table": "dpo_notifications",
        "operation": "OTHER",
        "context": [
          {
            "line": 273,
            "code": "try {",
            "current": false
          },
          {
            "line": 274,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 275,
            "code": ".from('dpo_notifications')",
            "current": true
          },
          {
            "line": 276,
            "code": ".update({ leida_en: new Date().toISOString() })",
            "current": false
          },
          {
            "line": 277,
            "code": ".eq('id', notificationId);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "dpo_notifications",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007001296_x2bjv8rug\\\"\"}",
          "timestamp": "2025-09-04T17:30:01.480Z"
        }
      },
      {
        "file": "frontend/src/components/NotificationCenter.js",
        "line": 276,
        "code": ".update({ leida_en: new Date().toISOString() })",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 274,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 275,
            "code": ".from('dpo_notifications')",
            "current": false
          },
          {
            "line": 276,
            "code": ".update({ leida_en: new Date().toISOString() })",
            "current": true
          },
          {
            "line": 277,
            "code": ".eq('id', notificationId);",
            "current": false
          },
          {
            "line": 278,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/NotificationCenter.js",
        "line": 293,
        "code": ".from('dpo_notifications')",
        "type": "OTHER",
        "table": "dpo_notifications",
        "operation": "OTHER",
        "context": [
          {
            "line": 291,
            "code": "try {",
            "current": false
          },
          {
            "line": 292,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 293,
            "code": ".from('dpo_notifications')",
            "current": true
          },
          {
            "line": 294,
            "code": ".delete()",
            "current": false
          },
          {
            "line": 295,
            "code": ".eq('id', notificationId);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "dpo_notifications",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007001296_x2bjv8rug\\\"\"}",
          "timestamp": "2025-09-04T17:30:01.480Z"
        }
      },
      {
        "file": "frontend/src/components/NotificationCenter.js",
        "line": 294,
        "code": ".delete()",
        "type": "DELETE",
        "table": "UNKNOWN",
        "operation": "DELETE",
        "context": [
          {
            "line": 292,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 293,
            "code": ".from('dpo_notifications')",
            "current": false
          },
          {
            "line": 294,
            "code": ".delete()",
            "current": true
          },
          {
            "line": 295,
            "code": ".eq('id', notificationId);",
            "current": false
          },
          {
            "line": 296,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/NotificationCenter.js",
        "line": 311,
        "code": ".from('dpo_notifications')",
        "type": "OTHER",
        "table": "dpo_notifications",
        "operation": "OTHER",
        "context": [
          {
            "line": 309,
            "code": "",
            "current": false
          },
          {
            "line": 310,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 311,
            "code": ".from('dpo_notifications')",
            "current": true
          },
          {
            "line": 312,
            "code": ".update({ leida_en: new Date().toISOString() })",
            "current": false
          },
          {
            "line": 313,
            "code": ".in('id', unreadIds);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "dpo_notifications",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007001296_x2bjv8rug\\\"\"}",
          "timestamp": "2025-09-04T17:30:01.480Z"
        }
      },
      {
        "file": "frontend/src/components/NotificationCenter.js",
        "line": 312,
        "code": ".update({ leida_en: new Date().toISOString() })",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 310,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 311,
            "code": ".from('dpo_notifications')",
            "current": false
          },
          {
            "line": 312,
            "code": ".update({ leida_en: new Date().toISOString() })",
            "current": true
          },
          {
            "line": 313,
            "code": ".in('id', unreadIds);",
            "current": false
          },
          {
            "line": 314,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/RATEditPage.js",
        "line": 2,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 1,
            "code": "import React, { useState, useEffect } from 'react';",
            "current": false
          },
          {
            "line": 2,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 3,
            "code": "import { useAuth } from '../hooks/useAuth';",
            "current": false
          },
          {
            "line": 4,
            "code": "// import preventiveAI from '../utils/preventiveAI'; // REMOVIDO - causaba errores de build",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/RATEditPage.js",
        "line": 137,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 135,
            "code": "// CONEXI√ìN REAL SUPABASE - tabla mapeo_datos_rat",
            "current": false
          },
          {
            "line": 136,
            "code": "const { data: ratData, error } = await supabase",
            "current": false
          },
          {
            "line": 137,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 138,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 139,
            "code": ".eq('id', ratId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/components/RATEditPage.js",
        "line": 138,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 136,
            "code": "const { data: ratData, error } = await supabase",
            "current": false
          },
          {
            "line": 137,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 138,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 139,
            "code": ".eq('id', ratId)",
            "current": false
          },
          {
            "line": 140,
            "code": ".eq('tenant_id', currentTenant?.id || 1)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/RATEditPage.js",
        "line": 366,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 364,
            "code": "",
            "current": false
          },
          {
            "line": 365,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 366,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 367,
            "code": ".update(ratDataToSave)",
            "current": false
          },
          {
            "line": 368,
            "code": ".eq('id', ratId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/components/RATEditPage.js",
        "line": 367,
        "code": ".update(ratDataToSave)",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 365,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 366,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 367,
            "code": ".update(ratDataToSave)",
            "current": true
          },
          {
            "line": 368,
            "code": ".eq('id', ratId)",
            "current": false
          },
          {
            "line": 369,
            "code": ".eq('tenant_id', currentTenant?.id || 1)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/RATEditPage.js",
        "line": 370,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 368,
            "code": ".eq('id', ratId)",
            "current": false
          },
          {
            "line": 369,
            "code": ".eq('tenant_id', currentTenant?.id || 1)",
            "current": false
          },
          {
            "line": 370,
            "code": ".select()",
            "current": true
          },
          {
            "line": 371,
            "code": ".single();",
            "current": false
          },
          {
            "line": 372,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/RATEditPage.js",
        "line": 383,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 381,
            "code": "",
            "current": false
          },
          {
            "line": 382,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 383,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 384,
            "code": ".insert({",
            "current": false
          },
          {
            "line": 385,
            "code": "...ratDataToSave,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/components/RATEditPage.js",
        "line": 384,
        "code": ".insert({",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 382,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 383,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 384,
            "code": ".insert({",
            "current": true
          },
          {
            "line": 385,
            "code": "...ratDataToSave,",
            "current": false
          },
          {
            "line": 386,
            "code": "created_at: new Date().toISOString()",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/RATEditPage.js",
        "line": 388,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 386,
            "code": "created_at: new Date().toISOString()",
            "current": false
          },
          {
            "line": 387,
            "code": "})",
            "current": false
          },
          {
            "line": 388,
            "code": ".select()",
            "current": true
          },
          {
            "line": 389,
            "code": ".single();",
            "current": false
          },
          {
            "line": 390,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/RATEditPage.js",
        "line": 399,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 397,
            "code": "// VALIDAR PERSISTENCIA",
            "current": false
          },
          {
            "line": 398,
            "code": "const { data: verification } = await supabase",
            "current": false
          },
          {
            "line": 399,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 400,
            "code": ".select('id, nombre_actividad, estado')",
            "current": false
          },
          {
            "line": 401,
            "code": ".eq('id', result.id)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/components/RATEditPage.js",
        "line": 400,
        "code": ".select('id, nombre_actividad, estado')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 398,
            "code": "const { data: verification } = await supabase",
            "current": false
          },
          {
            "line": 399,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 400,
            "code": ".select('id, nombre_actividad, estado')",
            "current": true
          },
          {
            "line": 401,
            "code": ".eq('id', result.id)",
            "current": false
          },
          {
            "line": 402,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/RATSystemProfessional.js",
        "line": 80,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 78,
            "code": "import EmpresaDataManager from './EmpresaDataManager';",
            "current": false
          },
          {
            "line": 79,
            "code": "import PageLayout from './PageLayout';",
            "current": false
          },
          {
            "line": 80,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 81,
            "code": "import { useTenant } from '../contexts/TenantContext';",
            "current": false
          },
          {
            "line": 82,
            "code": "import { useAuth } from '../contexts/AuthContext';",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/RATSystemProfessional.js",
        "line": 472,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 470,
            "code": "",
            "current": false
          },
          {
            "line": 471,
            "code": "const { data: ultimosRATs, error } = await supabase",
            "current": false
          },
          {
            "line": 472,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 473,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 474,
            "code": ".eq('tenant_id', String(currentTenant.id)) // Asegurar string",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/components/RATSystemProfessional.js",
        "line": 473,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 471,
            "code": "const { data: ultimosRATs, error } = await supabase",
            "current": false
          },
          {
            "line": 472,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 473,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 474,
            "code": ".eq('tenant_id', String(currentTenant.id)) // Asegurar string",
            "current": false
          },
          {
            "line": 475,
            "code": ".order('created_at', { ascending: false })",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/RATSystemProfessional.js",
        "line": 1120,
        "code": ".from('evaluaciones_impacto')",
        "type": "OTHER",
        "table": "evaluaciones_impacto",
        "operation": "OTHER",
        "context": [
          {
            "line": 1118,
            "code": "// Guardar EIPD en Supabase",
            "current": false
          },
          {
            "line": 1119,
            "code": "const { data: eipdGuardado, error: eipdError } = await supabase",
            "current": false
          },
          {
            "line": 1120,
            "code": ".from('evaluaciones_impacto')",
            "current": true
          },
          {
            "line": 1121,
            "code": ".insert([eipdData])",
            "current": false
          },
          {
            "line": 1122,
            "code": ".select()",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "evaluaciones_impacto",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007001680_9e5fqdquo\\\"\"}",
          "timestamp": "2025-09-04T17:30:01.858Z"
        }
      },
      {
        "file": "frontend/src/components/RATSystemProfessional.js",
        "line": 1121,
        "code": ".insert([eipdData])",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 1119,
            "code": "const { data: eipdGuardado, error: eipdError } = await supabase",
            "current": false
          },
          {
            "line": 1120,
            "code": ".from('evaluaciones_impacto')",
            "current": false
          },
          {
            "line": 1121,
            "code": ".insert([eipdData])",
            "current": true
          },
          {
            "line": 1122,
            "code": ".select()",
            "current": false
          },
          {
            "line": 1123,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/RATSystemProfessional.js",
        "line": 1122,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 1120,
            "code": ".from('evaluaciones_impacto')",
            "current": false
          },
          {
            "line": 1121,
            "code": ".insert([eipdData])",
            "current": false
          },
          {
            "line": 1122,
            "code": ".select()",
            "current": true
          },
          {
            "line": 1123,
            "code": ".single();",
            "current": false
          },
          {
            "line": 1124,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/RATSystemProfessional.js",
        "line": 1130,
        "code": ".from('rat_eipd_associations')",
        "type": "OTHER",
        "table": "rat_eipd_associations",
        "operation": "OTHER",
        "context": [
          {
            "line": 1128,
            "code": "// Asociar EIPD con el RAT",
            "current": false
          },
          {
            "line": 1129,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 1130,
            "code": ".from('rat_eipd_associations')",
            "current": true
          },
          {
            "line": 1131,
            "code": ".insert({",
            "current": false
          },
          {
            "line": 1132,
            "code": "rat_id: resultado.id,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "rat_eipd_associations",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007002057_fo3wj0thx\\\"\"}",
          "timestamp": "2025-09-04T17:30:02.254Z"
        }
      },
      {
        "file": "frontend/src/components/RATSystemProfessional.js",
        "line": 1131,
        "code": ".insert({",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 1129,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 1130,
            "code": ".from('rat_eipd_associations')",
            "current": false
          },
          {
            "line": 1131,
            "code": ".insert({",
            "current": true
          },
          {
            "line": 1132,
            "code": "rat_id: resultado.id,",
            "current": false
          },
          {
            "line": 1133,
            "code": "eipd_id: eipdGuardado.id,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/RATSystemProfessional.js",
        "line": 1150,
        "code": ".from('dpo_notifications')",
        "type": "OTHER",
        "table": "dpo_notifications",
        "operation": "OTHER",
        "context": [
          {
            "line": 1148,
            "code": "",
            "current": false
          },
          {
            "line": 1149,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 1150,
            "code": ".from('dpo_notifications')",
            "current": true
          },
          {
            "line": 1151,
            "code": ".insert({",
            "current": false
          },
          {
            "line": 1152,
            "code": "rat_id: resultado.id,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "dpo_notifications",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007001296_x2bjv8rug\\\"\"}",
          "timestamp": "2025-09-04T17:30:01.480Z"
        }
      },
      {
        "file": "frontend/src/components/RATSystemProfessional.js",
        "line": 1151,
        "code": ".insert({",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 1149,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 1150,
            "code": ".from('dpo_notifications')",
            "current": false
          },
          {
            "line": 1151,
            "code": ".insert({",
            "current": true
          },
          {
            "line": 1152,
            "code": "rat_id: resultado.id,",
            "current": false
          },
          {
            "line": 1153,
            "code": "eipd_id: eipdGuardado.id,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/ReportGenerator.js",
        "line": 43,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 41,
            "code": "Schedule as ScheduleIcon",
            "current": false
          },
          {
            "line": 42,
            "code": "} from '@mui/icons-material';",
            "current": false
          },
          {
            "line": 43,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 44,
            "code": "import { useTenant } from '../contexts/TenantContext';",
            "current": false
          },
          {
            "line": 45,
            "code": "import { useAuth } from '../contexts/AuthContext';",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/ReportGenerator.js",
        "line": 77,
        "code": ".from('generated_documents')",
        "type": "OTHER",
        "table": "generated_documents",
        "operation": "OTHER",
        "context": [
          {
            "line": 75,
            "code": "try {",
            "current": false
          },
          {
            "line": 76,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 77,
            "code": ".from('generated_documents')",
            "current": true
          },
          {
            "line": 78,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 79,
            "code": ".eq('tenant_id', currentTenant.id)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "generated_documents",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007002454_ceehesdkb\\\"\"}",
          "timestamp": "2025-09-04T17:30:02.635Z"
        }
      },
      {
        "file": "frontend/src/components/ReportGenerator.js",
        "line": 78,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 76,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 77,
            "code": ".from('generated_documents')",
            "current": false
          },
          {
            "line": 78,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 79,
            "code": ".eq('tenant_id', currentTenant.id)",
            "current": false
          },
          {
            "line": 80,
            "code": ".in('document_type', ['INFORME_RAT_PDF', 'EXPORT_EXCEL_RATS', 'REPORTE_CONSOLIDADO'])",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/ReportGenerator.js",
        "line": 97,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 95,
            "code": "// üìä RECOPILAR DATOS COMPLETOS SEG√öN DIAGRAMA",
            "current": false
          },
          {
            "line": 96,
            "code": "const { data: ratsData, error: ratsError } = await supabase",
            "current": false
          },
          {
            "line": 97,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 98,
            "code": ".select(`",
            "current": false
          },
          {
            "line": 99,
            "code": "*,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/components/ReportGenerator.js",
        "line": 98,
        "code": ".select(`",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 96,
            "code": "const { data: ratsData, error: ratsError } = await supabase",
            "current": false
          },
          {
            "line": 97,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 98,
            "code": ".select(`",
            "current": true
          },
          {
            "line": 99,
            "code": "*,",
            "current": false
          },
          {
            "line": 100,
            "code": "organizaciones!inner(razon_social, rut, direccion, comuna, ciudad, email_contacto)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/ReportGenerator.js",
        "line": 109,
        "code": ".from('generated_documents')",
        "type": "OTHER",
        "table": "generated_documents",
        "operation": "OTHER",
        "context": [
          {
            "line": 107,
            "code": "// üìÑ DOCUMENTOS ASOCIADOS",
            "current": false
          },
          {
            "line": 108,
            "code": "const { data: documentos, error: docError } = await supabase",
            "current": false
          },
          {
            "line": 109,
            "code": ".from('generated_documents')",
            "current": true
          },
          {
            "line": 110,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 111,
            "code": ".in('rat_id', ratIds);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "generated_documents",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007002454_ceehesdkb\\\"\"}",
          "timestamp": "2025-09-04T17:30:02.635Z"
        }
      },
      {
        "file": "frontend/src/components/ReportGenerator.js",
        "line": 110,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 108,
            "code": "const { data: documentos, error: docError } = await supabase",
            "current": false
          },
          {
            "line": 109,
            "code": ".from('generated_documents')",
            "current": false
          },
          {
            "line": 110,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 111,
            "code": ".in('rat_id', ratIds);",
            "current": false
          },
          {
            "line": 112,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/ReportGenerator.js",
        "line": 117,
        "code": ".from('rat_proveedores')",
        "type": "OTHER",
        "table": "rat_proveedores",
        "operation": "OTHER",
        "context": [
          {
            "line": 115,
            "code": "// üè¢ PROVEEDORES Y DPAS",
            "current": false
          },
          {
            "line": 116,
            "code": "const { data: proveedoresData, error: provError } = await supabase",
            "current": false
          },
          {
            "line": 117,
            "code": ".from('rat_proveedores')",
            "current": true
          },
          {
            "line": 118,
            "code": ".select(`",
            "current": false
          },
          {
            "line": 119,
            "code": "*,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "rat_proveedores",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007002836_idlv8dc03\\\"\"}",
          "timestamp": "2025-09-04T17:30:03.020Z"
        }
      },
      {
        "file": "frontend/src/components/ReportGenerator.js",
        "line": 118,
        "code": ".select(`",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 116,
            "code": "const { data: proveedoresData, error: provError } = await supabase",
            "current": false
          },
          {
            "line": 117,
            "code": ".from('rat_proveedores')",
            "current": false
          },
          {
            "line": 118,
            "code": ".select(`",
            "current": true
          },
          {
            "line": 119,
            "code": "*,",
            "current": false
          },
          {
            "line": 120,
            "code": "proveedores!inner(nombre, tipo, pais),",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/ReportGenerator.js",
        "line": 129,
        "code": ".from('actividades_dpo')",
        "type": "OTHER",
        "table": "actividades_dpo",
        "operation": "OTHER",
        "context": [
          {
            "line": 127,
            "code": "// üìã ACTIVIDADES DPO",
            "current": false
          },
          {
            "line": 128,
            "code": "const { data: actividadesData, error: actError } = await supabase",
            "current": false
          },
          {
            "line": 129,
            "code": ".from('actividades_dpo')",
            "current": true
          },
          {
            "line": 130,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 131,
            "code": ".in('rat_id', ratIds);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/components/ReportGenerator.js",
        "line": 130,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 128,
            "code": "const { data: actividadesData, error: actError } = await supabase",
            "current": false
          },
          {
            "line": 129,
            "code": ".from('actividades_dpo')",
            "current": false
          },
          {
            "line": 130,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 131,
            "code": ".in('rat_id', ratIds);",
            "current": false
          },
          {
            "line": 132,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/ReportGenerator.js",
        "line": 139,
        "code": ".from('audit_log')",
        "type": "OTHER",
        "table": "audit_log",
        "operation": "OTHER",
        "context": [
          {
            "line": 137,
            "code": "if (reportConfig.incluirAuditoria) {",
            "current": false
          },
          {
            "line": 138,
            "code": "const { data: auditResult, error: auditError } = await supabase",
            "current": false
          },
          {
            "line": 139,
            "code": ".from('audit_log')",
            "current": true
          },
          {
            "line": 140,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 141,
            "code": ".eq('table_name', 'mapeo_datos_rat')",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "audit_log",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006996267_qouphpev8\\\"\"}",
          "timestamp": "2025-09-04T17:29:56.444Z"
        }
      },
      {
        "file": "frontend/src/components/ReportGenerator.js",
        "line": 140,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 138,
            "code": "const { data: auditResult, error: auditError } = await supabase",
            "current": false
          },
          {
            "line": 139,
            "code": ".from('audit_log')",
            "current": false
          },
          {
            "line": 140,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 141,
            "code": ".eq('table_name', 'mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 142,
            "code": ".in('record_id', ratIds)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/ReportGenerator.js",
        "line": 173,
        "code": "await supabase.from('generated_documents').insert({",
        "type": "INSERT",
        "table": "generated_documents",
        "operation": "CREATE",
        "context": [
          {
            "line": 171,
            "code": "",
            "current": false
          },
          {
            "line": 172,
            "code": "// üìä REGISTRAR GENERACI√ìN",
            "current": false
          },
          {
            "line": 173,
            "code": "await supabase.from('generated_documents').insert({",
            "current": true
          },
          {
            "line": 174,
            "code": "tenant_id: currentTenant.id,",
            "current": false
          },
          {
            "line": 175,
            "code": "document_type: formato === 'pdf' ? 'INFORME_RAT_PDF' : 'EXPORT_EXCEL_RATS',",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "generated_documents",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007002454_ceehesdkb\\\"\"}",
          "timestamp": "2025-09-04T17:30:02.635Z"
        }
      },
      {
        "file": "frontend/src/components/admin/IAAgentStatusPage.js",
        "line": 43,
        "code": "import { supabase } from '../../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 41,
            "code": "} from '@mui/icons-material';",
            "current": false
          },
          {
            "line": 42,
            "code": "import { useAuth } from '../../contexts/AuthContext';",
            "current": false
          },
          {
            "line": 43,
            "code": "import { supabase } from '../../config/supabaseClient';",
            "current": true
          },
          {
            "line": 44,
            "code": "import iaAgentReporter from '../../utils/iaAgentReporter';",
            "current": false
          },
          {
            "line": 45,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/admin/IAAgentStatusPage.js",
        "line": 89,
        "code": ".from('usuarios')",
        "type": "OTHER",
        "table": "usuarios",
        "operation": "OTHER",
        "context": [
          {
            "line": 87,
            "code": "try {",
            "current": false
          },
          {
            "line": 88,
            "code": "const { data: userProfile } = await supabase",
            "current": false
          },
          {
            "line": 89,
            "code": ".from('usuarios')",
            "current": true
          },
          {
            "line": 90,
            "code": ".select('rol, permisos')",
            "current": false
          },
          {
            "line": 91,
            "code": ".eq('email', user.email)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "usuarios",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997425_hfzz4bmze\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.610Z"
        }
      },
      {
        "file": "frontend/src/components/admin/IAAgentStatusPage.js",
        "line": 90,
        "code": ".select('rol, permisos')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 88,
            "code": "const { data: userProfile } = await supabase",
            "current": false
          },
          {
            "line": 89,
            "code": ".from('usuarios')",
            "current": false
          },
          {
            "line": 90,
            "code": ".select('rol, permisos')",
            "current": true
          },
          {
            "line": 91,
            "code": ".eq('email', user.email)",
            "current": false
          },
          {
            "line": 92,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/admin/UsageDashboard.js",
        "line": 28,
        "code": "import { supabase } from '../../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 26,
            "code": "Business",
            "current": false
          },
          {
            "line": 27,
            "code": "} from '@mui/icons-material';",
            "current": false
          },
          {
            "line": 28,
            "code": "import { supabase } from '../../config/supabaseClient';",
            "current": true
          },
          {
            "line": 29,
            "code": "",
            "current": false
          },
          {
            "line": 30,
            "code": "const UsageDashboard = () => {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/admin/UsageDashboard.js",
        "line": 45,
        "code": ".from('tenant_usage')",
        "type": "OTHER",
        "table": "tenant_usage",
        "operation": "OTHER",
        "context": [
          {
            "line": 43,
            "code": "// Obtener datos de uso y l√≠mites",
            "current": false
          },
          {
            "line": 44,
            "code": "const { data: tenantUsage, error: usageError } = await supabase",
            "current": false
          },
          {
            "line": 45,
            "code": ".from('tenant_usage')",
            "current": true
          },
          {
            "line": 46,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 47,
            "code": ".order('calculated_at', { ascending: false });",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "tenant_usage",
          "error": "INSERT failed: 400 - {\"code\":\"PGRST204\",\"details\":null,\"hint\":null,\"message\":\"Could not find the 'created_at' column of 'tenant_usage' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:03.390Z"
        }
      },
      {
        "file": "frontend/src/components/admin/UsageDashboard.js",
        "line": 46,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 44,
            "code": "const { data: tenantUsage, error: usageError } = await supabase",
            "current": false
          },
          {
            "line": 45,
            "code": ".from('tenant_usage')",
            "current": false
          },
          {
            "line": 46,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 47,
            "code": ".order('calculated_at', { ascending: false });",
            "current": false
          },
          {
            "line": 48,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/admin/UsageDashboard.js",
        "line": 50,
        "code": ".from('tenant_limits')",
        "type": "OTHER",
        "table": "tenant_limits",
        "operation": "OTHER",
        "context": [
          {
            "line": 48,
            "code": "",
            "current": false
          },
          {
            "line": 49,
            "code": "const { data: tenantLimits, error: limitsError } = await supabase",
            "current": false
          },
          {
            "line": 50,
            "code": ".from('tenant_limits')",
            "current": true
          },
          {
            "line": 51,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 52,
            "code": ".eq('is_active', true);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "tenant_limits",
          "error": "INSERT failed: 400 - {\"code\":\"PGRST204\",\"details\":null,\"hint\":null,\"message\":\"Could not find the 'data' column of 'tenant_limits' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:03.789Z"
        }
      },
      {
        "file": "frontend/src/components/admin/UsageDashboard.js",
        "line": 51,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 49,
            "code": "const { data: tenantLimits, error: limitsError } = await supabase",
            "current": false
          },
          {
            "line": 50,
            "code": ".from('tenant_limits')",
            "current": false
          },
          {
            "line": 51,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 52,
            "code": ".eq('is_active', true);",
            "current": false
          },
          {
            "line": 53,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/admin/UserManagement.js",
        "line": 33,
        "code": "import { supabase } from '../../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 31,
            "code": "Cancel as InactiveIcon,",
            "current": false
          },
          {
            "line": 32,
            "code": "} from '@mui/icons-material';",
            "current": false
          },
          {
            "line": 33,
            "code": "import { supabase } from '../../config/supabaseClient';",
            "current": true
          },
          {
            "line": 34,
            "code": "",
            "current": false
          },
          {
            "line": 35,
            "code": "function UserManagement() {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/admin/UserManagement.js",
        "line": 48,
        "code": "const { data: { user } } = await supabase.auth.getUser();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 46,
            "code": "setLoading(true);",
            "current": false
          },
          {
            "line": 47,
            "code": "",
            "current": false
          },
          {
            "line": 48,
            "code": "const { data: { user } } = await supabase.auth.getUser();",
            "current": true
          },
          {
            "line": 49,
            "code": "if (!user) throw new Error('No autenticado');",
            "current": false
          },
          {
            "line": 50,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/admin/UserManagement.js",
        "line": 53,
        "code": ".from('usuarios')",
        "type": "OTHER",
        "table": "usuarios",
        "operation": "OTHER",
        "context": [
          {
            "line": 51,
            "code": "// Cargar usuarios desde Supabase",
            "current": false
          },
          {
            "line": 52,
            "code": "const { data: userData, error } = await supabase",
            "current": false
          },
          {
            "line": 53,
            "code": ".from('usuarios')",
            "current": true
          },
          {
            "line": 54,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 55,
            "code": ".order('created_at', { ascending: false });",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "usuarios",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997425_hfzz4bmze\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.610Z"
        }
      },
      {
        "file": "frontend/src/components/admin/UserManagement.js",
        "line": 54,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 52,
            "code": "const { data: userData, error } = await supabase",
            "current": false
          },
          {
            "line": 53,
            "code": ".from('usuarios')",
            "current": false
          },
          {
            "line": 54,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 55,
            "code": ".order('created_at', { ascending: false });",
            "current": false
          },
          {
            "line": 56,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/components/admin/UserManagement.js",
        "line": 171,
        "code": "‚úÖ Sistema funcionando 100% con Supabase. Sin localStorage.",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 169,
            "code": "<Alert severity=\"success\" sx={{ mt: 3 }}>",
            "current": false
          },
          {
            "line": 170,
            "code": "<Typography variant=\"body2\">",
            "current": false
          },
          {
            "line": 171,
            "code": "‚úÖ Sistema funcionando 100% con Supabase. Sin localStorage.",
            "current": true
          },
          {
            "line": 172,
            "code": "</Typography>",
            "current": false
          },
          {
            "line": 173,
            "code": "</Alert>",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/config/supabaseClient.js",
        "line": 20,
        "code": "if (!supabaseUrl.includes('supabase.co')) {",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 18,
            "code": "",
            "current": false
          },
          {
            "line": 19,
            "code": "// Validaci√≥n adicional de formato de URL",
            "current": false
          },
          {
            "line": 20,
            "code": "if (!supabaseUrl.includes('supabase.co')) {",
            "current": true
          },
          {
            "line": 21,
            "code": "console.error('üö® URL DE SUPABASE INV√ÅLIDA:', supabaseUrl);",
            "current": false
          },
          {
            "line": 22,
            "code": "throw new Error('CR√çTICO: URL de Supabase no tiene formato v√°lido');",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/config/supabaseClient.js",
        "line": 37,
        "code": "export const supabase = createClient(supabaseUrl, supabaseKey, {",
        "type": "CLIENT_INIT",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 35,
            "code": "",
            "current": false
          },
          {
            "line": 36,
            "code": "// Cliente real de Supabase - SIN localStorage",
            "current": false
          },
          {
            "line": 37,
            "code": "export const supabase = createClient(supabaseUrl, supabaseKey, {",
            "current": true
          },
          {
            "line": 38,
            "code": "auth: {",
            "current": false
          },
          {
            "line": 39,
            "code": "autoRefreshToken: true,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/config/supabaseClient.js",
        "line": 63,
        "code": "const { data: { user } } = await supabase.auth.getUser();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 61,
            "code": "export const getCurrentTenant = async () => {",
            "current": false
          },
          {
            "line": 62,
            "code": "try {",
            "current": false
          },
          {
            "line": 63,
            "code": "const { data: { user } } = await supabase.auth.getUser();",
            "current": true
          },
          {
            "line": 64,
            "code": "",
            "current": false
          },
          {
            "line": 65,
            "code": "if (user?.id) {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/config/supabaseClient.js",
        "line": 67,
        "code": ".from('user_sessions')",
        "type": "OTHER",
        "table": "user_sessions",
        "operation": "OTHER",
        "context": [
          {
            "line": 65,
            "code": "if (user?.id) {",
            "current": false
          },
          {
            "line": 66,
            "code": "const { data: session, error } = await supabase",
            "current": false
          },
          {
            "line": 67,
            "code": ".from('user_sessions')",
            "current": true
          },
          {
            "line": 68,
            "code": ".select('tenant_id')",
            "current": false
          },
          {
            "line": 69,
            "code": ".eq('user_id', user.id)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "user_sessions",
          "error": "INSERT failed: 400 - {\"code\":\"PGRST204\",\"details\":null,\"hint\":null,\"message\":\"Could not find the 'data' column of 'user_sessions' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:04.286Z"
        }
      },
      {
        "file": "frontend/src/config/supabaseClient.js",
        "line": 68,
        "code": ".select('tenant_id')",
        "type": "SELECT",
        "table": "tenant_id",
        "operation": "READ",
        "context": [
          {
            "line": 66,
            "code": "const { data: session, error } = await supabase",
            "current": false
          },
          {
            "line": 67,
            "code": ".from('user_sessions')",
            "current": false
          },
          {
            "line": 68,
            "code": ".select('tenant_id')",
            "current": true
          },
          {
            "line": 69,
            "code": ".eq('user_id', user.id)",
            "current": false
          },
          {
            "line": 70,
            "code": ".eq('is_active', true)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "tenant_id",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":\"Perhaps you meant the table 'public.tenant_limits'\",\"message\":\"Could not find the table 'public.tenant_id' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:04.693Z"
        }
      },
      {
        "file": "frontend/src/config/supabaseClient.js",
        "line": 80,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 78,
            "code": "// Fallback a tenant por defecto sin localStorage",
            "current": false
          },
          {
            "line": 79,
            "code": "const { data: defaultTenant, error } = await supabase",
            "current": false
          },
          {
            "line": 80,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 81,
            "code": ".select('id')",
            "current": false
          },
          {
            "line": 82,
            "code": ".limit(1)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/config/supabaseClient.js",
        "line": 81,
        "code": ".select('id')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 79,
            "code": "const { data: defaultTenant, error } = await supabase",
            "current": false
          },
          {
            "line": 80,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 81,
            "code": ".select('id')",
            "current": true
          },
          {
            "line": 82,
            "code": ".limit(1)",
            "current": false
          },
          {
            "line": 83,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/config/supabaseClient.js",
        "line": 96,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 94,
            "code": "try {",
            "current": false
          },
          {
            "line": 95,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 96,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 97,
            "code": ".select('count')",
            "current": false
          },
          {
            "line": 98,
            "code": ".limit(1);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/config/supabaseClient.js",
        "line": 97,
        "code": ".select('count')",
        "type": "SELECT",
        "table": "count",
        "operation": "READ",
        "context": [
          {
            "line": 95,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 96,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 97,
            "code": ".select('count')",
            "current": true
          },
          {
            "line": 98,
            "code": ".limit(1);",
            "current": false
          },
          {
            "line": 99,
            "code": "",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "count",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":\"Perhaps you meant the table 'public.consents'\",\"message\":\"Could not find the table 'public.count' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:05.082Z"
        }
      },
      {
        "file": "frontend/src/config/supabaseClient.js",
        "line": 118,
        "code": "supabase.auth.getSession().then(({ data, error }) => {",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 116,
            "code": "",
            "current": false
          },
          {
            "line": 117,
            "code": "// Test de conexi√≥n inicial",
            "current": false
          },
          {
            "line": 118,
            "code": "supabase.auth.getSession().then(({ data, error }) => {",
            "current": true
          },
          {
            "line": 119,
            "code": "if (error) {",
            "current": false
          },
          {
            "line": 120,
            "code": "console.error('üöÄ Error inicial Supabase:', error);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/contexts/AuthContext.js",
        "line": 3,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 1,
            "code": "// üöÄ AUTHCONTEXT MODO ONLINE - PRODUCCI√ìN SUPABASE",
            "current": false
          },
          {
            "line": 2,
            "code": "import React, { createContext, useContext, useState, useEffect } from 'react';",
            "current": false
          },
          {
            "line": 3,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 4,
            "code": "",
            "current": false
          },
          {
            "line": 5,
            "code": "// //console.log('üöÄ Iniciando AuthContext en modo PRODUCCI√ìN SUPABASE');",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/contexts/AuthContext.js",
        "line": 29,
        "code": "const { data: { session } } = await supabase.auth.getSession();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 27,
            "code": "// Obtener sesi√≥n inicial",
            "current": false
          },
          {
            "line": 28,
            "code": "const checkSession = async () => {",
            "current": false
          },
          {
            "line": 29,
            "code": "const { data: { session } } = await supabase.auth.getSession();",
            "current": true
          },
          {
            "line": 30,
            "code": "",
            "current": false
          },
          {
            "line": 31,
            "code": "if (session?.user) {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/contexts/AuthContext.js",
        "line": 59,
        "code": "const { data: { subscription } } = supabase.auth.onAuthStateChange(",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 57,
            "code": "",
            "current": false
          },
          {
            "line": 58,
            "code": "// Escuchar cambios de autenticaci√≥n",
            "current": false
          },
          {
            "line": 59,
            "code": "const { data: { subscription } } = supabase.auth.onAuthStateChange(",
            "current": true
          },
          {
            "line": 60,
            "code": "async (event, session) => {",
            "current": false
          },
          {
            "line": 61,
            "code": "// //console.log('üöÄ Auth state change:', event, session?.user?.email);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/contexts/AuthContext.js",
        "line": 96,
        "code": "const { data, error } = await supabase.auth.signInWithPassword({",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 94,
            "code": "",
            "current": false
          },
          {
            "line": 95,
            "code": "try {",
            "current": false
          },
          {
            "line": 96,
            "code": "const { data, error } = await supabase.auth.signInWithPassword({",
            "current": true
          },
          {
            "line": 97,
            "code": "email: email,",
            "current": false
          },
          {
            "line": 98,
            "code": "password: password",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/contexts/AuthContext.js",
        "line": 138,
        "code": "const { error } = await supabase.auth.signOut();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 136,
            "code": "const logout = async () => {",
            "current": false
          },
          {
            "line": 137,
            "code": "// //console.log('üöÄ Logout Supabase');",
            "current": false
          },
          {
            "line": 138,
            "code": "const { error } = await supabase.auth.signOut();",
            "current": true
          },
          {
            "line": 139,
            "code": "if (error) {",
            "current": false
          },
          {
            "line": 140,
            "code": "console.error('üöÄ Error logout:', error);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/contexts/AuthContext.js",
        "line": 154,
        "code": "const { data, error } = await supabase.auth.refreshSession();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 152,
            "code": "const refreshToken = async () => {",
            "current": false
          },
          {
            "line": 153,
            "code": "// //console.log('üöÄ Renovando sesi√≥n');",
            "current": false
          },
          {
            "line": 154,
            "code": "const { data, error } = await supabase.auth.refreshSession();",
            "current": true
          },
          {
            "line": 155,
            "code": "if (error) {",
            "current": false
          },
          {
            "line": 156,
            "code": "console.error('üöÄ Error al renovar sesi√≥n');",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/contexts/TenantContext.js",
        "line": 5,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 3,
            "code": "import { useAuth } from './AuthContext';",
            "current": false
          },
          {
            "line": 4,
            "code": "import ratService from '../services/ratService';",
            "current": false
          },
          {
            "line": 5,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 6,
            "code": "",
            "current": false
          },
          {
            "line": 7,
            "code": "// //console.log('üöÄ Iniciando TenantContext en modo PRODUCCI√ìN SUPABASE');",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/contexts/TenantContext.js",
        "line": 38,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 36,
            "code": "// SEGURIDAD: Query con validaci√≥n expl√≠cita de usuario autenticado",
            "current": false
          },
          {
            "line": 37,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 38,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 39,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 40,
            "code": ".eq('user_id', user.id)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/contexts/TenantContext.js",
        "line": 39,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 37,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 38,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 39,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 40,
            "code": ".eq('user_id', user.id)",
            "current": false
          },
          {
            "line": 41,
            "code": ".eq('active', true) // Solo organizaciones activas",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/contexts/TenantContext.js",
        "line": 88,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 86,
            "code": "try {",
            "current": false
          },
          {
            "line": 87,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 88,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 89,
            "code": ".insert([defaultOrg])",
            "current": false
          },
          {
            "line": 90,
            "code": ".select()",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/contexts/TenantContext.js",
        "line": 89,
        "code": ".insert([defaultOrg])",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 87,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 88,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 89,
            "code": ".insert([defaultOrg])",
            "current": true
          },
          {
            "line": 90,
            "code": ".select()",
            "current": false
          },
          {
            "line": 91,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/contexts/TenantContext.js",
        "line": 90,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 88,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 89,
            "code": ".insert([defaultOrg])",
            "current": false
          },
          {
            "line": 90,
            "code": ".select()",
            "current": true
          },
          {
            "line": 91,
            "code": ".single();",
            "current": false
          },
          {
            "line": 92,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/contexts/TenantContext.js",
        "line": 195,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 193,
            "code": "try {",
            "current": false
          },
          {
            "line": 194,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 195,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 196,
            "code": ".insert([newTenantData])",
            "current": false
          },
          {
            "line": 197,
            "code": ".select()",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/contexts/TenantContext.js",
        "line": 196,
        "code": ".insert([newTenantData])",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 194,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 195,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 196,
            "code": ".insert([newTenantData])",
            "current": true
          },
          {
            "line": 197,
            "code": ".select()",
            "current": false
          },
          {
            "line": 198,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/contexts/TenantContext.js",
        "line": 197,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 195,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 196,
            "code": ".insert([newTenantData])",
            "current": false
          },
          {
            "line": 197,
            "code": ".select()",
            "current": true
          },
          {
            "line": 198,
            "code": ".single();",
            "current": false
          },
          {
            "line": 199,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/contexts/TenantContext.js",
        "line": 222,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 220,
            "code": "try {",
            "current": false
          },
          {
            "line": 221,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 222,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 223,
            "code": ".update(updateData)",
            "current": false
          },
          {
            "line": 224,
            "code": ".eq('id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/contexts/TenantContext.js",
        "line": 223,
        "code": ".update(updateData)",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 221,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 222,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 223,
            "code": ".update(updateData)",
            "current": true
          },
          {
            "line": 224,
            "code": ".eq('id', tenantId)",
            "current": false
          },
          {
            "line": 225,
            "code": ".select()",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/contexts/TenantContext.js",
        "line": 225,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 223,
            "code": ".update(updateData)",
            "current": false
          },
          {
            "line": 224,
            "code": ".eq('id', tenantId)",
            "current": false
          },
          {
            "line": 225,
            "code": ".select()",
            "current": true
          },
          {
            "line": 226,
            "code": ".single();",
            "current": false
          },
          {
            "line": 227,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/contexts/TenantContext.js",
        "line": 258,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 256,
            "code": "try {",
            "current": false
          },
          {
            "line": 257,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 258,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 259,
            "code": ".delete()",
            "current": false
          },
          {
            "line": 260,
            "code": ".eq('id', tenantId);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/contexts/TenantContext.js",
        "line": 259,
        "code": ".delete()",
        "type": "DELETE",
        "table": "UNKNOWN",
        "operation": "DELETE",
        "context": [
          {
            "line": 257,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 258,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 259,
            "code": ".delete()",
            "current": true
          },
          {
            "line": 260,
            "code": ".eq('id', tenantId);",
            "current": false
          },
          {
            "line": 261,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/contexts/TenantContext.js",
        "line": 304,
        "code": ".from('user_sessions')",
        "type": "OTHER",
        "table": "user_sessions",
        "operation": "OTHER",
        "context": [
          {
            "line": 302,
            "code": "try {",
            "current": false
          },
          {
            "line": 303,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 304,
            "code": ".from('user_sessions')",
            "current": true
          },
          {
            "line": 305,
            "code": ".update({ is_active: false })",
            "current": false
          },
          {
            "line": 306,
            "code": ".eq('user_id', user.id);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "user_sessions",
          "error": "INSERT failed: 400 - {\"code\":\"PGRST204\",\"details\":null,\"hint\":null,\"message\":\"Could not find the 'data' column of 'user_sessions' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:04.286Z"
        }
      },
      {
        "file": "frontend/src/contexts/TenantContext.js",
        "line": 305,
        "code": ".update({ is_active: false })",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 303,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 304,
            "code": ".from('user_sessions')",
            "current": false
          },
          {
            "line": 305,
            "code": ".update({ is_active: false })",
            "current": true
          },
          {
            "line": 306,
            "code": ".eq('user_id', user.id);",
            "current": false
          },
          {
            "line": 307,
            "code": "} catch (error) {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/debug_rat_id.js",
        "line": 4,
        "code": "const { supabase } = require('./config/supabaseClient.js');",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 2,
            "code": "* üîç SCRIPT DEBUG - Encontrar exactamente qu√© tabla causa error rat_id",
            "current": false
          },
          {
            "line": 3,
            "code": "*/",
            "current": false
          },
          {
            "line": 4,
            "code": "const { supabase } = require('./config/supabaseClient.js');",
            "current": true
          },
          {
            "line": 5,
            "code": "",
            "current": false
          },
          {
            "line": 6,
            "code": "async function testRatIdColumns() {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/debug_rat_id.js",
        "line": 25,
        "code": ".from(table)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 23,
            "code": "",
            "current": false
          },
          {
            "line": 24,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 25,
            "code": ".from(table)",
            "current": true
          },
          {
            "line": 26,
            "code": ".select('rat_id')",
            "current": false
          },
          {
            "line": 27,
            "code": ".limit(1);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/debug_rat_id.js",
        "line": 26,
        "code": ".select('rat_id')",
        "type": "SELECT",
        "table": "rat_id",
        "operation": "READ",
        "context": [
          {
            "line": 24,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 25,
            "code": ".from(table)",
            "current": false
          },
          {
            "line": 26,
            "code": ".select('rat_id')",
            "current": true
          },
          {
            "line": 27,
            "code": ".limit(1);",
            "current": false
          },
          {
            "line": 28,
            "code": "",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "rat_id",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":\"Perhaps you meant the table 'public.rats'\",\"message\":\"Could not find the table 'public.rat_id' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:05.471Z"
        }
      },
      {
        "file": "frontend/src/debug_rat_id.js",
        "line": 54,
        "code": ".from('actividades_dpo')",
        "type": "OTHER",
        "table": "actividades_dpo",
        "operation": "OTHER",
        "context": [
          {
            "line": 52,
            "code": "try {",
            "current": false
          },
          {
            "line": 53,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 54,
            "code": ".from('actividades_dpo')",
            "current": true
          },
          {
            "line": 55,
            "code": ".select('id')",
            "current": false
          },
          {
            "line": 56,
            "code": ".eq('rat_id', 123)  // Usar un n√∫mero de prueba",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/debug_rat_id.js",
        "line": 55,
        "code": ".select('id')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 53,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 54,
            "code": ".from('actividades_dpo')",
            "current": false
          },
          {
            "line": 55,
            "code": ".select('id')",
            "current": true
          },
          {
            "line": 56,
            "code": ".eq('rat_id', 123)  // Usar un n√∫mero de prueba",
            "current": false
          },
          {
            "line": 57,
            "code": ".limit(1);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/AdminDashboard.js",
        "line": 64,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 62,
            "code": "} from '@mui/icons-material';",
            "current": false
          },
          {
            "line": 63,
            "code": "import { ratService } from '../services/ratService';",
            "current": false
          },
          {
            "line": 64,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 65,
            "code": "",
            "current": false
          },
          {
            "line": 66,
            "code": "const AdminDashboard = () => {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/AdminDashboard.js",
        "line": 125,
        "code": ".from('tenants')",
        "type": "OTHER",
        "table": "tenants",
        "operation": "OTHER",
        "context": [
          {
            "line": 123,
            "code": "try {",
            "current": false
          },
          {
            "line": 124,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 125,
            "code": ".from('tenants')",
            "current": true
          },
          {
            "line": 126,
            "code": ".select(`",
            "current": false
          },
          {
            "line": 127,
            "code": "*,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "tenants",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":\"Perhaps you meant the table 'public.tenant_usage'\",\"message\":\"Could not find the table 'public.tenants' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:05.864Z"
        }
      },
      {
        "file": "frontend/src/pages/AdminDashboard.js",
        "line": 126,
        "code": ".select(`",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 124,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 125,
            "code": ".from('tenants')",
            "current": false
          },
          {
            "line": 126,
            "code": ".select(`",
            "current": true
          },
          {
            "line": 127,
            "code": "*,",
            "current": false
          },
          {
            "line": 128,
            "code": "parent:parent_tenant_id(company_name),",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/AdminDashboard.js",
        "line": 153,
        "code": ".from('usuarios')",
        "type": "OTHER",
        "table": "usuarios",
        "operation": "OTHER",
        "context": [
          {
            "line": 151,
            "code": "try {",
            "current": false
          },
          {
            "line": 152,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 153,
            "code": ".from('usuarios')",
            "current": true
          },
          {
            "line": 154,
            "code": ".select(`",
            "current": false
          },
          {
            "line": 155,
            "code": "*,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "usuarios",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997425_hfzz4bmze\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.610Z"
        }
      },
      {
        "file": "frontend/src/pages/AdminDashboard.js",
        "line": 154,
        "code": ".select(`",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 152,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 153,
            "code": ".from('usuarios')",
            "current": false
          },
          {
            "line": 154,
            "code": ".select(`",
            "current": true
          },
          {
            "line": 155,
            "code": "*,",
            "current": false
          },
          {
            "line": 156,
            "code": "tenant:tenant_id(company_name)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/AdminDashboard.js",
        "line": 179,
        "code": ".from('audit_logs')",
        "type": "OTHER",
        "table": "audit_logs",
        "operation": "OTHER",
        "context": [
          {
            "line": 177,
            "code": "try {",
            "current": false
          },
          {
            "line": 178,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 179,
            "code": ".from('audit_logs')",
            "current": true
          },
          {
            "line": 180,
            "code": ".select(`",
            "current": false
          },
          {
            "line": 181,
            "code": "*,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "audit_logs",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007000900_kwp1ha94w\\\"\"}",
          "timestamp": "2025-09-04T17:30:01.095Z"
        }
      },
      {
        "file": "frontend/src/pages/AdminDashboard.js",
        "line": 180,
        "code": ".select(`",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 178,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 179,
            "code": ".from('audit_logs')",
            "current": false
          },
          {
            "line": 180,
            "code": ".select(`",
            "current": true
          },
          {
            "line": 181,
            "code": "*,",
            "current": false
          },
          {
            "line": 182,
            "code": "usuario:usuarios(first_name, last_name, email)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/AdminDashboard.js",
        "line": 202,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 200,
            "code": "try {",
            "current": false
          },
          {
            "line": 201,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 202,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 203,
            "code": ".select('estado')",
            "current": false
          },
          {
            "line": 204,
            "code": ".in('tenant_id', tenantsData.map(t => t.id));",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/pages/AdminDashboard.js",
        "line": 203,
        "code": ".select('estado')",
        "type": "SELECT",
        "table": "estado",
        "operation": "READ",
        "context": [
          {
            "line": 201,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 202,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 203,
            "code": ".select('estado')",
            "current": true
          },
          {
            "line": 204,
            "code": ".in('tenant_id', tenantsData.map(t => t.id));",
            "current": false
          },
          {
            "line": 205,
            "code": "",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "estado",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":null,\"message\":\"Could not find the table 'public.estado' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:06.252Z"
        }
      },
      {
        "file": "frontend/src/pages/AdminDashboard.js",
        "line": 221,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 219,
            "code": "try {",
            "current": false
          },
          {
            "line": 220,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 221,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 222,
            "code": ".select('id')",
            "current": false
          },
          {
            "line": 223,
            "code": ".eq('estado', 'PENDIENTE_APROBACION');",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/pages/AdminDashboard.js",
        "line": 222,
        "code": ".select('id')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 220,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 221,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 222,
            "code": ".select('id')",
            "current": true
          },
          {
            "line": 223,
            "code": ".eq('estado', 'PENDIENTE_APROBACION');",
            "current": false
          },
          {
            "line": 224,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/AdminDashboard.js",
        "line": 237,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 235,
            "code": "// Obtener conteo real de RATs por tenant",
            "current": false
          },
          {
            "line": 236,
            "code": "const { data: ratsData, error: ratsError } = await supabase",
            "current": false
          },
          {
            "line": 237,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 238,
            "code": ".select('tenant_id')",
            "current": false
          },
          {
            "line": 239,
            "code": ".in('tenant_id', tenantsData.map(t => t.id));",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/pages/AdminDashboard.js",
        "line": 238,
        "code": ".select('tenant_id')",
        "type": "SELECT",
        "table": "tenant_id",
        "operation": "READ",
        "context": [
          {
            "line": 236,
            "code": "const { data: ratsData, error: ratsError } = await supabase",
            "current": false
          },
          {
            "line": 237,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 238,
            "code": ".select('tenant_id')",
            "current": true
          },
          {
            "line": 239,
            "code": ".in('tenant_id', tenantsData.map(t => t.id));",
            "current": false
          },
          {
            "line": 240,
            "code": "",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "tenant_id",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":\"Perhaps you meant the table 'public.tenant_limits'\",\"message\":\"Could not find the table 'public.tenant_id' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:04.693Z"
        }
      },
      {
        "file": "frontend/src/pages/AdminDashboard.js",
        "line": 260,
        "code": ".from('tenants')",
        "type": "OTHER",
        "table": "tenants",
        "operation": "OTHER",
        "context": [
          {
            "line": 258,
            "code": "try {",
            "current": false
          },
          {
            "line": 259,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 260,
            "code": ".from('tenants')",
            "current": true
          },
          {
            "line": 261,
            "code": ".insert([{",
            "current": false
          },
          {
            "line": 262,
            "code": "...newTenant,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "tenants",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":\"Perhaps you meant the table 'public.tenant_usage'\",\"message\":\"Could not find the table 'public.tenants' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:05.864Z"
        }
      },
      {
        "file": "frontend/src/pages/AdminDashboard.js",
        "line": 261,
        "code": ".insert([{",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 259,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 260,
            "code": ".from('tenants')",
            "current": false
          },
          {
            "line": 261,
            "code": ".insert([{",
            "current": true
          },
          {
            "line": 262,
            "code": "...newTenant,",
            "current": false
          },
          {
            "line": 263,
            "code": "id: `tenant-${Date.now()}`,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/AdminDashboard.js",
        "line": 267,
        "code": ".select();",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 265,
            "code": "estado: 'ACTIVO'",
            "current": false
          },
          {
            "line": 266,
            "code": "}])",
            "current": false
          },
          {
            "line": 267,
            "code": ".select();",
            "current": true
          },
          {
            "line": 268,
            "code": "",
            "current": false
          },
          {
            "line": 269,
            "code": "if (error) throw error;",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/DPOApprovalQueue.js",
        "line": 53,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 51,
            "code": "import { ratService } from '../services/ratService';",
            "current": false
          },
          {
            "line": 52,
            "code": "import ratIntelligenceEngine from '../services/ratIntelligenceEngine';",
            "current": false
          },
          {
            "line": 53,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 54,
            "code": "import { useTenant } from '../contexts/TenantContext';",
            "current": false
          },
          {
            "line": 55,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/DPOApprovalQueue.js",
        "line": 86,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 84,
            "code": "// Obtener RATs en estado PENDIENTE_APROBACION",
            "current": false
          },
          {
            "line": 85,
            "code": "const { data: pendingData, error } = await supabase",
            "current": false
          },
          {
            "line": 86,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 87,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 88,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/pages/DPOApprovalQueue.js",
        "line": 87,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 85,
            "code": "const { data: pendingData, error } = await supabase",
            "current": false
          },
          {
            "line": 86,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 87,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 88,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 89,
            "code": ".eq('estado', 'PENDIENTE_APROBACION')",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/DashboardDPO.js",
        "line": 3,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 1,
            "code": "import React, { useState, useEffect } from 'react';",
            "current": false
          },
          {
            "line": 2,
            "code": "import { useNavigate } from 'react-router-dom';",
            "current": false
          },
          {
            "line": 3,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 4,
            "code": "import { useTenant } from '../contexts/TenantContext';",
            "current": false
          },
          {
            "line": 5,
            "code": "import { useDataSync } from '../hooks/useDataSync';",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/EIPDCreator.js",
        "line": 218,
        "code": ".from('evaluaciones_impacto')",
        "type": "OTHER",
        "table": "evaluaciones_impacto",
        "operation": "OTHER",
        "context": [
          {
            "line": 216,
            "code": "// Guardar EIPD en Supabase",
            "current": false
          },
          {
            "line": 217,
            "code": "const { data: eipdCreated, error } = await ratService.supabase",
            "current": false
          },
          {
            "line": 218,
            "code": ".from('evaluaciones_impacto')",
            "current": true
          },
          {
            "line": 219,
            "code": ".insert([{",
            "current": false
          },
          {
            "line": 220,
            "code": "tenant_id: currentTenant?.id,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "evaluaciones_impacto",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007001680_9e5fqdquo\\\"\"}",
          "timestamp": "2025-09-04T17:30:01.858Z"
        }
      },
      {
        "file": "frontend/src/pages/EIPDCreator.js",
        "line": 219,
        "code": ".insert([{",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 217,
            "code": "const { data: eipdCreated, error } = await ratService.supabase",
            "current": false
          },
          {
            "line": 218,
            "code": ".from('evaluaciones_impacto')",
            "current": false
          },
          {
            "line": 219,
            "code": ".insert([{",
            "current": true
          },
          {
            "line": 220,
            "code": "tenant_id: currentTenant?.id,",
            "current": false
          },
          {
            "line": 221,
            "code": "rat_id: ratId,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/EIPDCreator.js",
        "line": 229,
        "code": ".select();",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 227,
            "code": "created_at: new Date().toISOString()",
            "current": false
          },
          {
            "line": 228,
            "code": "}])",
            "current": false
          },
          {
            "line": 229,
            "code": ".select();",
            "current": true
          },
          {
            "line": 230,
            "code": "",
            "current": false
          },
          {
            "line": 231,
            "code": "if (error) throw error;",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/EIPDListPage.js",
        "line": 33,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 31,
            "code": "Download as DownloadIcon",
            "current": false
          },
          {
            "line": 32,
            "code": "} from '@mui/icons-material';",
            "current": false
          },
          {
            "line": 33,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 34,
            "code": "import { useTenant } from '../contexts/TenantContext';",
            "current": false
          },
          {
            "line": 35,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/EIPDListPage.js",
        "line": 58,
        "code": ".from('evaluaciones_impacto')",
        "type": "OTHER",
        "table": "evaluaciones_impacto",
        "operation": "OTHER",
        "context": [
          {
            "line": 56,
            "code": "",
            "current": false
          },
          {
            "line": 57,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 58,
            "code": ".from('evaluaciones_impacto')",
            "current": true
          },
          {
            "line": 59,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 60,
            "code": ".eq('tenant_id', currentTenant?.id)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "evaluaciones_impacto",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007001680_9e5fqdquo\\\"\"}",
          "timestamp": "2025-09-04T17:30:01.858Z"
        }
      },
      {
        "file": "frontend/src/pages/EIPDListPage.js",
        "line": 59,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 57,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 58,
            "code": ".from('evaluaciones_impacto')",
            "current": false
          },
          {
            "line": 59,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 60,
            "code": ".eq('tenant_id', currentTenant?.id)",
            "current": false
          },
          {
            "line": 61,
            "code": ".order('created_at', { ascending: false });",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/ProviderManager.js",
        "line": 62,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 60,
            "code": "} from '@mui/icons-material';",
            "current": false
          },
          {
            "line": 61,
            "code": "import { ratService } from '../services/ratService';",
            "current": false
          },
          {
            "line": 62,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 63,
            "code": "import { useTenant } from '../contexts/TenantContext';",
            "current": false
          },
          {
            "line": 64,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/ProviderManager.js",
        "line": 127,
        "code": ".from('proveedores')",
        "type": "OTHER",
        "table": "proveedores",
        "operation": "OTHER",
        "context": [
          {
            "line": 125,
            "code": "try {",
            "current": false
          },
          {
            "line": 126,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 127,
            "code": ".from('proveedores')",
            "current": true
          },
          {
            "line": 128,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 129,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "proveedores",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006999360_mm271x3en\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.535Z"
        }
      },
      {
        "file": "frontend/src/pages/ProviderManager.js",
        "line": 128,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 126,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 127,
            "code": ".from('proveedores')",
            "current": false
          },
          {
            "line": 128,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 129,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 130,
            "code": ".order('created_at', { ascending: false });",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/ProviderManager.js",
        "line": 148,
        "code": ".from('dpas')",
        "type": "OTHER",
        "table": "dpas",
        "operation": "OTHER",
        "context": [
          {
            "line": 146,
            "code": "// Usar tabla dpas vigente para contratos DPA",
            "current": false
          },
          {
            "line": 147,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 148,
            "code": ".from('dpas')",
            "current": true
          },
          {
            "line": 149,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 150,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "dpas",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007006453_p0v8aigqm\\\"\"}",
          "timestamp": "2025-09-04T17:30:06.634Z"
        }
      },
      {
        "file": "frontend/src/pages/ProviderManager.js",
        "line": 149,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 147,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 148,
            "code": ".from('dpas')",
            "current": false
          },
          {
            "line": 149,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 150,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 151,
            "code": ".order('created_at', { ascending: false });",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/ProviderManager.js",
        "line": 200,
        "code": ".from('transfers')",
        "type": "OTHER",
        "table": "transfers",
        "operation": "OTHER",
        "context": [
          {
            "line": 198,
            "code": "// C√ìDIGO ORIGINAL - Comentado hasta arreglar tabla transfers",
            "current": false
          },
          {
            "line": 199,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 200,
            "code": ".from('transfers')",
            "current": true
          },
          {
            "line": 201,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 202,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "transfers",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007006835_4kb48hz6c\\\"\"}",
          "timestamp": "2025-09-04T17:30:07.016Z"
        }
      },
      {
        "file": "frontend/src/pages/ProviderManager.js",
        "line": 201,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 199,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 200,
            "code": ".from('transfers')",
            "current": false
          },
          {
            "line": 201,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 202,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 203,
            "code": ".order('created_at', { ascending: false });",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/ProviderManager.js",
        "line": 237,
        "code": ".from('proveedores')",
        "type": "OTHER",
        "table": "proveedores",
        "operation": "OTHER",
        "context": [
          {
            "line": 235,
            "code": "",
            "current": false
          },
          {
            "line": 236,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 237,
            "code": ".from('proveedores')",
            "current": true
          },
          {
            "line": 238,
            "code": ".insert([{",
            "current": false
          },
          {
            "line": 239,
            "code": "...newProvider,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "proveedores",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006999360_mm271x3en\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.535Z"
        }
      },
      {
        "file": "frontend/src/pages/ProviderManager.js",
        "line": 238,
        "code": ".insert([{",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 236,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 237,
            "code": ".from('proveedores')",
            "current": false
          },
          {
            "line": 238,
            "code": ".insert([{",
            "current": true
          },
          {
            "line": 239,
            "code": "...newProvider,",
            "current": false
          },
          {
            "line": 240,
            "code": "tenant_id: tenantId,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/ProviderManager.js",
        "line": 243,
        "code": ".select();",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 241,
            "code": "created_at: new Date().toISOString()",
            "current": false
          },
          {
            "line": 242,
            "code": "}])",
            "current": false
          },
          {
            "line": 243,
            "code": ".select();",
            "current": true
          },
          {
            "line": 244,
            "code": "",
            "current": false
          },
          {
            "line": 245,
            "code": "if (error) throw error;",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/RATListPage.js",
        "line": 50,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 48,
            "code": "import { ratService } from '../services/ratService';",
            "current": false
          },
          {
            "line": 49,
            "code": "import { useTenant } from '../contexts/TenantContext';",
            "current": false
          },
          {
            "line": 50,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 51,
            "code": "",
            "current": false
          },
          {
            "line": 52,
            "code": "const RATListPage = () => {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/RATListPage.js",
        "line": 94,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 92,
            "code": "// Primero intentar cargar todos los RATs del tenant",
            "current": false
          },
          {
            "line": 93,
            "code": "const { data: ratsRaw, error } = await supabase",
            "current": false
          },
          {
            "line": 94,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 95,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 96,
            "code": ".order('created_at', { ascending: false });",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/pages/RATListPage.js",
        "line": 95,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 93,
            "code": "const { data: ratsRaw, error } = await supabase",
            "current": false
          },
          {
            "line": 94,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 95,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 96,
            "code": ".order('created_at', { ascending: false });",
            "current": false
          },
          {
            "line": 97,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/RATListPage.js",
        "line": 473,
        "code": ".from('partner_integrations')",
        "type": "OTHER",
        "table": "partner_integrations",
        "operation": "OTHER",
        "context": [
          {
            "line": 471,
            "code": "// Registrar integraci√≥n",
            "current": false
          },
          {
            "line": 472,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 473,
            "code": ".from('partner_integrations')",
            "current": true
          },
          {
            "line": 474,
            "code": ".insert({",
            "current": false
          },
          {
            "line": 475,
            "code": "rat_id: ratId,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "partner_integrations",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007007217_h26s5pfl4\\\"\"}",
          "timestamp": "2025-09-04T17:30:07.400Z"
        }
      },
      {
        "file": "frontend/src/pages/RATListPage.js",
        "line": 474,
        "code": ".insert({",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 472,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 473,
            "code": ".from('partner_integrations')",
            "current": false
          },
          {
            "line": 474,
            "code": ".insert({",
            "current": true
          },
          {
            "line": 475,
            "code": "rat_id: ratId,",
            "current": false
          },
          {
            "line": 476,
            "code": "partner_type: partnerType,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/RATListPage.js",
        "line": 503,
        "code": ".from('partner_integrations')",
        "type": "OTHER",
        "table": "partner_integrations",
        "operation": "OTHER",
        "context": [
          {
            "line": 501,
            "code": "// Simular datos API permanentes/no permanentes",
            "current": false
          },
          {
            "line": 502,
            "code": "const { data: integrations } = await supabase",
            "current": false
          },
          {
            "line": 503,
            "code": ".from('partner_integrations')",
            "current": true
          },
          {
            "line": 504,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 505,
            "code": ".eq('tenant_id', currentTenant?.id);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "partner_integrations",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007007217_h26s5pfl4\\\"\"}",
          "timestamp": "2025-09-04T17:30:07.400Z"
        }
      },
      {
        "file": "frontend/src/pages/RATListPage.js",
        "line": 504,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 502,
            "code": "const { data: integrations } = await supabase",
            "current": false
          },
          {
            "line": 503,
            "code": ".from('partner_integrations')",
            "current": false
          },
          {
            "line": 504,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 505,
            "code": ".eq('tenant_id', currentTenant?.id);",
            "current": false
          },
          {
            "line": 506,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/pages/RATListPage.js",
        "line": 706,
        "code": "{Array.from(new Set(rats.map(r => r.industria).filter(Boolean))).map(industria => (",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 704,
            "code": "<MenuItem value=\"TODOS\">Todas las Industrias</MenuItem>",
            "current": false
          },
          {
            "line": 705,
            "code": "{/* Industrias din√°micas desde base de datos */}",
            "current": false
          },
          {
            "line": 706,
            "code": "{Array.from(new Set(rats.map(r => r.industria).filter(Boolean))).map(industria => (",
            "current": true
          },
          {
            "line": 707,
            "code": "<MenuItem key={industria} value={industria}>",
            "current": false
          },
          {
            "line": 708,
            "code": "{industria.charAt(0).toUpperCase() + industria.slice(1)}",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/api.js",
        "line": 8,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 6,
            "code": "*/",
            "current": false
          },
          {
            "line": 7,
            "code": "",
            "current": false
          },
          {
            "line": 8,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 9,
            "code": "import smartSupabase from '../utils/smartSupabaseClient';",
            "current": false
          },
          {
            "line": 10,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/api.js",
        "line": 9,
        "code": "import smartSupabase from '../utils/smartSupabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 7,
            "code": "",
            "current": false
          },
          {
            "line": 8,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": false
          },
          {
            "line": 9,
            "code": "import smartSupabase from '../utils/smartSupabaseClient';",
            "current": true
          },
          {
            "line": 10,
            "code": "",
            "current": false
          },
          {
            "line": 11,
            "code": "// Servicio de inventario b√°sico",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/api.js",
        "line": 16,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 14,
            "code": "try {",
            "current": false
          },
          {
            "line": 15,
            "code": "const { data, error } = await smartSupabase",
            "current": false
          },
          {
            "line": 16,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 17,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 18,
            "code": ".order('created_at', { ascending: false });",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/services/api.js",
        "line": 17,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 15,
            "code": "const { data, error } = await smartSupabase",
            "current": false
          },
          {
            "line": 16,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 17,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 18,
            "code": ".order('created_at', { ascending: false });",
            "current": false
          },
          {
            "line": 19,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/api.js",
        "line": 32,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 30,
            "code": "try {",
            "current": false
          },
          {
            "line": 31,
            "code": "const { data, error } = await smartSupabase",
            "current": false
          },
          {
            "line": 32,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 33,
            "code": ".insert([item])",
            "current": false
          },
          {
            "line": 34,
            "code": ".select()",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/services/api.js",
        "line": 33,
        "code": ".insert([item])",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 31,
            "code": "const { data, error } = await smartSupabase",
            "current": false
          },
          {
            "line": 32,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 33,
            "code": ".insert([item])",
            "current": true
          },
          {
            "line": 34,
            "code": ".select()",
            "current": false
          },
          {
            "line": 35,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/api.js",
        "line": 34,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 32,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 33,
            "code": ".insert([item])",
            "current": false
          },
          {
            "line": 34,
            "code": ".select()",
            "current": true
          },
          {
            "line": 35,
            "code": ".single();",
            "current": false
          },
          {
            "line": 36,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/api.js",
        "line": 52,
        "code": ".from('usuarios')",
        "type": "OTHER",
        "table": "usuarios",
        "operation": "OTHER",
        "context": [
          {
            "line": 50,
            "code": "try {",
            "current": false
          },
          {
            "line": 51,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 52,
            "code": ".from('usuarios')",
            "current": true
          },
          {
            "line": 53,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 54,
            "code": ".order('created_at', { ascending: false });",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "usuarios",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997425_hfzz4bmze\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.610Z"
        }
      },
      {
        "file": "frontend/src/services/api.js",
        "line": 53,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 51,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 52,
            "code": ".from('usuarios')",
            "current": false
          },
          {
            "line": 53,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 54,
            "code": ".order('created_at', { ascending: false });",
            "current": false
          },
          {
            "line": 55,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/api.js",
        "line": 78,
        "code": "const { data, error } = await supabase.from('organizaciones').select('*');",
        "type": "SELECT",
        "table": "organizaciones",
        "operation": "READ",
        "context": [
          {
            "line": 76,
            "code": "async getOrganizaciones() {",
            "current": false
          },
          {
            "line": 77,
            "code": "try {",
            "current": false
          },
          {
            "line": 78,
            "code": "const { data, error } = await supabase.from('organizaciones').select('*');",
            "current": true
          },
          {
            "line": 79,
            "code": "return { success: true, data: data || [] };",
            "current": false
          },
          {
            "line": 80,
            "code": "} catch (error) {",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/services/api.js",
        "line": 103,
        "code": "const { data, error } = await supabase.from('agent_activity_log').select('*').limit(100);",
        "type": "SELECT",
        "table": "agent_activity_log",
        "operation": "READ",
        "context": [
          {
            "line": 101,
            "code": "async getLogs() {",
            "current": false
          },
          {
            "line": 102,
            "code": "try {",
            "current": false
          },
          {
            "line": 103,
            "code": "const { data, error } = await supabase.from('agent_activity_log').select('*').limit(100);",
            "current": true
          },
          {
            "line": 104,
            "code": "return { success: true, data: data || [] };",
            "current": false
          },
          {
            "line": 105,
            "code": "} catch (error) {",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "agent_activity_log",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007007599_a3u1unxj5\\\"\"}",
          "timestamp": "2025-09-04T17:30:07.806Z"
        }
      },
      {
        "file": "frontend/src/services/categoryAnalysisEngine.js",
        "line": 7,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 5,
            "code": "*/",
            "current": false
          },
          {
            "line": 6,
            "code": "",
            "current": false
          },
          {
            "line": 7,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 8,
            "code": "",
            "current": false
          },
          {
            "line": 9,
            "code": "class CategoryAnalysisEngine {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/categoryAnalysisEngine.js",
        "line": 329,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 327,
            "code": "// Obtener datos actuales del RAT",
            "current": false
          },
          {
            "line": 328,
            "code": "const { data: currentRat } = await supabase",
            "current": false
          },
          {
            "line": 329,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 330,
            "code": ".select('metadata')",
            "current": false
          },
          {
            "line": 331,
            "code": ".eq('id', ratId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/services/categoryAnalysisEngine.js",
        "line": 330,
        "code": ".select('metadata')",
        "type": "SELECT",
        "table": "metadata",
        "operation": "READ",
        "context": [
          {
            "line": 328,
            "code": "const { data: currentRat } = await supabase",
            "current": false
          },
          {
            "line": 329,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 330,
            "code": ".select('metadata')",
            "current": true
          },
          {
            "line": 331,
            "code": ".eq('id', ratId)",
            "current": false
          },
          {
            "line": 332,
            "code": ".single();",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "metadata",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":\"Perhaps you meant the table 'public.session_data'\",\"message\":\"Could not find the table 'public.metadata' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:08.202Z"
        }
      },
      {
        "file": "frontend/src/services/categoryAnalysisEngine.js",
        "line": 336,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 334,
            "code": "// Guardar en tabla mapeo_datos_rat.metadata",
            "current": false
          },
          {
            "line": 335,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 336,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 337,
            "code": ".update({",
            "current": false
          },
          {
            "line": 338,
            "code": "metadata: {",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/services/categoryAnalysisEngine.js",
        "line": 337,
        "code": ".update({",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 335,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 336,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 337,
            "code": ".update({",
            "current": true
          },
          {
            "line": 338,
            "code": "metadata: {",
            "current": false
          },
          {
            "line": 339,
            "code": "...currentRat?.metadata,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/categoryAnalysisEngine.js",
        "line": 365,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 363,
            "code": "try {",
            "current": false
          },
          {
            "line": 364,
            "code": "const { data: organizacion } = await supabase",
            "current": false
          },
          {
            "line": 365,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 366,
            "code": ".select('industry, metadata')",
            "current": false
          },
          {
            "line": 367,
            "code": ".eq('id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/services/categoryAnalysisEngine.js",
        "line": 366,
        "code": ".select('industry, metadata')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 364,
            "code": "const { data: organizacion } = await supabase",
            "current": false
          },
          {
            "line": 365,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 366,
            "code": ".select('industry, metadata')",
            "current": true
          },
          {
            "line": 367,
            "code": ".eq('id', tenantId)",
            "current": false
          },
          {
            "line": 368,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/dataSync.js",
        "line": 2,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 1,
            "code": "// üîÑ SERVICIO SINCRONIZACI√ìN DATOS - CONSISTENCIA ENTRE M√ìDULOS",
            "current": false
          },
          {
            "line": 2,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 3,
            "code": "",
            "current": false
          },
          {
            "line": 4,
            "code": "class DataSyncService {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/dataSync.js",
        "line": 31,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 29,
            "code": "// 1. RATs por estado",
            "current": false
          },
          {
            "line": 30,
            "code": "supabase",
            "current": false
          },
          {
            "line": 31,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 32,
            "code": ".select('id, estado, nivel_riesgo, created_at', { count: 'exact' })",
            "current": false
          },
          {
            "line": 33,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/services/dataSync.js",
        "line": 32,
        "code": ".select('id, estado, nivel_riesgo, created_at', { count: 'exact' })",
        "type": "SELECT",
        "table": "exact",
        "operation": "READ",
        "context": [
          {
            "line": 30,
            "code": "supabase",
            "current": false
          },
          {
            "line": 31,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 32,
            "code": ".select('id, estado, nivel_riesgo, created_at', { count: 'exact' })",
            "current": true
          },
          {
            "line": 33,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 34,
            "code": ".neq('estado', 'ELIMINADO'),",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "exact",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":null,\"message\":\"Could not find the table 'public.exact' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:08.587Z"
        }
      },
      {
        "file": "frontend/src/services/dataSync.js",
        "line": 38,
        "code": ".from('generated_documents')",
        "type": "OTHER",
        "table": "generated_documents",
        "operation": "OTHER",
        "context": [
          {
            "line": 36,
            "code": "// 2. EIPDs por estado",
            "current": false
          },
          {
            "line": 37,
            "code": "supabase",
            "current": false
          },
          {
            "line": 38,
            "code": ".from('generated_documents')",
            "current": true
          },
          {
            "line": 39,
            "code": ".select('id, status, source_rat_id', { count: 'exact' })",
            "current": false
          },
          {
            "line": 40,
            "code": ".eq('document_type', 'EIPD')",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "generated_documents",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007002454_ceehesdkb\\\"\"}",
          "timestamp": "2025-09-04T17:30:02.635Z"
        }
      },
      {
        "file": "frontend/src/services/dataSync.js",
        "line": 39,
        "code": ".select('id, status, source_rat_id', { count: 'exact' })",
        "type": "SELECT",
        "table": "exact",
        "operation": "READ",
        "context": [
          {
            "line": 37,
            "code": "supabase",
            "current": false
          },
          {
            "line": 38,
            "code": ".from('generated_documents')",
            "current": false
          },
          {
            "line": 39,
            "code": ".select('id, status, source_rat_id', { count: 'exact' })",
            "current": true
          },
          {
            "line": 40,
            "code": ".eq('document_type', 'EIPD')",
            "current": false
          },
          {
            "line": 41,
            "code": ".in('status', ['BORRADOR', 'PENDIENTE', 'APROBADO']),",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "exact",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":null,\"message\":\"Could not find the table 'public.exact' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:08.587Z"
        }
      },
      {
        "file": "frontend/src/services/dataSync.js",
        "line": 45,
        "code": ".from('actividades_dpo')",
        "type": "OTHER",
        "table": "actividades_dpo",
        "operation": "OTHER",
        "context": [
          {
            "line": 43,
            "code": "// 3. Tareas DPO pendientes",
            "current": false
          },
          {
            "line": 44,
            "code": "supabase",
            "current": false
          },
          {
            "line": 45,
            "code": ".from('actividades_dpo')",
            "current": true
          },
          {
            "line": 46,
            "code": ".select('id, estado, prioridad', { count: 'exact' })",
            "current": false
          },
          {
            "line": 47,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/services/dataSync.js",
        "line": 46,
        "code": ".select('id, estado, prioridad', { count: 'exact' })",
        "type": "SELECT",
        "table": "exact",
        "operation": "READ",
        "context": [
          {
            "line": 44,
            "code": "supabase",
            "current": false
          },
          {
            "line": 45,
            "code": ".from('actividades_dpo')",
            "current": false
          },
          {
            "line": 46,
            "code": ".select('id, estado, prioridad', { count: 'exact' })",
            "current": true
          },
          {
            "line": 47,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 48,
            "code": ".eq('estado', 'pendiente'),",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "exact",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":null,\"message\":\"Could not find the table 'public.exact' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:08.587Z"
        }
      },
      {
        "file": "frontend/src/services/dataSync.js",
        "line": 121,
        "code": "this.subscribers.delete(key);",
        "type": "DELETE",
        "table": "UNKNOWN",
        "operation": "DELETE",
        "context": [
          {
            "line": 119,
            "code": "// Retornar funci√≥n para cancelar suscripci√≥n",
            "current": false
          },
          {
            "line": 120,
            "code": "return () => {",
            "current": false
          },
          {
            "line": 121,
            "code": "this.subscribers.delete(key);",
            "current": true
          },
          {
            "line": 122,
            "code": "// //console.log(`üì° ${componentName} desuscrito`);",
            "current": false
          },
          {
            "line": 123,
            "code": "};",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/dataSync.js",
        "line": 145,
        "code": "this.cache.delete(cacheKey);",
        "type": "DELETE",
        "table": "UNKNOWN",
        "operation": "DELETE",
        "context": [
          {
            "line": 143,
            "code": "// Limpiar cache",
            "current": false
          },
          {
            "line": 144,
            "code": "const cacheKey = `master_${tenantId}`;",
            "current": false
          },
          {
            "line": 145,
            "code": "this.cache.delete(cacheKey);",
            "current": true
          },
          {
            "line": 146,
            "code": "",
            "current": false
          },
          {
            "line": 147,
            "code": "// Recargar datos maestros",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/partnerSyncEngine.js",
        "line": 7,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 5,
            "code": "*/",
            "current": false
          },
          {
            "line": 6,
            "code": "",
            "current": false
          },
          {
            "line": 7,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 8,
            "code": "import riskCalculationEngine from './riskCalculationEngine';",
            "current": false
          },
          {
            "line": 9,
            "code": "import { RAT_ESTADOS, ACTIVIDAD_DPO_ESTADOS } from '../constants/estados';",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/partnerSyncEngine.js",
        "line": 225,
        "code": "supabase.from('mapeo_datos_rat').select('*').eq('id', ratId).single(),",
        "type": "SELECT",
        "table": "mapeo_datos_rat",
        "operation": "READ",
        "context": [
          {
            "line": 223,
            "code": "const [rat, empresa, documentos, actividades, proveedores] = await Promise.all([",
            "current": false
          },
          {
            "line": 224,
            "code": "// RAT principal",
            "current": false
          },
          {
            "line": 225,
            "code": "supabase.from('mapeo_datos_rat').select('*').eq('id', ratId).single(),",
            "current": true
          },
          {
            "line": 226,
            "code": "",
            "current": false
          },
          {
            "line": 227,
            "code": "// Datos empresa",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/services/partnerSyncEngine.js",
        "line": 228,
        "code": "supabase.from('organizaciones').select('*').limit(1).single(),",
        "type": "SELECT",
        "table": "organizaciones",
        "operation": "READ",
        "context": [
          {
            "line": 226,
            "code": "",
            "current": false
          },
          {
            "line": 227,
            "code": "// Datos empresa",
            "current": false
          },
          {
            "line": 228,
            "code": "supabase.from('organizaciones').select('*').limit(1).single(),",
            "current": true
          },
          {
            "line": 229,
            "code": "",
            "current": false
          },
          {
            "line": 230,
            "code": "// Documentos generados",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/services/partnerSyncEngine.js",
        "line": 231,
        "code": "supabase.from('generated_documents').select('*').eq('rat_id', ratId),",
        "type": "SELECT",
        "table": "generated_documents",
        "operation": "READ",
        "context": [
          {
            "line": 229,
            "code": "",
            "current": false
          },
          {
            "line": 230,
            "code": "// Documentos generados",
            "current": false
          },
          {
            "line": 231,
            "code": "supabase.from('generated_documents').select('*').eq('rat_id', ratId),",
            "current": true
          },
          {
            "line": 232,
            "code": "",
            "current": false
          },
          {
            "line": 233,
            "code": "// Actividades DPO",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "generated_documents",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007002454_ceehesdkb\\\"\"}",
          "timestamp": "2025-09-04T17:30:02.635Z"
        }
      },
      {
        "file": "frontend/src/services/partnerSyncEngine.js",
        "line": 234,
        "code": "supabase.from('actividades_dpo').select('*').eq('rat_id', ratId),",
        "type": "SELECT",
        "table": "actividades_dpo",
        "operation": "READ",
        "context": [
          {
            "line": 232,
            "code": "",
            "current": false
          },
          {
            "line": 233,
            "code": "// Actividades DPO",
            "current": false
          },
          {
            "line": 234,
            "code": "supabase.from('actividades_dpo').select('*').eq('rat_id', ratId),",
            "current": true
          },
          {
            "line": 235,
            "code": "",
            "current": false
          },
          {
            "line": 236,
            "code": "// Proveedores asociados",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/services/partnerSyncEngine.js",
        "line": 237,
        "code": "supabase.from('rat_proveedores').select('*, proveedores(*)').eq('rat_id', ratId)",
        "type": "SELECT",
        "table": "rat_proveedores",
        "operation": "READ",
        "context": [
          {
            "line": 235,
            "code": "",
            "current": false
          },
          {
            "line": 236,
            "code": "// Proveedores asociados",
            "current": false
          },
          {
            "line": 237,
            "code": "supabase.from('rat_proveedores').select('*, proveedores(*)').eq('rat_id', ratId)",
            "current": true
          },
          {
            "line": 238,
            "code": "]);",
            "current": false
          },
          {
            "line": 239,
            "code": "",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "rat_proveedores",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007002836_idlv8dc03\\\"\"}",
          "timestamp": "2025-09-04T17:30:03.020Z"
        }
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 4,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 2,
            "code": "// Sistema LPDP v3.0.1 - Ley 21.719",
            "current": false
          },
          {
            "line": 3,
            "code": "",
            "current": false
          },
          {
            "line": 4,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 5,
            "code": "",
            "current": false
          },
          {
            "line": 6,
            "code": "class ProveedoresService {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 11,
        "code": "const { data: { user } } = await supabase.auth.getUser();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 9,
            "code": "try {",
            "current": false
          },
          {
            "line": 10,
            "code": "// Obtener usuario actual de Supabase",
            "current": false
          },
          {
            "line": 11,
            "code": "const { data: { user } } = await supabase.auth.getUser();",
            "current": true
          },
          {
            "line": 12,
            "code": "if (!user) return 'default';",
            "current": false
          },
          {
            "line": 13,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 16,
        "code": ".from('user_sessions')",
        "type": "OTHER",
        "table": "user_sessions",
        "operation": "OTHER",
        "context": [
          {
            "line": 14,
            "code": "// Obtener tenant desde user_sessions",
            "current": false
          },
          {
            "line": 15,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 16,
            "code": ".from('user_sessions')",
            "current": true
          },
          {
            "line": 17,
            "code": ".select('tenant_id, tenant_data')",
            "current": false
          },
          {
            "line": 18,
            "code": ".eq('user_id', user.id)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "user_sessions",
          "error": "INSERT failed: 400 - {\"code\":\"PGRST204\",\"details\":null,\"hint\":null,\"message\":\"Could not find the 'data' column of 'user_sessions' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:04.286Z"
        }
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 17,
        "code": ".select('tenant_id, tenant_data')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 15,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 16,
            "code": ".from('user_sessions')",
            "current": false
          },
          {
            "line": 17,
            "code": ".select('tenant_id, tenant_data')",
            "current": true
          },
          {
            "line": 18,
            "code": ".eq('user_id', user.id)",
            "current": false
          },
          {
            "line": 19,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 27,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 25,
            "code": "// Si no hay sesi√≥n, obtener primera organizaci√≥n del usuario",
            "current": false
          },
          {
            "line": 26,
            "code": "const { data: org } = await supabase",
            "current": false
          },
          {
            "line": 27,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 28,
            "code": ".select('id')",
            "current": false
          },
          {
            "line": 29,
            "code": ".eq('user_id', user.id)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 28,
        "code": ".select('id')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 26,
            "code": "const { data: org } = await supabase",
            "current": false
          },
          {
            "line": 27,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 28,
            "code": ".select('id')",
            "current": true
          },
          {
            "line": 29,
            "code": ".eq('user_id', user.id)",
            "current": false
          },
          {
            "line": 30,
            "code": ".limit(1)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 41,
        "code": "async getSupabaseClient() {",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 39,
            "code": "",
            "current": false
          },
          {
            "line": 40,
            "code": "// Obtener cliente Supabase con RLS para tenant",
            "current": false
          },
          {
            "line": 41,
            "code": "async getSupabaseClient() {",
            "current": true
          },
          {
            "line": 42,
            "code": "const tenantId = await this.getCurrentTenant();",
            "current": false
          },
          {
            "line": 43,
            "code": "// RLS autom√°tico filtrar√° por tenant_id",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 50,
        "code": "const { client, tenantId } = await this.getSupabaseClient();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 48,
            "code": "async createProveedor(proveedorData) {",
            "current": false
          },
          {
            "line": 49,
            "code": "try {",
            "current": false
          },
          {
            "line": 50,
            "code": "const { client, tenantId } = await this.getSupabaseClient();",
            "current": true
          },
          {
            "line": 51,
            "code": "",
            "current": false
          },
          {
            "line": 52,
            "code": "const nuevoProveedor = {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 61,
        "code": ".from('proveedores')",
        "type": "OTHER",
        "table": "proveedores",
        "operation": "OTHER",
        "context": [
          {
            "line": 59,
            "code": "// 1. Guardar en Supabase",
            "current": false
          },
          {
            "line": 60,
            "code": "const { data, error } = await client",
            "current": false
          },
          {
            "line": 61,
            "code": ".from('proveedores')",
            "current": true
          },
          {
            "line": 62,
            "code": ".insert([nuevoProveedor])",
            "current": false
          },
          {
            "line": 63,
            "code": ".select()",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "proveedores",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006999360_mm271x3en\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.535Z"
        }
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 62,
        "code": ".insert([nuevoProveedor])",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 60,
            "code": "const { data, error } = await client",
            "current": false
          },
          {
            "line": 61,
            "code": ".from('proveedores')",
            "current": false
          },
          {
            "line": 62,
            "code": ".insert([nuevoProveedor])",
            "current": true
          },
          {
            "line": 63,
            "code": ".select()",
            "current": false
          },
          {
            "line": 64,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 63,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 61,
            "code": ".from('proveedores')",
            "current": false
          },
          {
            "line": 62,
            "code": ".insert([nuevoProveedor])",
            "current": false
          },
          {
            "line": 63,
            "code": ".select()",
            "current": true
          },
          {
            "line": 64,
            "code": ".single();",
            "current": false
          },
          {
            "line": 65,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 83,
        "code": "const { client, tenantId } = await this.getSupabaseClient();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 81,
            "code": "async getProveedores() {",
            "current": false
          },
          {
            "line": 82,
            "code": "try {",
            "current": false
          },
          {
            "line": 83,
            "code": "const { client, tenantId } = await this.getSupabaseClient();",
            "current": true
          },
          {
            "line": 84,
            "code": "",
            "current": false
          },
          {
            "line": 85,
            "code": "// //console.log('üîç Buscando proveedores para tenant:', tenantId);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 89,
        "code": ".from('proveedores')",
        "type": "OTHER",
        "table": "proveedores",
        "operation": "OTHER",
        "context": [
          {
            "line": 87,
            "code": "// Estrategia inteligente: primero intentar con el tenant calculado",
            "current": false
          },
          {
            "line": 88,
            "code": "let { data, error } = await client",
            "current": false
          },
          {
            "line": 89,
            "code": ".from('proveedores')",
            "current": true
          },
          {
            "line": 90,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 91,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "proveedores",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006999360_mm271x3en\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.535Z"
        }
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 90,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 88,
            "code": "let { data, error } = await client",
            "current": false
          },
          {
            "line": 89,
            "code": ".from('proveedores')",
            "current": false
          },
          {
            "line": 90,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 91,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 92,
            "code": ".order('created_at', { ascending: false });",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 108,
        "code": ".from('proveedores')",
        "type": "OTHER",
        "table": "proveedores",
        "operation": "OTHER",
        "context": [
          {
            "line": 106,
            "code": "// //console.log('üîÑ Probando variante de tenant:', variant);",
            "current": false
          },
          {
            "line": 107,
            "code": "const variantResult = await client",
            "current": false
          },
          {
            "line": 108,
            "code": ".from('proveedores')",
            "current": true
          },
          {
            "line": 109,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 110,
            "code": ".eq('tenant_id', variant)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "proveedores",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006999360_mm271x3en\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.535Z"
        }
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 109,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 107,
            "code": "const variantResult = await client",
            "current": false
          },
          {
            "line": 108,
            "code": ".from('proveedores')",
            "current": false
          },
          {
            "line": 109,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 110,
            "code": ".eq('tenant_id', variant)",
            "current": false
          },
          {
            "line": 111,
            "code": ".order('created_at', { ascending: false });",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 127,
        "code": ".from('proveedores')",
        "type": "OTHER",
        "table": "proveedores",
        "operation": "OTHER",
        "context": [
          {
            "line": 125,
            "code": "// //console.log('üîç Verificando qu√© tenant_ids existen en la BD...');",
            "current": false
          },
          {
            "line": 126,
            "code": "const { data: sampleData } = await client",
            "current": false
          },
          {
            "line": 127,
            "code": ".from('proveedores')",
            "current": true
          },
          {
            "line": 128,
            "code": ".select('tenant_id, nombre')",
            "current": false
          },
          {
            "line": 129,
            "code": ".limit(5);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "proveedores",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006999360_mm271x3en\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.535Z"
        }
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 128,
        "code": ".select('tenant_id, nombre')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 126,
            "code": "const { data: sampleData } = await client",
            "current": false
          },
          {
            "line": 127,
            "code": ".from('proveedores')",
            "current": false
          },
          {
            "line": 128,
            "code": ".select('tenant_id, nombre')",
            "current": true
          },
          {
            "line": 129,
            "code": ".limit(5);",
            "current": false
          },
          {
            "line": 130,
            "code": "// //console.log('üîç Muestra de datos:', sampleData?.map(p => ({ tenant: p.tenant_id, nombre: p.nombre })));",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 156,
        "code": "const { client, tenantId } = await this.getSupabaseClient();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 154,
            "code": "async updateProveedor(proveedorId, updates) {",
            "current": false
          },
          {
            "line": 155,
            "code": "try {",
            "current": false
          },
          {
            "line": 156,
            "code": "const { client, tenantId } = await this.getSupabaseClient();",
            "current": true
          },
          {
            "line": 157,
            "code": "",
            "current": false
          },
          {
            "line": 158,
            "code": "const datosActualizados = {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 165,
        "code": ".from('proveedores')",
        "type": "OTHER",
        "table": "proveedores",
        "operation": "OTHER",
        "context": [
          {
            "line": 163,
            "code": "// 1. Actualizar en Supabase",
            "current": false
          },
          {
            "line": 164,
            "code": "const { data, error } = await client",
            "current": false
          },
          {
            "line": 165,
            "code": ".from('proveedores')",
            "current": true
          },
          {
            "line": 166,
            "code": ".update(datosActualizados)",
            "current": false
          },
          {
            "line": 167,
            "code": ".eq('id', proveedorId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "proveedores",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006999360_mm271x3en\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.535Z"
        }
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 166,
        "code": ".update(datosActualizados)",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 164,
            "code": "const { data, error } = await client",
            "current": false
          },
          {
            "line": 165,
            "code": ".from('proveedores')",
            "current": false
          },
          {
            "line": 166,
            "code": ".update(datosActualizados)",
            "current": true
          },
          {
            "line": 167,
            "code": ".eq('id', proveedorId)",
            "current": false
          },
          {
            "line": 168,
            "code": ".eq('tenant_id', tenantId) // Seguridad adicional",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 169,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 167,
            "code": ".eq('id', proveedorId)",
            "current": false
          },
          {
            "line": 168,
            "code": ".eq('tenant_id', tenantId) // Seguridad adicional",
            "current": false
          },
          {
            "line": 169,
            "code": ".select()",
            "current": true
          },
          {
            "line": 170,
            "code": ".single();",
            "current": false
          },
          {
            "line": 171,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 189,
        "code": "const { client, tenantId } = await this.getSupabaseClient();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 187,
            "code": "async deleteProveedor(proveedorId) {",
            "current": false
          },
          {
            "line": 188,
            "code": "try {",
            "current": false
          },
          {
            "line": 189,
            "code": "const { client, tenantId } = await this.getSupabaseClient();",
            "current": true
          },
          {
            "line": 190,
            "code": "",
            "current": false
          },
          {
            "line": 191,
            "code": "// 1. Eliminar de Supabase",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 193,
        "code": ".from('proveedores')",
        "type": "OTHER",
        "table": "proveedores",
        "operation": "OTHER",
        "context": [
          {
            "line": 191,
            "code": "// 1. Eliminar de Supabase",
            "current": false
          },
          {
            "line": 192,
            "code": "const { error } = await client",
            "current": false
          },
          {
            "line": 193,
            "code": ".from('proveedores')",
            "current": true
          },
          {
            "line": 194,
            "code": ".delete()",
            "current": false
          },
          {
            "line": 195,
            "code": ".eq('id', proveedorId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "proveedores",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006999360_mm271x3en\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.535Z"
        }
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 194,
        "code": ".delete()",
        "type": "DELETE",
        "table": "UNKNOWN",
        "operation": "DELETE",
        "context": [
          {
            "line": 192,
            "code": "const { error } = await client",
            "current": false
          },
          {
            "line": 193,
            "code": ".from('proveedores')",
            "current": false
          },
          {
            "line": 194,
            "code": ".delete()",
            "current": true
          },
          {
            "line": 195,
            "code": ".eq('id', proveedorId)",
            "current": false
          },
          {
            "line": 196,
            "code": ".eq('tenant_id', tenantId); // Seguridad adicional",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 215,
        "code": "const { client, tenantId } = await this.getSupabaseClient();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 213,
            "code": "async createDPA(proveedorId, dpaData) {",
            "current": false
          },
          {
            "line": 214,
            "code": "try {",
            "current": false
          },
          {
            "line": 215,
            "code": "const { client, tenantId } = await this.getSupabaseClient();",
            "current": true
          },
          {
            "line": 216,
            "code": "",
            "current": false
          },
          {
            "line": 217,
            "code": "const nuevoDPA = {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 227,
        "code": ".from('dpas')",
        "type": "OTHER",
        "table": "dpas",
        "operation": "OTHER",
        "context": [
          {
            "line": 225,
            "code": "// 1. Guardar DPA en Supabase",
            "current": false
          },
          {
            "line": 226,
            "code": "const { data: dpaCreated, error: dpaError } = await client",
            "current": false
          },
          {
            "line": 227,
            "code": ".from('dpas')",
            "current": true
          },
          {
            "line": 228,
            "code": ".insert([nuevoDPA])",
            "current": false
          },
          {
            "line": 229,
            "code": ".select()",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "dpas",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007006453_p0v8aigqm\\\"\"}",
          "timestamp": "2025-09-04T17:30:06.634Z"
        }
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 228,
        "code": ".insert([nuevoDPA])",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 226,
            "code": "const { data: dpaCreated, error: dpaError } = await client",
            "current": false
          },
          {
            "line": 227,
            "code": ".from('dpas')",
            "current": false
          },
          {
            "line": 228,
            "code": ".insert([nuevoDPA])",
            "current": true
          },
          {
            "line": 229,
            "code": ".select()",
            "current": false
          },
          {
            "line": 230,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 229,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 227,
            "code": ".from('dpas')",
            "current": false
          },
          {
            "line": 228,
            "code": ".insert([nuevoDPA])",
            "current": false
          },
          {
            "line": 229,
            "code": ".select()",
            "current": true
          },
          {
            "line": 230,
            "code": ".single();",
            "current": false
          },
          {
            "line": 231,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 261,
        "code": "const { client, tenantId } = await this.getSupabaseClient();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 259,
            "code": "async createEvaluacionSeguridad(proveedorId, evaluacionData) {",
            "current": false
          },
          {
            "line": 260,
            "code": "try {",
            "current": false
          },
          {
            "line": 261,
            "code": "const { client, tenantId } = await this.getSupabaseClient();",
            "current": true
          },
          {
            "line": 262,
            "code": "",
            "current": false
          },
          {
            "line": 263,
            "code": "const nuevaEvaluacion = {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 272,
        "code": ".from('evaluaciones_seguridad')",
        "type": "OTHER",
        "table": "evaluaciones_seguridad",
        "operation": "OTHER",
        "context": [
          {
            "line": 270,
            "code": "// 1. Guardar evaluaci√≥n en Supabase",
            "current": false
          },
          {
            "line": 271,
            "code": "const { data, error } = await client",
            "current": false
          },
          {
            "line": 272,
            "code": ".from('evaluaciones_seguridad')",
            "current": true
          },
          {
            "line": 273,
            "code": ".insert([nuevaEvaluacion])",
            "current": false
          },
          {
            "line": 274,
            "code": ".select()",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "evaluaciones_seguridad",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007008788_5yzgzhb83\\\"\"}",
          "timestamp": "2025-09-04T17:30:08.961Z"
        }
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 273,
        "code": ".insert([nuevaEvaluacion])",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 271,
            "code": "const { data, error } = await client",
            "current": false
          },
          {
            "line": 272,
            "code": ".from('evaluaciones_seguridad')",
            "current": false
          },
          {
            "line": 273,
            "code": ".insert([nuevaEvaluacion])",
            "current": true
          },
          {
            "line": 274,
            "code": ".select()",
            "current": false
          },
          {
            "line": 275,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 274,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 272,
            "code": ".from('evaluaciones_seguridad')",
            "current": false
          },
          {
            "line": 273,
            "code": ".insert([nuevaEvaluacion])",
            "current": false
          },
          {
            "line": 274,
            "code": ".select()",
            "current": true
          },
          {
            "line": 275,
            "code": ".single();",
            "current": false
          },
          {
            "line": 276,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 305,
        "code": "const { client, tenantId } = await this.getSupabaseClient();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 303,
            "code": "async asociarProveedorRAT(proveedorId, ratId) {",
            "current": false
          },
          {
            "line": 304,
            "code": "try {",
            "current": false
          },
          {
            "line": 305,
            "code": "const { client, tenantId } = await this.getSupabaseClient();",
            "current": true
          },
          {
            "line": 306,
            "code": "",
            "current": false
          },
          {
            "line": 307,
            "code": "const asociacion = {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 316,
        "code": ".from('rat_proveedores')",
        "type": "OTHER",
        "table": "rat_proveedores",
        "operation": "OTHER",
        "context": [
          {
            "line": 314,
            "code": "// 1. Crear asociaci√≥n en Supabase",
            "current": false
          },
          {
            "line": 315,
            "code": "const { data, error } = await client",
            "current": false
          },
          {
            "line": 316,
            "code": ".from('rat_proveedores')",
            "current": true
          },
          {
            "line": 317,
            "code": ".insert([asociacion])",
            "current": false
          },
          {
            "line": 318,
            "code": ".select()",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "rat_proveedores",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007002836_idlv8dc03\\\"\"}",
          "timestamp": "2025-09-04T17:30:03.020Z"
        }
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 317,
        "code": ".insert([asociacion])",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 315,
            "code": "const { data, error } = await client",
            "current": false
          },
          {
            "line": 316,
            "code": ".from('rat_proveedores')",
            "current": false
          },
          {
            "line": 317,
            "code": ".insert([asociacion])",
            "current": true
          },
          {
            "line": 318,
            "code": ".select()",
            "current": false
          },
          {
            "line": 319,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 318,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 316,
            "code": ".from('rat_proveedores')",
            "current": false
          },
          {
            "line": 317,
            "code": ".insert([asociacion])",
            "current": false
          },
          {
            "line": 318,
            "code": ".select()",
            "current": true
          },
          {
            "line": 319,
            "code": ".single();",
            "current": false
          },
          {
            "line": 320,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 339,
        "code": "const client = this.getSupabaseClient();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 337,
            "code": "try {",
            "current": false
          },
          {
            "line": 338,
            "code": "const tenantId = this.getCurrentTenant();",
            "current": false
          },
          {
            "line": 339,
            "code": "const client = this.getSupabaseClient();",
            "current": true
          },
          {
            "line": 340,
            "code": "",
            "current": false
          },
          {
            "line": 341,
            "code": "const { data, error } = await client",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 342,
        "code": ".from('rat_proveedores')",
        "type": "OTHER",
        "table": "rat_proveedores",
        "operation": "OTHER",
        "context": [
          {
            "line": 340,
            "code": "",
            "current": false
          },
          {
            "line": 341,
            "code": "const { data, error } = await client",
            "current": false
          },
          {
            "line": 342,
            "code": ".from('rat_proveedores')",
            "current": true
          },
          {
            "line": 343,
            "code": ".select(`",
            "current": false
          },
          {
            "line": 344,
            "code": "*,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "rat_proveedores",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007002836_idlv8dc03\\\"\"}",
          "timestamp": "2025-09-04T17:30:03.020Z"
        }
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 343,
        "code": ".select(`",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 341,
            "code": "const { data, error } = await client",
            "current": false
          },
          {
            "line": 342,
            "code": ".from('rat_proveedores')",
            "current": false
          },
          {
            "line": 343,
            "code": ".select(`",
            "current": true
          },
          {
            "line": 344,
            "code": "*,",
            "current": false
          },
          {
            "line": 345,
            "code": "proveedores (*)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 368,
        "code": "const client = this.getSupabaseClient();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 366,
            "code": "try {",
            "current": false
          },
          {
            "line": 367,
            "code": "const tenantId = this.getCurrentTenant();",
            "current": false
          },
          {
            "line": 368,
            "code": "const client = this.getSupabaseClient();",
            "current": true
          },
          {
            "line": 369,
            "code": "",
            "current": false
          },
          {
            "line": 370,
            "code": "// //console.log('üîí Validando aislaci√≥n para tenant:', tenantId);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 374,
        "code": ".from('proveedores')",
        "type": "OTHER",
        "table": "proveedores",
        "operation": "OTHER",
        "context": [
          {
            "line": 372,
            "code": "// Test 1: Intentar acceder a datos de otro tenant (debe fallar)",
            "current": false
          },
          {
            "line": 373,
            "code": "const { data: otroTenant, error: errorOtro } = await client",
            "current": false
          },
          {
            "line": 374,
            "code": ".from('proveedores')",
            "current": true
          },
          {
            "line": 375,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 376,
            "code": ".neq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "proveedores",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006999360_mm271x3en\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.535Z"
        }
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 375,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 373,
            "code": "const { data: otroTenant, error: errorOtro } = await client",
            "current": false
          },
          {
            "line": 374,
            "code": ".from('proveedores')",
            "current": false
          },
          {
            "line": 375,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 376,
            "code": ".neq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 377,
            "code": ".limit(1);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 386,
        "code": ".from('proveedores')",
        "type": "OTHER",
        "table": "proveedores",
        "operation": "OTHER",
        "context": [
          {
            "line": 384,
            "code": "// Test 2: Verificar que solo vemos nuestros datos",
            "current": false
          },
          {
            "line": 385,
            "code": "const { data: misDatos, error } = await client",
            "current": false
          },
          {
            "line": 386,
            "code": ".from('proveedores')",
            "current": true
          },
          {
            "line": 387,
            "code": ".select('tenant_id')",
            "current": false
          },
          {
            "line": 388,
            "code": ".limit(10);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "proveedores",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006999360_mm271x3en\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.535Z"
        }
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 387,
        "code": ".select('tenant_id')",
        "type": "SELECT",
        "table": "tenant_id",
        "operation": "READ",
        "context": [
          {
            "line": 385,
            "code": "const { data: misDatos, error } = await client",
            "current": false
          },
          {
            "line": 386,
            "code": ".from('proveedores')",
            "current": false
          },
          {
            "line": 387,
            "code": ".select('tenant_id')",
            "current": true
          },
          {
            "line": 388,
            "code": ".limit(10);",
            "current": false
          },
          {
            "line": 389,
            "code": "",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "tenant_id",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":\"Perhaps you meant the table 'public.tenant_limits'\",\"message\":\"Could not find the table 'public.tenant_id' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:04.693Z"
        }
      },
      {
        "file": "frontend/src/services/proveedoresService.js",
        "line": 422,
        "code": "const { tenantId } = await this.getSupabaseClient();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 420,
            "code": "async getEstadisticasTenant() {",
            "current": false
          },
          {
            "line": 421,
            "code": "try {",
            "current": false
          },
          {
            "line": 422,
            "code": "const { tenantId } = await this.getSupabaseClient();",
            "current": true
          },
          {
            "line": 423,
            "code": "const { data: proveedores } = await this.getProveedores();",
            "current": false
          },
          {
            "line": 424,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratIntelligenceEngine.js",
        "line": 7,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 5,
            "code": "*/",
            "current": false
          },
          {
            "line": 6,
            "code": "",
            "current": false
          },
          {
            "line": 7,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 8,
            "code": "",
            "current": false
          },
          {
            "line": 9,
            "code": "const ratIntelligenceEngine = {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratIntelligenceEngine.js",
        "line": 22,
        "code": "const { data: { user: authUser } } = await supabase.auth.getUser();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 20,
            "code": "let user = null;",
            "current": false
          },
          {
            "line": 21,
            "code": "try {",
            "current": false
          },
          {
            "line": 22,
            "code": "const { data: { user: authUser } } = await supabase.auth.getUser();",
            "current": true
          },
          {
            "line": 23,
            "code": "user = authUser;",
            "current": false
          },
          {
            "line": 24,
            "code": "} catch (authError) {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratIntelligenceEngine.js",
        "line": 61,
        "code": ".from('actividades_dpo')",
        "type": "OTHER",
        "table": "actividades_dpo",
        "operation": "OTHER",
        "context": [
          {
            "line": 59,
            "code": "",
            "current": false
          },
          {
            "line": 60,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 61,
            "code": ".from('actividades_dpo')",
            "current": true
          },
          {
            "line": 62,
            "code": ".insert(activities)",
            "current": false
          },
          {
            "line": 63,
            "code": ".select();",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/services/ratIntelligenceEngine.js",
        "line": 62,
        "code": ".insert(activities)",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 60,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 61,
            "code": ".from('actividades_dpo')",
            "current": false
          },
          {
            "line": 62,
            "code": ".insert(activities)",
            "current": true
          },
          {
            "line": 63,
            "code": ".select();",
            "current": false
          },
          {
            "line": 64,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratIntelligenceEngine.js",
        "line": 63,
        "code": ".select();",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 61,
            "code": ".from('actividades_dpo')",
            "current": false
          },
          {
            "line": 62,
            "code": ".insert(activities)",
            "current": false
          },
          {
            "line": 63,
            "code": ".select();",
            "current": true
          },
          {
            "line": 64,
            "code": "",
            "current": false
          },
          {
            "line": 65,
            "code": "if (error) {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratIntelligenceEngine.js",
        "line": 84,
        "code": ".from('dpo_activities_fallback')",
        "type": "OTHER",
        "table": "dpo_activities_fallback",
        "operation": "OTHER",
        "context": [
          {
            "line": 82,
            "code": "",
            "current": false
          },
          {
            "line": 83,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 84,
            "code": ".from('dpo_activities_fallback')",
            "current": true
          },
          {
            "line": 85,
            "code": ".insert(fallbackActivities);",
            "current": false
          },
          {
            "line": 86,
            "code": "",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "dpo_activities_fallback",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007009162_r8b8bdgs5\\\"\"}",
          "timestamp": "2025-09-04T17:30:09.334Z"
        }
      },
      {
        "file": "frontend/src/services/ratIntelligenceEngine.js",
        "line": 85,
        "code": ".insert(fallbackActivities);",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 83,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 84,
            "code": ".from('dpo_activities_fallback')",
            "current": false
          },
          {
            "line": 85,
            "code": ".insert(fallbackActivities);",
            "current": true
          },
          {
            "line": 86,
            "code": "",
            "current": false
          },
          {
            "line": 87,
            "code": "// //console.log('Actividades guardadas en tabla fallback Supabase');",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 8,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 6,
            "code": "*/",
            "current": false
          },
          {
            "line": 7,
            "code": "",
            "current": false
          },
          {
            "line": 8,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 9,
            "code": "import { RAT_ESTADOS } from '../constants/estados';",
            "current": false
          },
          {
            "line": 10,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 20,
        "code": ".from(this.tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 18,
            "code": "try {",
            "current": false
          },
          {
            "line": 19,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 20,
            "code": ".from(this.tableName)",
            "current": true
          },
          {
            "line": 21,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 22,
            "code": ".limit(100);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 21,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 19,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 20,
            "code": ".from(this.tableName)",
            "current": false
          },
          {
            "line": 21,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 22,
            "code": ".limit(100);",
            "current": false
          },
          {
            "line": 23,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 36,
        "code": ".from(this.tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 34,
            "code": "try {",
            "current": false
          },
          {
            "line": 35,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 36,
            "code": ".from(this.tableName)",
            "current": true
          },
          {
            "line": 37,
            "code": ".insert([ratData])",
            "current": false
          },
          {
            "line": 38,
            "code": ".select()",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 37,
        "code": ".insert([ratData])",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 35,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 36,
            "code": ".from(this.tableName)",
            "current": false
          },
          {
            "line": 37,
            "code": ".insert([ratData])",
            "current": true
          },
          {
            "line": 38,
            "code": ".select()",
            "current": false
          },
          {
            "line": 39,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 38,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 36,
            "code": ".from(this.tableName)",
            "current": false
          },
          {
            "line": 37,
            "code": ".insert([ratData])",
            "current": false
          },
          {
            "line": 38,
            "code": ".select()",
            "current": true
          },
          {
            "line": 39,
            "code": ".single();",
            "current": false
          },
          {
            "line": 40,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 53,
        "code": ".from(this.tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 51,
            "code": "try {",
            "current": false
          },
          {
            "line": 52,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 53,
            "code": ".from(this.tableName)",
            "current": true
          },
          {
            "line": 54,
            "code": ".update(ratData)",
            "current": false
          },
          {
            "line": 55,
            "code": ".eq('id', id)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 54,
        "code": ".update(ratData)",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 52,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 53,
            "code": ".from(this.tableName)",
            "current": false
          },
          {
            "line": 54,
            "code": ".update(ratData)",
            "current": true
          },
          {
            "line": 55,
            "code": ".eq('id', id)",
            "current": false
          },
          {
            "line": 56,
            "code": ".select()",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 56,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 54,
            "code": ".update(ratData)",
            "current": false
          },
          {
            "line": 55,
            "code": ".eq('id', id)",
            "current": false
          },
          {
            "line": 56,
            "code": ".select()",
            "current": true
          },
          {
            "line": 57,
            "code": ".single();",
            "current": false
          },
          {
            "line": 58,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 71,
        "code": ".from(this.tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 69,
            "code": "try {",
            "current": false
          },
          {
            "line": 70,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 71,
            "code": ".from(this.tableName)",
            "current": true
          },
          {
            "line": 72,
            "code": ".delete()",
            "current": false
          },
          {
            "line": 73,
            "code": ".eq('id', id);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 72,
        "code": ".delete()",
        "type": "DELETE",
        "table": "UNKNOWN",
        "operation": "DELETE",
        "context": [
          {
            "line": 70,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 71,
            "code": ".from(this.tableName)",
            "current": false
          },
          {
            "line": 72,
            "code": ".delete()",
            "current": true
          },
          {
            "line": 73,
            "code": ".eq('id', id);",
            "current": false
          },
          {
            "line": 74,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 87,
        "code": ".from(this.tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 85,
            "code": "try {",
            "current": false
          },
          {
            "line": 86,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 87,
            "code": ".from(this.tableName)",
            "current": true
          },
          {
            "line": 88,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 89,
            "code": ".eq('id', id)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 88,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 86,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 87,
            "code": ".from(this.tableName)",
            "current": false
          },
          {
            "line": 88,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 89,
            "code": ".eq('id', id)",
            "current": false
          },
          {
            "line": 90,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 111,
        "code": ".from('user_sessions')",
        "type": "OTHER",
        "table": "user_sessions",
        "operation": "OTHER",
        "context": [
          {
            "line": 109,
            "code": "// Upsert con conflict resolution espec√≠fico para user_id + tenant_id",
            "current": false
          },
          {
            "line": 110,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 111,
            "code": ".from('user_sessions')",
            "current": true
          },
          {
            "line": 112,
            "code": ".upsert({",
            "current": false
          },
          {
            "line": 113,
            "code": "user_id: userId,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "user_sessions",
          "error": "INSERT failed: 400 - {\"code\":\"PGRST204\",\"details\":null,\"hint\":null,\"message\":\"Could not find the 'data' column of 'user_sessions' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:04.286Z"
        }
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 112,
        "code": ".upsert({",
        "type": "UPSERT",
        "table": "UNKNOWN",
        "operation": "UPSERT",
        "context": [
          {
            "line": 110,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 111,
            "code": ".from('user_sessions')",
            "current": false
          },
          {
            "line": 112,
            "code": ".upsert({",
            "current": true
          },
          {
            "line": 113,
            "code": "user_id: userId,",
            "current": false
          },
          {
            "line": 114,
            "code": "tenant_id: tenant.id,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 121,
        "code": ".select();",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 119,
            "code": "onConflict: 'user_id,tenant_id'",
            "current": false
          },
          {
            "line": 120,
            "code": "})",
            "current": false
          },
          {
            "line": 121,
            "code": ".select();",
            "current": true
          },
          {
            "line": 122,
            "code": "",
            "current": false
          },
          {
            "line": 123,
            "code": "if (error) {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 143,
        "code": ".from('user_sessions')",
        "type": "OTHER",
        "table": "user_sessions",
        "operation": "OTHER",
        "context": [
          {
            "line": 141,
            "code": "",
            "current": false
          },
          {
            "line": 142,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 143,
            "code": ".from('user_sessions')",
            "current": true
          },
          {
            "line": 144,
            "code": ".select('tenant_id, tenant_data')",
            "current": false
          },
          {
            "line": 145,
            "code": ".eq('user_id', userId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "user_sessions",
          "error": "INSERT failed: 400 - {\"code\":\"PGRST204\",\"details\":null,\"hint\":null,\"message\":\"Could not find the 'data' column of 'user_sessions' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:04.286Z"
        }
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 144,
        "code": ".select('tenant_id, tenant_data')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 142,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 143,
            "code": ".from('user_sessions')",
            "current": false
          },
          {
            "line": 144,
            "code": ".select('tenant_id, tenant_data')",
            "current": true
          },
          {
            "line": 145,
            "code": ".eq('user_id', userId)",
            "current": false
          },
          {
            "line": 146,
            "code": ".eq('is_active', true)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 165,
        "code": ".from(this.tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 163,
            "code": "try {",
            "current": false
          },
          {
            "line": 164,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 165,
            "code": ".from(this.tableName)",
            "current": true
          },
          {
            "line": 166,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 167,
            "code": ".eq('estado', RAT_ESTADOS.CERTIFICADO)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/ratService.js",
        "line": 166,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 164,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 165,
            "code": ".from(this.tableName)",
            "current": false
          },
          {
            "line": 166,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 167,
            "code": ".eq('estado', RAT_ESTADOS.CERTIFICADO)",
            "current": false
          },
          {
            "line": 168,
            "code": ".limit(100);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/riskCalculationEngine.js",
        "line": 7,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 5,
            "code": "*/",
            "current": false
          },
          {
            "line": 6,
            "code": "",
            "current": false
          },
          {
            "line": 7,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 8,
            "code": "",
            "current": false
          },
          {
            "line": 9,
            "code": "class RiskCalculationEngine {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/riskCalculationEngine.js",
        "line": 248,
        "code": ".from('proveedores')",
        "type": "OTHER",
        "table": "proveedores",
        "operation": "OTHER",
        "context": [
          {
            "line": 246,
            "code": "try {",
            "current": false
          },
          {
            "line": 247,
            "code": "const { data: proveedor } = await supabase",
            "current": false
          },
          {
            "line": 248,
            "code": ".from('proveedores')",
            "current": true
          },
          {
            "line": 249,
            "code": ".select('evaluacion_seguridad')",
            "current": false
          },
          {
            "line": 250,
            "code": ".eq('id', proveedorId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "proveedores",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006999360_mm271x3en\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.535Z"
        }
      },
      {
        "file": "frontend/src/services/riskCalculationEngine.js",
        "line": 249,
        "code": ".select('evaluacion_seguridad')",
        "type": "SELECT",
        "table": "evaluacion_seguridad",
        "operation": "READ",
        "context": [
          {
            "line": 247,
            "code": "const { data: proveedor } = await supabase",
            "current": false
          },
          {
            "line": 248,
            "code": ".from('proveedores')",
            "current": false
          },
          {
            "line": 249,
            "code": ".select('evaluacion_seguridad')",
            "current": true
          },
          {
            "line": 250,
            "code": ".eq('id', proveedorId)",
            "current": false
          },
          {
            "line": 251,
            "code": ".single();",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "evaluacion_seguridad",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":\"Perhaps you meant the table 'public.evaluaciones_seguridad'\",\"message\":\"Could not find the table 'public.evaluacion_seguridad' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:09.720Z"
        }
      },
      {
        "file": "frontend/src/services/riskCalculationEngine.js",
        "line": 422,
        "code": ".from('generated_documents')",
        "type": "OTHER",
        "table": "generated_documents",
        "operation": "OTHER",
        "context": [
          {
            "line": 420,
            "code": "",
            "current": false
          },
          {
            "line": 421,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 422,
            "code": ".from('generated_documents')",
            "current": true
          },
          {
            "line": 423,
            "code": ".insert(eipdData)",
            "current": false
          },
          {
            "line": 424,
            "code": ".select()",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "generated_documents",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007002454_ceehesdkb\\\"\"}",
          "timestamp": "2025-09-04T17:30:02.635Z"
        }
      },
      {
        "file": "frontend/src/services/riskCalculationEngine.js",
        "line": 423,
        "code": ".insert(eipdData)",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 421,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 422,
            "code": ".from('generated_documents')",
            "current": false
          },
          {
            "line": 423,
            "code": ".insert(eipdData)",
            "current": true
          },
          {
            "line": 424,
            "code": ".select()",
            "current": false
          },
          {
            "line": 425,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/riskCalculationEngine.js",
        "line": 424,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 422,
            "code": ".from('generated_documents')",
            "current": false
          },
          {
            "line": 423,
            "code": ".insert(eipdData)",
            "current": false
          },
          {
            "line": 424,
            "code": ".select()",
            "current": true
          },
          {
            "line": 425,
            "code": ".single();",
            "current": false
          },
          {
            "line": 426,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/riskCalculationEngine.js",
        "line": 447,
        "code": ".from('actividades_dpo')",
        "type": "OTHER",
        "table": "actividades_dpo",
        "operation": "OTHER",
        "context": [
          {
            "line": 445,
            "code": "",
            "current": false
          },
          {
            "line": 446,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 447,
            "code": ".from('actividades_dpo')",
            "current": true
          },
          {
            "line": 448,
            "code": ".insert(actividad)",
            "current": false
          },
          {
            "line": 449,
            "code": ".select()",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/services/riskCalculationEngine.js",
        "line": 448,
        "code": ".insert(actividad)",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 446,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 447,
            "code": ".from('actividades_dpo')",
            "current": false
          },
          {
            "line": 448,
            "code": ".insert(actividad)",
            "current": true
          },
          {
            "line": 449,
            "code": ".select()",
            "current": false
          },
          {
            "line": 450,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/riskCalculationEngine.js",
        "line": 449,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 447,
            "code": ".from('actividades_dpo')",
            "current": false
          },
          {
            "line": 448,
            "code": ".insert(actividad)",
            "current": false
          },
          {
            "line": 449,
            "code": ".select()",
            "current": true
          },
          {
            "line": 450,
            "code": ".single();",
            "current": false
          },
          {
            "line": 451,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/riskCalculationEngine.js",
        "line": 469,
        "code": ".from('dpo_notifications')",
        "type": "OTHER",
        "table": "dpo_notifications",
        "operation": "OTHER",
        "context": [
          {
            "line": 467,
            "code": "",
            "current": false
          },
          {
            "line": 468,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 469,
            "code": ".from('dpo_notifications')",
            "current": true
          },
          {
            "line": 470,
            "code": ".insert(notificacion)",
            "current": false
          },
          {
            "line": 471,
            "code": ".select()",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "dpo_notifications",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007001296_x2bjv8rug\\\"\"}",
          "timestamp": "2025-09-04T17:30:01.480Z"
        }
      },
      {
        "file": "frontend/src/services/riskCalculationEngine.js",
        "line": 470,
        "code": ".insert(notificacion)",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 468,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 469,
            "code": ".from('dpo_notifications')",
            "current": false
          },
          {
            "line": 470,
            "code": ".insert(notificacion)",
            "current": true
          },
          {
            "line": 471,
            "code": ".select()",
            "current": false
          },
          {
            "line": 472,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/riskCalculationEngine.js",
        "line": 471,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 469,
            "code": ".from('dpo_notifications')",
            "current": false
          },
          {
            "line": 470,
            "code": ".insert(notificacion)",
            "current": false
          },
          {
            "line": 471,
            "code": ".select()",
            "current": true
          },
          {
            "line": 472,
            "code": ".single();",
            "current": false
          },
          {
            "line": 473,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/riskCalculationEngine.js",
        "line": 490,
        "code": ".from('dpia')",
        "type": "OTHER",
        "table": "dpia",
        "operation": "OTHER",
        "context": [
          {
            "line": 488,
            "code": "",
            "current": false
          },
          {
            "line": 489,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 490,
            "code": ".from('dpia')",
            "current": true
          },
          {
            "line": 491,
            "code": ".insert(dpia)",
            "current": false
          },
          {
            "line": 492,
            "code": ".select()",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "dpia",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007009921_59x91gone\\\"\"}",
          "timestamp": "2025-09-04T17:30:10.095Z"
        }
      },
      {
        "file": "frontend/src/services/riskCalculationEngine.js",
        "line": 491,
        "code": ".insert(dpia)",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 489,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 490,
            "code": ".from('dpia')",
            "current": false
          },
          {
            "line": 491,
            "code": ".insert(dpia)",
            "current": true
          },
          {
            "line": 492,
            "code": ".select()",
            "current": false
          },
          {
            "line": 493,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/riskCalculationEngine.js",
        "line": 492,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 490,
            "code": ".from('dpia')",
            "current": false
          },
          {
            "line": 491,
            "code": ".insert(dpia)",
            "current": false
          },
          {
            "line": 492,
            "code": ".select()",
            "current": true
          },
          {
            "line": 493,
            "code": ".single();",
            "current": false
          },
          {
            "line": 494,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/riskCalculationEngine.js",
        "line": 520,
        "code": ".from('actividades_dpo')",
        "type": "OTHER",
        "table": "actividades_dpo",
        "operation": "OTHER",
        "context": [
          {
            "line": 518,
            "code": "",
            "current": false
          },
          {
            "line": 519,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 520,
            "code": ".from('actividades_dpo')",
            "current": true
          },
          {
            "line": 521,
            "code": ".insert(alerta)",
            "current": false
          },
          {
            "line": 522,
            "code": ".select()",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/services/riskCalculationEngine.js",
        "line": 521,
        "code": ".insert(alerta)",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 519,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 520,
            "code": ".from('actividades_dpo')",
            "current": false
          },
          {
            "line": 521,
            "code": ".insert(alerta)",
            "current": true
          },
          {
            "line": 522,
            "code": ".select()",
            "current": false
          },
          {
            "line": 523,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/riskCalculationEngine.js",
        "line": 522,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 520,
            "code": ".from('actividades_dpo')",
            "current": false
          },
          {
            "line": 521,
            "code": ".insert(alerta)",
            "current": false
          },
          {
            "line": 522,
            "code": ".select()",
            "current": true
          },
          {
            "line": 523,
            "code": ".single();",
            "current": false
          },
          {
            "line": 524,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 7,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 5,
            "code": "*/",
            "current": false
          },
          {
            "line": 6,
            "code": "",
            "current": false
          },
          {
            "line": 7,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 8,
            "code": "",
            "current": false
          },
          {
            "line": 9,
            "code": "class SpecificCasesEngine {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 314,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 312,
            "code": "try {",
            "current": false
          },
          {
            "line": 313,
            "code": "const { data: org } = await supabase",
            "current": false
          },
          {
            "line": 314,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 315,
            "code": ".select('industry, company_name')",
            "current": false
          },
          {
            "line": 316,
            "code": ".eq('id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 315,
        "code": ".select('industry, company_name')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 313,
            "code": "const { data: org } = await supabase",
            "current": false
          },
          {
            "line": 314,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 315,
            "code": ".select('industry, company_name')",
            "current": true
          },
          {
            "line": 316,
            "code": ".eq('id', tenantId)",
            "current": false
          },
          {
            "line": 317,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 337,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 335,
            "code": "case 'requiere_dpia':",
            "current": false
          },
          {
            "line": 336,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 337,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 338,
            "code": ".update({ [efecto]: valor })",
            "current": false
          },
          {
            "line": 339,
            "code": ".eq('id', ratId);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 338,
        "code": ".update({ [efecto]: valor })",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 336,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 337,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 338,
            "code": ".update({ [efecto]: valor })",
            "current": true
          },
          {
            "line": 339,
            "code": ".eq('id', ratId);",
            "current": false
          },
          {
            "line": 340,
            "code": "break;",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 344,
        "code": "await supabase.from('actividades_dpo').insert({",
        "type": "INSERT",
        "table": "actividades_dpo",
        "operation": "CREATE",
        "context": [
          {
            "line": 342,
            "code": "case 'consulta_previa_agencia':",
            "current": false
          },
          {
            "line": 343,
            "code": "if (valor) {",
            "current": false
          },
          {
            "line": 344,
            "code": "await supabase.from('actividades_dpo').insert({",
            "current": true
          },
          {
            "line": 345,
            "code": "rat_id: ratId,",
            "current": false
          },
          {
            "line": 346,
            "code": "tenant_id: tenantId,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 393,
        "code": ".from('actividades_dpo')",
        "type": "OTHER",
        "table": "actividades_dpo",
        "operation": "OTHER",
        "context": [
          {
            "line": 391,
            "code": "try {",
            "current": false
          },
          {
            "line": 392,
            "code": "const { data } = await supabase",
            "current": false
          },
          {
            "line": 393,
            "code": ".from('actividades_dpo')",
            "current": true
          },
          {
            "line": 394,
            "code": ".insert({",
            "current": false
          },
          {
            "line": 395,
            "code": "rat_id: ratId,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 394,
        "code": ".insert({",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 392,
            "code": "const { data } = await supabase",
            "current": false
          },
          {
            "line": 393,
            "code": ".from('actividades_dpo')",
            "current": false
          },
          {
            "line": 394,
            "code": ".insert({",
            "current": true
          },
          {
            "line": 395,
            "code": "rat_id: ratId,",
            "current": false
          },
          {
            "line": 396,
            "code": "tenant_id: tenantId,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 406,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 404,
            "code": "}",
            "current": false
          },
          {
            "line": 405,
            "code": "})",
            "current": false
          },
          {
            "line": 406,
            "code": ".select()",
            "current": true
          },
          {
            "line": 407,
            "code": ".single();",
            "current": false
          },
          {
            "line": 408,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 422,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 420,
            "code": "try {",
            "current": false
          },
          {
            "line": 421,
            "code": "const { data: org } = await supabase",
            "current": false
          },
          {
            "line": 422,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 423,
            "code": ".select('metadata')",
            "current": false
          },
          {
            "line": 424,
            "code": ".eq('id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 423,
        "code": ".select('metadata')",
        "type": "SELECT",
        "table": "metadata",
        "operation": "READ",
        "context": [
          {
            "line": 421,
            "code": "const { data: org } = await supabase",
            "current": false
          },
          {
            "line": 422,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 423,
            "code": ".select('metadata')",
            "current": true
          },
          {
            "line": 424,
            "code": ".eq('id', tenantId)",
            "current": false
          },
          {
            "line": 425,
            "code": ".single();",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "metadata",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":\"Perhaps you meant the table 'public.session_data'\",\"message\":\"Could not find the table 'public.metadata' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:08.202Z"
        }
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 437,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 435,
            "code": "try {",
            "current": false
          },
          {
            "line": 436,
            "code": "const { data: org } = await supabase",
            "current": false
          },
          {
            "line": 437,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 438,
            "code": ".select('industry, metadata')",
            "current": false
          },
          {
            "line": 439,
            "code": ".eq('id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 438,
        "code": ".select('industry, metadata')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 436,
            "code": "const { data: org } = await supabase",
            "current": false
          },
          {
            "line": 437,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 438,
            "code": ".select('industry, metadata')",
            "current": true
          },
          {
            "line": 439,
            "code": ".eq('id', tenantId)",
            "current": false
          },
          {
            "line": 440,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 452,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 450,
            "code": "try {",
            "current": false
          },
          {
            "line": 451,
            "code": "const { data: org } = await supabase",
            "current": false
          },
          {
            "line": 452,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 453,
            "code": ".select('metadata')",
            "current": false
          },
          {
            "line": 454,
            "code": ".eq('id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 453,
        "code": ".select('metadata')",
        "type": "SELECT",
        "table": "metadata",
        "operation": "READ",
        "context": [
          {
            "line": 451,
            "code": "const { data: org } = await supabase",
            "current": false
          },
          {
            "line": 452,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 453,
            "code": ".select('metadata')",
            "current": true
          },
          {
            "line": 454,
            "code": ".eq('id', tenantId)",
            "current": false
          },
          {
            "line": 455,
            "code": ".single();",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "metadata",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":\"Perhaps you meant the table 'public.session_data'\",\"message\":\"Could not find the table 'public.metadata' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:08.202Z"
        }
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 476,
        "code": "await supabase.from('actividades_dpo').insert({",
        "type": "INSERT",
        "table": "actividades_dpo",
        "operation": "CREATE",
        "context": [
          {
            "line": 474,
            "code": "const fechaAuditoria = new Date(Date.now() + (diasIntervalo * i) * 24 * 60 * 60 * 1000);",
            "current": false
          },
          {
            "line": 475,
            "code": "",
            "current": false
          },
          {
            "line": 476,
            "code": "await supabase.from('actividades_dpo').insert({",
            "current": true
          },
          {
            "line": 477,
            "code": "rat_id: ratId,",
            "current": false
          },
          {
            "line": 478,
            "code": "tenant_id: tenantId,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 498,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 496,
            "code": "try {",
            "current": false
          },
          {
            "line": 497,
            "code": "const { data: contextFinan, error } = await supabase",
            "current": false
          },
          {
            "line": 498,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 499,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 500,
            "code": ".eq('tenant_id', String(tenantId))",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 499,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 497,
            "code": "const { data: contextFinan, error } = await supabase",
            "current": false
          },
          {
            "line": 498,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 499,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 500,
            "code": ".eq('tenant_id', String(tenantId))",
            "current": false
          },
          {
            "line": 501,
            "code": ".contains('categorias_datos', { datosEconomicos: true })",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 526,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 524,
            "code": "try {",
            "current": false
          },
          {
            "line": 525,
            "code": "const { data: contextAcad, error } = await supabase",
            "current": false
          },
          {
            "line": 526,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 527,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 528,
            "code": ".eq('tenant_id', String(tenantId))",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/services/specificCasesEngine.js",
        "line": 527,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 525,
            "code": "const { data: contextAcad, error } = await supabase",
            "current": false
          },
          {
            "line": 526,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 527,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 528,
            "code": ".eq('tenant_id', String(tenantId))",
            "current": false
          },
          {
            "line": 529,
            "code": ".ilike('nombre_actividad', '%investigacion%')",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/testBalancingEngine.js",
        "line": 7,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 5,
            "code": "*/",
            "current": false
          },
          {
            "line": 6,
            "code": "",
            "current": false
          },
          {
            "line": 7,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 8,
            "code": "",
            "current": false
          },
          {
            "line": 9,
            "code": "class TestBalancingEngine {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/testBalancingEngine.js",
        "line": 307,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 305,
            "code": "// SIEMPRE: requiere_eipd = true para inter√©s leg√≠timo",
            "current": false
          },
          {
            "line": 306,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 307,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 308,
            "code": ".update({",
            "current": false
          },
          {
            "line": 309,
            "code": "requiere_eipd: true,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/services/testBalancingEngine.js",
        "line": 308,
        "code": ".update({",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 306,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 307,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 308,
            "code": ".update({",
            "current": true
          },
          {
            "line": 309,
            "code": "requiere_eipd: true,",
            "current": false
          },
          {
            "line": 310,
            "code": "status: resultadoBalanza.permitir_continuar ? 'BALANCING_APROBADO' : 'BALANCING_RECHAZADO'",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/testBalancingEngine.js",
        "line": 333,
        "code": ".from('actividades_dpo')",
        "type": "OTHER",
        "table": "actividades_dpo",
        "operation": "OTHER",
        "context": [
          {
            "line": 331,
            "code": "",
            "current": false
          },
          {
            "line": 332,
            "code": "const { data: actividadOposicion } = await supabase",
            "current": false
          },
          {
            "line": 333,
            "code": ".from('actividades_dpo')",
            "current": true
          },
          {
            "line": 334,
            "code": ".insert(derechoOposicion)",
            "current": false
          },
          {
            "line": 335,
            "code": ".select()",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/services/testBalancingEngine.js",
        "line": 334,
        "code": ".insert(derechoOposicion)",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 332,
            "code": "const { data: actividadOposicion } = await supabase",
            "current": false
          },
          {
            "line": 333,
            "code": ".from('actividades_dpo')",
            "current": false
          },
          {
            "line": 334,
            "code": ".insert(derechoOposicion)",
            "current": true
          },
          {
            "line": 335,
            "code": ".select()",
            "current": false
          },
          {
            "line": 336,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/testBalancingEngine.js",
        "line": 335,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 333,
            "code": ".from('actividades_dpo')",
            "current": false
          },
          {
            "line": 334,
            "code": ".insert(derechoOposicion)",
            "current": false
          },
          {
            "line": 335,
            "code": ".select()",
            "current": true
          },
          {
            "line": 336,
            "code": ".single();",
            "current": false
          },
          {
            "line": 337,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/services/testBalancingEngine.js",
        "line": 357,
        "code": "await supabase.from('actividades_dpo').insert(errorCritico);",
        "type": "INSERT",
        "table": "actividades_dpo",
        "operation": "CREATE",
        "context": [
          {
            "line": 355,
            "code": "};",
            "current": false
          },
          {
            "line": 356,
            "code": "",
            "current": false
          },
          {
            "line": 357,
            "code": "await supabase.from('actividades_dpo').insert(errorCritico);",
            "current": true
          },
          {
            "line": 358,
            "code": "efectos.push('ERROR: Balancing desfavorable - Cambio base legal requerido');",
            "current": false
          },
          {
            "line": 359,
            "code": "}",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/services/testBalancingEngine.js",
        "line": 377,
        "code": "await supabase.from('actividades_dpo').insert(medidasAdicionales);",
        "type": "INSERT",
        "table": "actividades_dpo",
        "operation": "CREATE",
        "context": [
          {
            "line": 375,
            "code": "};",
            "current": false
          },
          {
            "line": 376,
            "code": "",
            "current": false
          },
          {
            "line": 377,
            "code": "await supabase.from('actividades_dpo').insert(medidasAdicionales);",
            "current": true
          },
          {
            "line": 378,
            "code": "efectos.push('Medidas adicionales programadas');",
            "current": false
          },
          {
            "line": 379,
            "code": "}",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/services/testBalancingEngine.js",
        "line": 394,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 392,
            "code": "// Buscar si hay relaci√≥n comercial previa",
            "current": false
          },
          {
            "line": 393,
            "code": "const { data: relacionExistente } = await supabase",
            "current": false
          },
          {
            "line": 394,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 395,
            "code": ".select('id')",
            "current": false
          },
          {
            "line": 396,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/services/testBalancingEngine.js",
        "line": 395,
        "code": ".select('id')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 393,
            "code": "const { data: relacionExistente } = await supabase",
            "current": false
          },
          {
            "line": 394,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 395,
            "code": ".select('id')",
            "current": true
          },
          {
            "line": 396,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 397,
            "code": ".eq('responsable_proceso', ratData.responsable_proceso)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 1,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 1,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 2,
            "code": "",
            "current": false
          },
          {
            "line": 3,
            "code": "class AISupervisor {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 13,
        "code": ".from('system_config')",
        "type": "OTHER",
        "table": "system_config",
        "operation": "OTHER",
        "context": [
          {
            "line": 11,
            "code": "try {",
            "current": false
          },
          {
            "line": 12,
            "code": "const { data: config, error } = await supabase",
            "current": false
          },
          {
            "line": 13,
            "code": ".from('system_config')",
            "current": true
          },
          {
            "line": 14,
            "code": ".select('value')",
            "current": false
          },
          {
            "line": 15,
            "code": ".eq('key', 'ai_supervisor_enabled')",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "system_config",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007010294_g1swq59mp\\\"\"}",
          "timestamp": "2025-09-04T17:30:10.488Z"
        }
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 14,
        "code": ".select('value')",
        "type": "SELECT",
        "table": "value",
        "operation": "READ",
        "context": [
          {
            "line": 12,
            "code": "const { data: config, error } = await supabase",
            "current": false
          },
          {
            "line": 13,
            "code": ".from('system_config')",
            "current": false
          },
          {
            "line": 14,
            "code": ".select('value')",
            "current": true
          },
          {
            "line": 15,
            "code": ".eq('key', 'ai_supervisor_enabled')",
            "current": false
          },
          {
            "line": 16,
            "code": ".single();",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "value",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":\"Perhaps you meant the table 'public.legal_rules'\",\"message\":\"Could not find the table 'public.value' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:10.897Z"
        }
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 215,
        "code": ".from('rats')",
        "type": "OTHER",
        "table": "rats",
        "operation": "OTHER",
        "context": [
          {
            "line": 213,
            "code": "try {",
            "current": false
          },
          {
            "line": 214,
            "code": "const { data: existingRATs, error } = await supabase",
            "current": false
          },
          {
            "line": 215,
            "code": ".from('rats')",
            "current": true
          },
          {
            "line": 216,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 217,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "rats",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007011096_g78awpgwo\\\"\"}",
          "timestamp": "2025-09-04T17:30:11.298Z"
        }
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 216,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 214,
            "code": "const { data: existingRATs, error } = await supabase",
            "current": false
          },
          {
            "line": 215,
            "code": ".from('rats')",
            "current": false
          },
          {
            "line": 216,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 217,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 218,
            "code": ".neq('id', ratData.id || 0);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 405,
        "code": ".from('eipd_documents')",
        "type": "OTHER",
        "table": "eipd_documents",
        "operation": "OTHER",
        "context": [
          {
            "line": 403,
            "code": "try {",
            "current": false
          },
          {
            "line": 404,
            "code": "const { data: existingEIPDs, error } = await supabase",
            "current": false
          },
          {
            "line": 405,
            "code": ".from('eipd_documents')",
            "current": true
          },
          {
            "line": 406,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 407,
            "code": ".eq('tenant_id', ratData.tenant_id)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "eipd_documents",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007011499_5zctbylkf\\\"\"}",
          "timestamp": "2025-09-04T17:30:11.677Z"
        }
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 406,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 404,
            "code": "const { data: existingEIPDs, error } = await supabase",
            "current": false
          },
          {
            "line": 405,
            "code": ".from('eipd_documents')",
            "current": false
          },
          {
            "line": 406,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 407,
            "code": ".eq('tenant_id', ratData.tenant_id)",
            "current": false
          },
          {
            "line": 408,
            "code": ".eq('status', 'approved');",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 452,
        "code": ".from('dpa_documents')",
        "type": "OTHER",
        "table": "dpa_documents",
        "operation": "OTHER",
        "context": [
          {
            "line": 450,
            "code": "",
            "current": false
          },
          {
            "line": 451,
            "code": "const { data: existingDPAs, error } = await supabase",
            "current": false
          },
          {
            "line": 452,
            "code": ".from('dpa_documents')",
            "current": true
          },
          {
            "line": 453,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 454,
            "code": ".eq('tenant_id', ratData.tenant_id)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "dpa_documents",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007011878_4zn7hjy8z\\\"\"}",
          "timestamp": "2025-09-04T17:30:12.078Z"
        }
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 453,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 451,
            "code": "const { data: existingDPAs, error } = await supabase",
            "current": false
          },
          {
            "line": 452,
            "code": ".from('dpa_documents')",
            "current": false
          },
          {
            "line": 453,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 454,
            "code": ".eq('tenant_id', ratData.tenant_id)",
            "current": false
          },
          {
            "line": 455,
            "code": ".eq('status', 'active')",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 527,
        "code": ".from('rat_document_assignments')",
        "type": "OTHER",
        "table": "rat_document_assignments",
        "operation": "OTHER",
        "context": [
          {
            "line": 525,
            "code": "try {",
            "current": false
          },
          {
            "line": 526,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 527,
            "code": ".from('rat_document_assignments')",
            "current": true
          },
          {
            "line": 528,
            "code": ".insert({",
            "current": false
          },
          {
            "line": 529,
            "code": "rat_id: ratId,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "rat_document_assignments",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007012279_h4wq8oncz\\\"\"}",
          "timestamp": "2025-09-04T17:30:12.473Z"
        }
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 528,
        "code": ".insert({",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 526,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 527,
            "code": ".from('rat_document_assignments')",
            "current": false
          },
          {
            "line": 528,
            "code": ".insert({",
            "current": true
          },
          {
            "line": 529,
            "code": "rat_id: ratId,",
            "current": false
          },
          {
            "line": 530,
            "code": "document_type: task.type,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 548,
        "code": ".from('actividades_dpo')",
        "type": "OTHER",
        "table": "actividades_dpo",
        "operation": "OTHER",
        "context": [
          {
            "line": 546,
            "code": "try {",
            "current": false
          },
          {
            "line": 547,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 548,
            "code": ".from('actividades_dpo')",
            "current": true
          },
          {
            "line": 549,
            "code": ".insert({",
            "current": false
          },
          {
            "line": 550,
            "code": "rat_id: ratId,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 549,
        "code": ".insert({",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 547,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 548,
            "code": ".from('actividades_dpo')",
            "current": false
          },
          {
            "line": 549,
            "code": ".insert({",
            "current": true
          },
          {
            "line": 550,
            "code": "rat_id: ratId,",
            "current": false
          },
          {
            "line": 551,
            "code": "tenant_id: tenantId,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 572,
        "code": ".from('ai_supervision_log')",
        "type": "OTHER",
        "table": "ai_supervision_log",
        "operation": "OTHER",
        "context": [
          {
            "line": 570,
            "code": "try {",
            "current": false
          },
          {
            "line": 571,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 572,
            "code": ".from('ai_supervision_log')",
            "current": true
          },
          {
            "line": 573,
            "code": ".insert({",
            "current": false
          },
          {
            "line": 574,
            "code": "operation_type: supervision.operation,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "ai_supervision_log",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007012673_qxt1dfbvw\\\"\"}",
          "timestamp": "2025-09-04T17:30:12.857Z"
        }
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 573,
        "code": ".insert({",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 571,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 572,
            "code": ".from('ai_supervision_log')",
            "current": false
          },
          {
            "line": 573,
            "code": ".insert({",
            "current": true
          },
          {
            "line": 574,
            "code": "operation_type: supervision.operation,",
            "current": false
          },
          {
            "line": 575,
            "code": "user_id: userId,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 591,
        "code": ".from('user_notifications')",
        "type": "OTHER",
        "table": "user_notifications",
        "operation": "OTHER",
        "context": [
          {
            "line": 589,
            "code": "try {",
            "current": false
          },
          {
            "line": 590,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 591,
            "code": ".from('user_notifications')",
            "current": true
          },
          {
            "line": 592,
            "code": ".insert({",
            "current": false
          },
          {
            "line": 593,
            "code": "user_id: userId,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "user_notifications",
          "error": "INSERT failed: 400 - {\"code\":\"PGRST204\",\"details\":null,\"hint\":null,\"message\":\"Could not find the 'empresa_id' column of 'user_notifications' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:13.231Z"
        }
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 592,
        "code": ".insert({",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 590,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 591,
            "code": ".from('user_notifications')",
            "current": false
          },
          {
            "line": 592,
            "code": ".insert({",
            "current": true
          },
          {
            "line": 593,
            "code": "user_id: userId,",
            "current": false
          },
          {
            "line": 594,
            "code": "notification_type: 'ai_intervention',",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 623,
        "code": ".from('rats')",
        "type": "OTHER",
        "table": "rats",
        "operation": "OTHER",
        "context": [
          {
            "line": 621,
            "code": "try {",
            "current": false
          },
          {
            "line": 622,
            "code": "const { data: recentRATs, error } = await supabase",
            "current": false
          },
          {
            "line": 623,
            "code": ".from('rats')",
            "current": true
          },
          {
            "line": 624,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 625,
            "code": ".gte('created_at', new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString())",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "rats",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007011096_g78awpgwo\\\"\"}",
          "timestamp": "2025-09-04T17:30:11.298Z"
        }
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 624,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 622,
            "code": "const { data: recentRATs, error } = await supabase",
            "current": false
          },
          {
            "line": 623,
            "code": ".from('rats')",
            "current": false
          },
          {
            "line": 624,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 625,
            "code": ".gte('created_at', new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString())",
            "current": false
          },
          {
            "line": 626,
            "code": ".eq('ai_supervised', false);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 634,
        "code": ".from('rats')",
        "type": "OTHER",
        "table": "rats",
        "operation": "OTHER",
        "context": [
          {
            "line": 632,
            "code": "",
            "current": false
          },
          {
            "line": 633,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 634,
            "code": ".from('rats')",
            "current": true
          },
          {
            "line": 635,
            "code": ".update({",
            "current": false
          },
          {
            "line": 636,
            "code": "ai_supervised: true,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "rats",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007011096_g78awpgwo\\\"\"}",
          "timestamp": "2025-09-04T17:30:11.298Z"
        }
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 635,
        "code": ".update({",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 633,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 634,
            "code": ".from('rats')",
            "current": false
          },
          {
            "line": 635,
            "code": ".update({",
            "current": true
          },
          {
            "line": 636,
            "code": "ai_supervised: true,",
            "current": false
          },
          {
            "line": 637,
            "code": "ai_supervision_score: supervision.qualityScore",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 652,
        "code": ".from('ai_supervision_log')",
        "type": "OTHER",
        "table": "ai_supervision_log",
        "operation": "OTHER",
        "context": [
          {
            "line": 650,
            "code": "try {",
            "current": false
          },
          {
            "line": 651,
            "code": "const { data: stats, error } = await supabase",
            "current": false
          },
          {
            "line": 652,
            "code": ".from('ai_supervision_log')",
            "current": true
          },
          {
            "line": 653,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 654,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "ai_supervision_log",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007012673_qxt1dfbvw\\\"\"}",
          "timestamp": "2025-09-04T17:30:12.857Z"
        }
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 653,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 651,
            "code": "const { data: stats, error } = await supabase",
            "current": false
          },
          {
            "line": 652,
            "code": ".from('ai_supervision_log')",
            "current": false
          },
          {
            "line": 653,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 654,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 655,
            "code": ".gte('timestamp', new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString());",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 707,
        "code": ".from('system_config')",
        "type": "OTHER",
        "table": "system_config",
        "operation": "OTHER",
        "context": [
          {
            "line": 705,
            "code": "try {",
            "current": false
          },
          {
            "line": 706,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 707,
            "code": ".from('system_config')",
            "current": true
          },
          {
            "line": 708,
            "code": ".upsert({",
            "current": false
          },
          {
            "line": 709,
            "code": "key: 'ai_supervisor_enabled',",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "system_config",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007010294_g1swq59mp\\\"\"}",
          "timestamp": "2025-09-04T17:30:10.488Z"
        }
      },
      {
        "file": "frontend/src/utils/aiSupervisor.js",
        "line": 708,
        "code": ".upsert({",
        "type": "UPSERT",
        "table": "UNKNOWN",
        "operation": "UPSERT",
        "context": [
          {
            "line": 706,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 707,
            "code": ".from('system_config')",
            "current": false
          },
          {
            "line": 708,
            "code": ".upsert({",
            "current": true
          },
          {
            "line": 709,
            "code": "key: 'ai_supervisor_enabled',",
            "current": false
          },
          {
            "line": 710,
            "code": "value: 'true',",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 8,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 6,
            "code": "*/",
            "current": false
          },
          {
            "line": 7,
            "code": "",
            "current": false
          },
          {
            "line": 8,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 9,
            "code": "",
            "current": false
          },
          {
            "line": 10,
            "code": "class CompleteSystemTester {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 74,
        "code": ".from(table)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 72,
            "code": "const startTime = performance.now();",
            "current": false
          },
          {
            "line": 73,
            "code": "const { data, error, count } = await supabase",
            "current": false
          },
          {
            "line": 74,
            "code": ".from(table)",
            "current": true
          },
          {
            "line": 75,
            "code": ".select('*', { count: 'exact', head: true });",
            "current": false
          },
          {
            "line": 76,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 75,
        "code": ".select('*', { count: 'exact', head: true });",
        "type": "SELECT",
        "table": "exact",
        "operation": "READ",
        "context": [
          {
            "line": 73,
            "code": "const { data, error, count } = await supabase",
            "current": false
          },
          {
            "line": 74,
            "code": ".from(table)",
            "current": false
          },
          {
            "line": 75,
            "code": ".select('*', { count: 'exact', head: true });",
            "current": true
          },
          {
            "line": 76,
            "code": "",
            "current": false
          },
          {
            "line": 77,
            "code": "const responseTime = Math.round(performance.now() - startTime);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "exact",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":null,\"message\":\"Could not find the table 'public.exact' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:08.587Z"
        }
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 104,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 102,
            "code": "",
            "current": false
          },
          {
            "line": 103,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 104,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 105,
            "code": ".insert(testOrg)",
            "current": false
          },
          {
            "line": 106,
            "code": ".select('id')",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 105,
        "code": ".insert(testOrg)",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 103,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 104,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 105,
            "code": ".insert(testOrg)",
            "current": true
          },
          {
            "line": 106,
            "code": ".select('id')",
            "current": false
          },
          {
            "line": 107,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 106,
        "code": ".select('id')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 104,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 105,
            "code": ".insert(testOrg)",
            "current": false
          },
          {
            "line": 106,
            "code": ".select('id')",
            "current": true
          },
          {
            "line": 107,
            "code": ".single();",
            "current": false
          },
          {
            "line": 108,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 119,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 117,
            "code": "// Test UPDATE",
            "current": false
          },
          {
            "line": 118,
            "code": "const { error: updateError } = await supabase",
            "current": false
          },
          {
            "line": 119,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 120,
            "code": ".update({ razon_social: 'Updated Test Complete' })",
            "current": false
          },
          {
            "line": 121,
            "code": ".eq('id', testId);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 120,
        "code": ".update({ razon_social: 'Updated Test Complete' })",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 118,
            "code": "const { error: updateError } = await supabase",
            "current": false
          },
          {
            "line": 119,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 120,
            "code": ".update({ razon_social: 'Updated Test Complete' })",
            "current": true
          },
          {
            "line": 121,
            "code": ".eq('id', testId);",
            "current": false
          },
          {
            "line": 122,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 131,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 129,
            "code": "// Test SELECT espec√≠fico",
            "current": false
          },
          {
            "line": 130,
            "code": "const { data: selectData, error: selectError } = await supabase",
            "current": false
          },
          {
            "line": 131,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 132,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 133,
            "code": ".eq('id', testId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 132,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 130,
            "code": "const { data: selectData, error: selectError } = await supabase",
            "current": false
          },
          {
            "line": 131,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 132,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 133,
            "code": ".eq('id', testId)",
            "current": false
          },
          {
            "line": 134,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 144,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 142,
            "code": "// Test DELETE",
            "current": false
          },
          {
            "line": 143,
            "code": "const { error: deleteError } = await supabase",
            "current": false
          },
          {
            "line": 144,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 145,
            "code": ".delete()",
            "current": false
          },
          {
            "line": 146,
            "code": ".eq('id', testId);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 145,
        "code": ".delete()",
        "type": "DELETE",
        "table": "UNKNOWN",
        "operation": "DELETE",
        "context": [
          {
            "line": 143,
            "code": "const { error: deleteError } = await supabase",
            "current": false
          },
          {
            "line": 144,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 145,
            "code": ".delete()",
            "current": true
          },
          {
            "line": 146,
            "code": ".eq('id', testId);",
            "current": false
          },
          {
            "line": 147,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 305,
        "code": "const linkExists = Array.from(navLinks).some(link =>",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 303,
            "code": "",
            "current": false
          },
          {
            "line": 304,
            "code": "for (const expectedRoute of expectedRoutes) {",
            "current": false
          },
          {
            "line": 305,
            "code": "const linkExists = Array.from(navLinks).some(link =>",
            "current": true
          },
          {
            "line": 306,
            "code": "link.getAttribute('href')?.includes(expectedRoute)",
            "current": false
          },
          {
            "line": 307,
            "code": ");",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 347,
        "code": ".from(tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 345,
            "code": "// Test READ (List)",
            "current": false
          },
          {
            "line": 346,
            "code": "const { data: listData, error: listError } = await supabase",
            "current": false
          },
          {
            "line": 347,
            "code": ".from(tableName)",
            "current": true
          },
          {
            "line": 348,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 349,
            "code": ".limit(5);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 348,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 346,
            "code": "const { data: listData, error: listError } = await supabase",
            "current": false
          },
          {
            "line": 347,
            "code": ".from(tableName)",
            "current": false
          },
          {
            "line": 348,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 349,
            "code": ".limit(5);",
            "current": false
          },
          {
            "line": 350,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 362,
        "code": ".from(tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 360,
            "code": "const firstId = listData[0].id;",
            "current": false
          },
          {
            "line": 361,
            "code": "const { data: singleData, error: singleError } = await supabase",
            "current": false
          },
          {
            "line": 362,
            "code": ".from(tableName)",
            "current": true
          },
          {
            "line": 363,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 364,
            "code": ".eq('id', firstId)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 363,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 361,
            "code": "const { data: singleData, error: singleError } = await supabase",
            "current": false
          },
          {
            "line": 362,
            "code": ".from(tableName)",
            "current": false
          },
          {
            "line": 363,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 364,
            "code": ".eq('id', firstId)",
            "current": false
          },
          {
            "line": 365,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 378,
        "code": ".from(tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 376,
            "code": "if (testData) {",
            "current": false
          },
          {
            "line": 377,
            "code": "const { data: createData, error: createError } = await supabase",
            "current": false
          },
          {
            "line": 378,
            "code": ".from(tableName)",
            "current": true
          },
          {
            "line": 379,
            "code": ".insert(testData)",
            "current": false
          },
          {
            "line": 380,
            "code": ".select('id')",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 379,
        "code": ".insert(testData)",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 377,
            "code": "const { data: createData, error: createError } = await supabase",
            "current": false
          },
          {
            "line": 378,
            "code": ".from(tableName)",
            "current": false
          },
          {
            "line": 379,
            "code": ".insert(testData)",
            "current": true
          },
          {
            "line": 380,
            "code": ".select('id')",
            "current": false
          },
          {
            "line": 381,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 380,
        "code": ".select('id')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 378,
            "code": ".from(tableName)",
            "current": false
          },
          {
            "line": 379,
            "code": ".insert(testData)",
            "current": false
          },
          {
            "line": 380,
            "code": ".select('id')",
            "current": true
          },
          {
            "line": 381,
            "code": ".single();",
            "current": false
          },
          {
            "line": 382,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 391,
        "code": ".from(tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 389,
            "code": "const updateData = this.getUpdateDataForTable(tableName);",
            "current": false
          },
          {
            "line": 390,
            "code": "const { error: updateError } = await supabase",
            "current": false
          },
          {
            "line": 391,
            "code": ".from(tableName)",
            "current": true
          },
          {
            "line": 392,
            "code": ".update(updateData)",
            "current": false
          },
          {
            "line": 393,
            "code": ".eq('id', createData.id);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 392,
        "code": ".update(updateData)",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 390,
            "code": "const { error: updateError } = await supabase",
            "current": false
          },
          {
            "line": 391,
            "code": ".from(tableName)",
            "current": false
          },
          {
            "line": 392,
            "code": ".update(updateData)",
            "current": true
          },
          {
            "line": 393,
            "code": ".eq('id', createData.id);",
            "current": false
          },
          {
            "line": 394,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 403,
        "code": ".from(tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 401,
            "code": "// Test DELETE del registro de prueba",
            "current": false
          },
          {
            "line": 402,
            "code": "const { error: deleteError } = await supabase",
            "current": false
          },
          {
            "line": 403,
            "code": ".from(tableName)",
            "current": true
          },
          {
            "line": 404,
            "code": ".delete()",
            "current": false
          },
          {
            "line": 405,
            "code": ".eq('id', createData.id);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 404,
        "code": ".delete()",
        "type": "DELETE",
        "table": "UNKNOWN",
        "operation": "DELETE",
        "context": [
          {
            "line": 402,
            "code": "const { error: deleteError } = await supabase",
            "current": false
          },
          {
            "line": 403,
            "code": ".from(tableName)",
            "current": false
          },
          {
            "line": 404,
            "code": ".delete()",
            "current": true
          },
          {
            "line": 405,
            "code": ".eq('id', createData.id);",
            "current": false
          },
          {
            "line": 406,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 465,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 463,
            "code": "// Obtener organizaci√≥n existente",
            "current": false
          },
          {
            "line": 464,
            "code": "const { data: orgs } = await supabase",
            "current": false
          },
          {
            "line": 465,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 466,
            "code": ".select('id')",
            "current": false
          },
          {
            "line": 467,
            "code": ".limit(1);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 466,
        "code": ".select('id')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 464,
            "code": "const { data: orgs } = await supabase",
            "current": false
          },
          {
            "line": 465,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 466,
            "code": ".select('id')",
            "current": true
          },
          {
            "line": 467,
            "code": ".limit(1);",
            "current": false
          },
          {
            "line": 468,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 476,
        "code": ".from('rats')",
        "type": "OTHER",
        "table": "rats",
        "operation": "OTHER",
        "context": [
          {
            "line": 474,
            "code": "// Buscar RATs de esa organizaci√≥n",
            "current": false
          },
          {
            "line": 475,
            "code": "const { data: rats, error } = await supabase",
            "current": false
          },
          {
            "line": 476,
            "code": ".from('rats')",
            "current": true
          },
          {
            "line": 477,
            "code": ".select('id, organizacion_id')",
            "current": false
          },
          {
            "line": 478,
            "code": ".eq('organizacion_id', orgs[0].id);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "rats",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007011096_g78awpgwo\\\"\"}",
          "timestamp": "2025-09-04T17:30:11.298Z"
        }
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 477,
        "code": ".select('id, organizacion_id')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 475,
            "code": "const { data: rats, error } = await supabase",
            "current": false
          },
          {
            "line": 476,
            "code": ".from('rats')",
            "current": false
          },
          {
            "line": 477,
            "code": ".select('id, organizacion_id')",
            "current": true
          },
          {
            "line": 478,
            "code": ".eq('organizacion_id', orgs[0].id);",
            "current": false
          },
          {
            "line": 479,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 498,
        "code": ".from('dpo_notifications')",
        "type": "OTHER",
        "table": "dpo_notifications",
        "operation": "OTHER",
        "context": [
          {
            "line": 496,
            "code": "try {",
            "current": false
          },
          {
            "line": 497,
            "code": "const { data: notifications, error } = await supabase",
            "current": false
          },
          {
            "line": 498,
            "code": ".from('dpo_notifications')",
            "current": true
          },
          {
            "line": 499,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 500,
            "code": ".limit(5);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "dpo_notifications",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007001296_x2bjv8rug\\\"\"}",
          "timestamp": "2025-09-04T17:30:01.480Z"
        }
      },
      {
        "file": "frontend/src/utils/completeSystemTester.js",
        "line": 499,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 497,
            "code": "const { data: notifications, error } = await supabase",
            "current": false
          },
          {
            "line": 498,
            "code": ".from('dpo_notifications')",
            "current": false
          },
          {
            "line": 499,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 500,
            "code": ".limit(5);",
            "current": false
          },
          {
            "line": 501,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dataIntegrityValidator.js",
        "line": 291,
        "code": "const { supabase } = await import('../config/supabaseClient');",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 289,
            "code": "try {",
            "current": false
          },
          {
            "line": 290,
            "code": "// Verificar que la referencia existe",
            "current": false
          },
          {
            "line": 291,
            "code": "const { supabase } = await import('../config/supabaseClient');",
            "current": true
          },
          {
            "line": 292,
            "code": "const { count, error } = await supabase",
            "current": false
          },
          {
            "line": 293,
            "code": ".from(refRule.references)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dataIntegrityValidator.js",
        "line": 293,
        "code": ".from(refRule.references)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 291,
            "code": "const { supabase } = await import('../config/supabaseClient');",
            "current": false
          },
          {
            "line": 292,
            "code": "const { count, error } = await supabase",
            "current": false
          },
          {
            "line": 293,
            "code": ".from(refRule.references)",
            "current": true
          },
          {
            "line": 294,
            "code": ".select(refRule.field, { count: 'exact', head: true })",
            "current": false
          },
          {
            "line": 295,
            "code": ".eq(refRule.field, value);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dataIntegrityValidator.js",
        "line": 294,
        "code": ".select(refRule.field, { count: 'exact', head: true })",
        "type": "SELECT",
        "table": "exact",
        "operation": "READ",
        "context": [
          {
            "line": 292,
            "code": "const { count, error } = await supabase",
            "current": false
          },
          {
            "line": 293,
            "code": ".from(refRule.references)",
            "current": false
          },
          {
            "line": 294,
            "code": ".select(refRule.field, { count: 'exact', head: true })",
            "current": true
          },
          {
            "line": 295,
            "code": ".eq(refRule.field, value);",
            "current": false
          },
          {
            "line": 296,
            "code": "",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "exact",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":null,\"message\":\"Could not find the table 'public.exact' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:08.587Z"
        }
      },
      {
        "file": "frontend/src/utils/dataIntegrityValidator.js",
        "line": 369,
        "code": "const { supabase } = await import('../config/supabaseClient');",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 367,
            "code": "",
            "current": false
          },
          {
            "line": 368,
            "code": "try {",
            "current": false
          },
          {
            "line": 369,
            "code": "const { supabase } = await import('../config/supabaseClient');",
            "current": true
          },
          {
            "line": 370,
            "code": "const { count } = await supabase",
            "current": false
          },
          {
            "line": 371,
            "code": ".from('organizaciones')",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dataIntegrityValidator.js",
        "line": 371,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 369,
            "code": "const { supabase } = await import('../config/supabaseClient');",
            "current": false
          },
          {
            "line": 370,
            "code": "const { count } = await supabase",
            "current": false
          },
          {
            "line": 371,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 372,
            "code": ".select('rut', { count: 'exact', head: true })",
            "current": false
          },
          {
            "line": 373,
            "code": ".eq('rut', record.rut);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/dataIntegrityValidator.js",
        "line": 372,
        "code": ".select('rut', { count: 'exact', head: true })",
        "type": "SELECT",
        "table": "rut",
        "operation": "READ",
        "context": [
          {
            "line": 370,
            "code": "const { count } = await supabase",
            "current": false
          },
          {
            "line": 371,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 372,
            "code": ".select('rut', { count: 'exact', head: true })",
            "current": true
          },
          {
            "line": 373,
            "code": ".eq('rut', record.rut);",
            "current": false
          },
          {
            "line": 374,
            "code": "",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "rut",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":\"Perhaps you meant the table 'public.rats'\",\"message\":\"Could not find the table 'public.rut' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:13.608Z"
        }
      },
      {
        "file": "frontend/src/utils/dataIntegrityValidator.js",
        "line": 395,
        "code": "const { supabase } = await import('../config/supabaseClient');",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 393,
            "code": "",
            "current": false
          },
          {
            "line": 394,
            "code": "try {",
            "current": false
          },
          {
            "line": 395,
            "code": "const { supabase } = await import('../config/supabaseClient');",
            "current": true
          },
          {
            "line": 396,
            "code": "const { count } = await supabase",
            "current": false
          },
          {
            "line": 397,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dataIntegrityValidator.js",
        "line": 397,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 395,
            "code": "const { supabase } = await import('../config/supabaseClient');",
            "current": false
          },
          {
            "line": 396,
            "code": "const { count } = await supabase",
            "current": false
          },
          {
            "line": 397,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 398,
            "code": ".select('id', { count: 'exact', head: true })",
            "current": false
          },
          {
            "line": 399,
            "code": ".eq('nombre_actividad', record.nombre_actividad)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/utils/dataIntegrityValidator.js",
        "line": 398,
        "code": ".select('id', { count: 'exact', head: true })",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 396,
            "code": "const { count } = await supabase",
            "current": false
          },
          {
            "line": 397,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 398,
            "code": ".select('id', { count: 'exact', head: true })",
            "current": true
          },
          {
            "line": 399,
            "code": ".eq('nombre_actividad', record.nombre_actividad)",
            "current": false
          },
          {
            "line": 400,
            "code": ".eq('tenant_id', record.tenant_id);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dataIntegrityValidator.js",
        "line": 480,
        "code": "const { supabase } = await import('../config/supabaseClient');",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 478,
            "code": "async validateRecordExists(tableName, whereClause) {",
            "current": false
          },
          {
            "line": 479,
            "code": "try {",
            "current": false
          },
          {
            "line": 480,
            "code": "const { supabase } = await import('../config/supabaseClient');",
            "current": true
          },
          {
            "line": 481,
            "code": "",
            "current": false
          },
          {
            "line": 482,
            "code": "let query = supabase.from(tableName).select('id', { count: 'exact', head: true });",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dataIntegrityValidator.js",
        "line": 482,
        "code": "let query = supabase.from(tableName).select('id', { count: 'exact', head: true });",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 480,
            "code": "const { supabase } = await import('../config/supabaseClient');",
            "current": false
          },
          {
            "line": 481,
            "code": "",
            "current": false
          },
          {
            "line": 482,
            "code": "let query = supabase.from(tableName).select('id', { count: 'exact', head: true });",
            "current": true
          },
          {
            "line": 483,
            "code": "",
            "current": false
          },
          {
            "line": 484,
            "code": "// Aplicar condiciones WHERE",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dataIntegrityValidator.js",
        "line": 598,
        "code": "tables_with_rules: Array.from(this.validationRules.keys()),",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 596,
            "code": "total_validations: this.integrityChecks.length,",
            "current": false
          },
          {
            "line": 597,
            "code": "validation_errors: this.validationErrors.length,",
            "current": false
          },
          {
            "line": 598,
            "code": "tables_with_rules: Array.from(this.validationRules.keys()),",
            "current": true
          },
          {
            "line": 599,
            "code": "recent_validations: this.integrityChecks.slice(-10),",
            "current": false
          },
          {
            "line": 600,
            "code": "error_summary: this.summarizeErrors()",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 14,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 12,
            "code": "*/",
            "current": false
          },
          {
            "line": 13,
            "code": "",
            "current": false
          },
          {
            "line": 14,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 15,
            "code": "import fileErrorLogger from './fileErrorLogger';",
            "current": false
          },
          {
            "line": 16,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 121,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 119,
            "code": "// Test simple de conexi√≥n",
            "current": false
          },
          {
            "line": 120,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 121,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 122,
            "code": ".select('id', { count: 'exact', head: true });",
            "current": false
          },
          {
            "line": 123,
            "code": "",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 122,
        "code": ".select('id', { count: 'exact', head: true });",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 120,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 121,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 122,
            "code": ".select('id', { count: 'exact', head: true });",
            "current": true
          },
          {
            "line": 123,
            "code": "",
            "current": false
          },
          {
            "line": 124,
            "code": "const endTime = performance.now();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 185,
        "code": ".from(tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 183,
            "code": "// Test acceso a tabla",
            "current": false
          },
          {
            "line": 184,
            "code": "const { count, error } = await supabase",
            "current": false
          },
          {
            "line": 185,
            "code": ".from(tableName)",
            "current": true
          },
          {
            "line": 186,
            "code": ".select('*', { count: 'exact', head: true });",
            "current": false
          },
          {
            "line": 187,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 186,
        "code": ".select('*', { count: 'exact', head: true });",
        "type": "SELECT",
        "table": "exact",
        "operation": "READ",
        "context": [
          {
            "line": 184,
            "code": "const { count, error } = await supabase",
            "current": false
          },
          {
            "line": 185,
            "code": ".from(tableName)",
            "current": false
          },
          {
            "line": 186,
            "code": ".select('*', { count: 'exact', head: true });",
            "current": true
          },
          {
            "line": 187,
            "code": "",
            "current": false
          },
          {
            "line": 188,
            "code": "const endTime = performance.now();",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "exact",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":null,\"message\":\"Could not find the table 'public.exact' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:08.587Z"
        }
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 251,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 249,
            "code": "// Test 1: RATs sin organizaci√≥n v√°lida",
            "current": false
          },
          {
            "line": 250,
            "code": "const { data: orphanRATs, error: ratError } = await supabase",
            "current": false
          },
          {
            "line": 251,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 252,
            "code": ".select('id, organizacion_id, nombre_actividad')",
            "current": false
          },
          {
            "line": 253,
            "code": ".not('organizacion_id', 'is', null)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 252,
        "code": ".select('id, organizacion_id, nombre_actividad')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 250,
            "code": "const { data: orphanRATs, error: ratError } = await supabase",
            "current": false
          },
          {
            "line": 251,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 252,
            "code": ".select('id, organizacion_id, nombre_actividad')",
            "current": true
          },
          {
            "line": 253,
            "code": ".not('organizacion_id', 'is', null)",
            "current": false
          },
          {
            "line": 254,
            "code": ".limit(10);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 259,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 257,
            "code": "for (const rat of orphanRATs) {",
            "current": false
          },
          {
            "line": 258,
            "code": "const { data: orgExists } = await supabase",
            "current": false
          },
          {
            "line": 259,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 260,
            "code": ".select('id')",
            "current": false
          },
          {
            "line": 261,
            "code": ".eq('id', rat.organizacion_id)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 260,
        "code": ".select('id')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 258,
            "code": "const { data: orgExists } = await supabase",
            "current": false
          },
          {
            "line": 259,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 260,
            "code": ".select('id')",
            "current": true
          },
          {
            "line": 261,
            "code": ".eq('id', rat.organizacion_id)",
            "current": false
          },
          {
            "line": 262,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 278,
        "code": ".from('proveedores')",
        "type": "OTHER",
        "table": "proveedores",
        "operation": "OTHER",
        "context": [
          {
            "line": 276,
            "code": "// Test 2: Proveedores sin RAT v√°lido",
            "current": false
          },
          {
            "line": 277,
            "code": "const { data: orphanProviders, error: provError } = await supabase",
            "current": false
          },
          {
            "line": 278,
            "code": ".from('proveedores')",
            "current": true
          },
          {
            "line": 279,
            "code": ".select('id, rat_id')",
            "current": false
          },
          {
            "line": 280,
            "code": ".not('rat_id', 'is', null)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "proveedores",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006999360_mm271x3en\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.535Z"
        }
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 279,
        "code": ".select('id, rat_id')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 277,
            "code": "const { data: orphanProviders, error: provError } = await supabase",
            "current": false
          },
          {
            "line": 278,
            "code": ".from('proveedores')",
            "current": false
          },
          {
            "line": 279,
            "code": ".select('id, rat_id')",
            "current": true
          },
          {
            "line": 280,
            "code": ".not('rat_id', 'is', null)",
            "current": false
          },
          {
            "line": 281,
            "code": ".limit(10);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 286,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 284,
            "code": "for (const provider of orphanProviders) {",
            "current": false
          },
          {
            "line": 285,
            "code": "const { data: ratExists } = await supabase",
            "current": false
          },
          {
            "line": 286,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 287,
            "code": ".select('id')",
            "current": false
          },
          {
            "line": 288,
            "code": ".eq('id', provider.rat_id)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 287,
        "code": ".select('id')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 285,
            "code": "const { data: ratExists } = await supabase",
            "current": false
          },
          {
            "line": 286,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 287,
            "code": ".select('id')",
            "current": true
          },
          {
            "line": 288,
            "code": ".eq('id', provider.rat_id)",
            "current": false
          },
          {
            "line": 289,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 340,
        "code": ".from(testCase.table)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 338,
            "code": "// Test con filtro tenant",
            "current": false
          },
          {
            "line": 339,
            "code": "const { error: withFilterError } = await supabase",
            "current": false
          },
          {
            "line": 340,
            "code": ".from(testCase.table)",
            "current": true
          },
          {
            "line": 341,
            "code": ".select('id', { count: 'exact', head: true })",
            "current": false
          },
          {
            "line": 342,
            "code": ".match(testCase.filter);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 341,
        "code": ".select('id', { count: 'exact', head: true })",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 339,
            "code": "const { error: withFilterError } = await supabase",
            "current": false
          },
          {
            "line": 340,
            "code": ".from(testCase.table)",
            "current": false
          },
          {
            "line": 341,
            "code": ".select('id', { count: 'exact', head: true })",
            "current": true
          },
          {
            "line": 342,
            "code": ".match(testCase.filter);",
            "current": false
          },
          {
            "line": 343,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 346,
        "code": ".from(testCase.table)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 344,
            "code": "// Test sin filtro (deber√≠a fallar si RLS est√° bien configurado)",
            "current": false
          },
          {
            "line": 345,
            "code": "const { error: withoutFilterError } = await supabase",
            "current": false
          },
          {
            "line": 346,
            "code": ".from(testCase.table)",
            "current": true
          },
          {
            "line": 347,
            "code": ".select('id', { count: 'exact', head: true });",
            "current": false
          },
          {
            "line": 348,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 347,
        "code": ".select('id', { count: 'exact', head: true });",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 345,
            "code": "const { error: withoutFilterError } = await supabase",
            "current": false
          },
          {
            "line": 346,
            "code": ".from(testCase.table)",
            "current": false
          },
          {
            "line": 347,
            "code": ".select('id', { count: 'exact', head: true });",
            "current": true
          },
          {
            "line": 348,
            "code": "",
            "current": false
          },
          {
            "line": 349,
            "code": "test.permissions[testCase.table] = {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 391,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 389,
            "code": "// Test 1: RATs con datos incompletos cr√≠ticos",
            "current": false
          },
          {
            "line": 390,
            "code": "const { data: incompleteRATs } = await supabase",
            "current": false
          },
          {
            "line": 391,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 392,
            "code": ".select('id, nombre_actividad, razon_social, email_empresa')",
            "current": false
          },
          {
            "line": 393,
            "code": ".or('nombre_actividad.is.null,razon_social.is.null,email_empresa.is.null')",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 392,
        "code": ".select('id, nombre_actividad, razon_social, email_empresa')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 390,
            "code": "const { data: incompleteRATs } = await supabase",
            "current": false
          },
          {
            "line": 391,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 392,
            "code": ".select('id, nombre_actividad, razon_social, email_empresa')",
            "current": true
          },
          {
            "line": 393,
            "code": ".or('nombre_actividad.is.null,razon_social.is.null,email_empresa.is.null')",
            "current": false
          },
          {
            "line": 394,
            "code": ".limit(5);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 414,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 412,
            "code": "// Test 2: Organizaciones duplicadas por RUT",
            "current": false
          },
          {
            "line": 413,
            "code": "const { data: duplicateOrgs } = await supabase",
            "current": false
          },
          {
            "line": 414,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 415,
            "code": ".select('rut')",
            "current": false
          },
          {
            "line": 416,
            "code": ".not('rut', 'is', null);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/databaseHealthMonitor.js",
        "line": 415,
        "code": ".select('rut')",
        "type": "SELECT",
        "table": "rut",
        "operation": "READ",
        "context": [
          {
            "line": 413,
            "code": "const { data: duplicateOrgs } = await supabase",
            "current": false
          },
          {
            "line": 414,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 415,
            "code": ".select('rut')",
            "current": true
          },
          {
            "line": 416,
            "code": ".not('rut', 'is', null);",
            "current": false
          },
          {
            "line": 417,
            "code": "",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "rut",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":\"Perhaps you meant the table 'public.rats'\",\"message\":\"Could not find the table 'public.rut' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:13.608Z"
        }
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 1,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 1,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 2,
            "code": "",
            "current": false
          },
          {
            "line": 3,
            "code": "class DynamicLegalRules {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 13,
        "code": ".from('legal_rules')",
        "type": "OTHER",
        "table": "legal_rules",
        "operation": "OTHER",
        "context": [
          {
            "line": 11,
            "code": "try {",
            "current": false
          },
          {
            "line": 12,
            "code": "const { data: rules, error } = await supabase",
            "current": false
          },
          {
            "line": 13,
            "code": ".from('legal_rules')",
            "current": true
          },
          {
            "line": 14,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 15,
            "code": ".eq('active', true)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "legal_rules",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007013809_m5iv50dqi\\\"\"}",
          "timestamp": "2025-09-04T17:30:14.000Z"
        }
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 14,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 12,
            "code": "const { data: rules, error } = await supabase",
            "current": false
          },
          {
            "line": 13,
            "code": ".from('legal_rules')",
            "current": false
          },
          {
            "line": 14,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 15,
            "code": ".eq('active', true)",
            "current": false
          },
          {
            "line": 16,
            "code": ".order('priority', { ascending: false });",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 186,
        "code": ".from('rule_execution_log')",
        "type": "OTHER",
        "table": "rule_execution_log",
        "operation": "OTHER",
        "context": [
          {
            "line": 184,
            "code": "try {",
            "current": false
          },
          {
            "line": 185,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 186,
            "code": ".from('rule_execution_log')",
            "current": true
          },
          {
            "line": 187,
            "code": ".insert({",
            "current": false
          },
          {
            "line": 188,
            "code": "rule_id: ruleId,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "rule_execution_log",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007014199_so9jqiq88\\\"\"}",
          "timestamp": "2025-09-04T17:30:14.380Z"
        }
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 187,
        "code": ".insert({",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 185,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 186,
            "code": ".from('rule_execution_log')",
            "current": false
          },
          {
            "line": 187,
            "code": ".insert({",
            "current": true
          },
          {
            "line": 188,
            "code": "rule_id: ruleId,",
            "current": false
          },
          {
            "line": 189,
            "code": "rat_id: ratId,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 210,
        "code": ".from('legal_rules')",
        "type": "OTHER",
        "table": "legal_rules",
        "operation": "OTHER",
        "context": [
          {
            "line": 208,
            "code": "try {",
            "current": false
          },
          {
            "line": 209,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 210,
            "code": ".from('legal_rules')",
            "current": true
          },
          {
            "line": 211,
            "code": ".insert({",
            "current": false
          },
          {
            "line": 212,
            "code": "rule_id: `rule_${Date.now()}`,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "legal_rules",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007013809_m5iv50dqi\\\"\"}",
          "timestamp": "2025-09-04T17:30:14.000Z"
        }
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 211,
        "code": ".insert({",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 209,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 210,
            "code": ".from('legal_rules')",
            "current": false
          },
          {
            "line": 211,
            "code": ".insert({",
            "current": true
          },
          {
            "line": 212,
            "code": "rule_id: `rule_${Date.now()}`,",
            "current": false
          },
          {
            "line": 213,
            "code": "category: ruleData.category,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 238,
        "code": ".from('legal_rules')",
        "type": "OTHER",
        "table": "legal_rules",
        "operation": "OTHER",
        "context": [
          {
            "line": 236,
            "code": "try {",
            "current": false
          },
          {
            "line": 237,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 238,
            "code": ".from('legal_rules')",
            "current": true
          },
          {
            "line": 239,
            "code": ".update({",
            "current": false
          },
          {
            "line": 240,
            "code": "...updates,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "legal_rules",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007013809_m5iv50dqi\\\"\"}",
          "timestamp": "2025-09-04T17:30:14.000Z"
        }
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 239,
        "code": ".update({",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 237,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 238,
            "code": ".from('legal_rules')",
            "current": false
          },
          {
            "line": 239,
            "code": ".update({",
            "current": true
          },
          {
            "line": 240,
            "code": "...updates,",
            "current": false
          },
          {
            "line": 241,
            "code": "updated_by: userId,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 263,
        "code": ".from('legal_articles')",
        "type": "OTHER",
        "table": "legal_articles",
        "operation": "OTHER",
        "context": [
          {
            "line": 261,
            "code": "try {",
            "current": false
          },
          {
            "line": 262,
            "code": "const { data: article, error } = await supabase",
            "current": false
          },
          {
            "line": 263,
            "code": ".from('legal_articles')",
            "current": true
          },
          {
            "line": 264,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 265,
            "code": ".eq('article_number', articleNumber)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "legal_articles",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007014581_3lzyooftl\\\"\"}",
          "timestamp": "2025-09-04T17:30:14.751Z"
        }
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 264,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 262,
            "code": "const { data: article, error } = await supabase",
            "current": false
          },
          {
            "line": 263,
            "code": ".from('legal_articles')",
            "current": false
          },
          {
            "line": 264,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 265,
            "code": ".eq('article_number', articleNumber)",
            "current": false
          },
          {
            "line": 266,
            "code": ".eq('law_code', 'LEY_21719')",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 324,
        "code": ".from('rule_execution_log')",
        "type": "OTHER",
        "table": "rule_execution_log",
        "operation": "OTHER",
        "context": [
          {
            "line": 322,
            "code": "try {",
            "current": false
          },
          {
            "line": 323,
            "code": "const { data: stats, error } = await supabase",
            "current": false
          },
          {
            "line": 324,
            "code": ".from('rule_execution_log')",
            "current": true
          },
          {
            "line": 325,
            "code": ".select(`",
            "current": false
          },
          {
            "line": 326,
            "code": "rule_id,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "rule_execution_log",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007014199_so9jqiq88\\\"\"}",
          "timestamp": "2025-09-04T17:30:14.380Z"
        }
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 325,
        "code": ".select(`",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 323,
            "code": "const { data: stats, error } = await supabase",
            "current": false
          },
          {
            "line": 324,
            "code": ".from('rule_execution_log')",
            "current": false
          },
          {
            "line": 325,
            "code": ".select(`",
            "current": true
          },
          {
            "line": 326,
            "code": "rule_id,",
            "current": false
          },
          {
            "line": 327,
            "code": "legal_rules(message, category),",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 367,
        "code": ".from('law_updates')",
        "type": "OTHER",
        "table": "law_updates",
        "operation": "OTHER",
        "context": [
          {
            "line": 365,
            "code": "try {",
            "current": false
          },
          {
            "line": 366,
            "code": "const { data: updates, error } = await supabase",
            "current": false
          },
          {
            "line": 367,
            "code": ".from('law_updates')",
            "current": true
          },
          {
            "line": 368,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 369,
            "code": ".eq('law_code', 'LEY_21719')",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "law_updates",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007014952_5slubmfd2\\\"\"}",
          "timestamp": "2025-09-04T17:30:15.155Z"
        }
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 368,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 366,
            "code": "const { data: updates, error } = await supabase",
            "current": false
          },
          {
            "line": 367,
            "code": ".from('law_updates')",
            "current": false
          },
          {
            "line": 368,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 369,
            "code": ".eq('law_code', 'LEY_21719')",
            "current": false
          },
          {
            "line": 370,
            "code": ".eq('processed', false)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 397,
        "code": ".from('law_updates')",
        "type": "OTHER",
        "table": "law_updates",
        "operation": "OTHER",
        "context": [
          {
            "line": 395,
            "code": "",
            "current": false
          },
          {
            "line": 396,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 397,
            "code": ".from('law_updates')",
            "current": true
          },
          {
            "line": 398,
            "code": ".update({ processed: true, processed_at: new Date().toISOString() })",
            "current": false
          },
          {
            "line": 399,
            "code": ".eq('id', update.id);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "law_updates",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007014952_5slubmfd2\\\"\"}",
          "timestamp": "2025-09-04T17:30:15.155Z"
        }
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 398,
        "code": ".update({ processed: true, processed_at: new Date().toISOString() })",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 396,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 397,
            "code": ".from('law_updates')",
            "current": false
          },
          {
            "line": 398,
            "code": ".update({ processed: true, processed_at: new Date().toISOString() })",
            "current": true
          },
          {
            "line": 399,
            "code": ".eq('id', update.id);",
            "current": false
          },
          {
            "line": 400,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 424,
        "code": ".from('legal_rules')",
        "type": "OTHER",
        "table": "legal_rules",
        "operation": "OTHER",
        "context": [
          {
            "line": 422,
            "code": "",
            "current": false
          },
          {
            "line": 423,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 424,
            "code": ".from('legal_rules')",
            "current": true
          },
          {
            "line": 425,
            "code": ".insert(rule);",
            "current": false
          },
          {
            "line": 426,
            "code": "",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "legal_rules",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007013809_m5iv50dqi\\\"\"}",
          "timestamp": "2025-09-04T17:30:14.000Z"
        }
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 425,
        "code": ".insert(rule);",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 423,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 424,
            "code": ".from('legal_rules')",
            "current": false
          },
          {
            "line": 425,
            "code": ".insert(rule);",
            "current": true
          },
          {
            "line": 426,
            "code": "",
            "current": false
          },
          {
            "line": 427,
            "code": "if (error) throw error;",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 432,
        "code": ".from('legal_rules')",
        "type": "OTHER",
        "table": "legal_rules",
        "operation": "OTHER",
        "context": [
          {
            "line": 430,
            "code": "async updateRulesForArticle(update) {",
            "current": false
          },
          {
            "line": 431,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 432,
            "code": ".from('legal_rules')",
            "current": true
          },
          {
            "line": 433,
            "code": ".update({",
            "current": false
          },
          {
            "line": 434,
            "code": "condition: update.new_condition,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "legal_rules",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007013809_m5iv50dqi\\\"\"}",
          "timestamp": "2025-09-04T17:30:14.000Z"
        }
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 433,
        "code": ".update({",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 431,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 432,
            "code": ".from('legal_rules')",
            "current": false
          },
          {
            "line": 433,
            "code": ".update({",
            "current": true
          },
          {
            "line": 434,
            "code": "condition: update.new_condition,",
            "current": false
          },
          {
            "line": 435,
            "code": "message: update.new_message,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 510,
        "code": ".from('legal_articles')",
        "type": "OTHER",
        "table": "legal_articles",
        "operation": "OTHER",
        "context": [
          {
            "line": 508,
            "code": "try {",
            "current": false
          },
          {
            "line": 509,
            "code": "const { data: article, error } = await supabase",
            "current": false
          },
          {
            "line": 510,
            "code": ".from('legal_articles')",
            "current": true
          },
          {
            "line": 511,
            "code": ".select('full_text, summary, practical_guide')",
            "current": false
          },
          {
            "line": 512,
            "code": ".eq('article_number', articleNumber)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "legal_articles",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007014581_3lzyooftl\\\"\"}",
          "timestamp": "2025-09-04T17:30:14.751Z"
        }
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 511,
        "code": ".select('full_text, summary, practical_guide')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 509,
            "code": "const { data: article, error } = await supabase",
            "current": false
          },
          {
            "line": 510,
            "code": ".from('legal_articles')",
            "current": false
          },
          {
            "line": 511,
            "code": ".select('full_text, summary, practical_guide')",
            "current": true
          },
          {
            "line": 512,
            "code": ".eq('article_number', articleNumber)",
            "current": false
          },
          {
            "line": 513,
            "code": ".eq('law_code', 'LEY_21719')",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 527,
        "code": ".from('best_practices')",
        "type": "OTHER",
        "table": "best_practices",
        "operation": "OTHER",
        "context": [
          {
            "line": 525,
            "code": "try {",
            "current": false
          },
          {
            "line": 526,
            "code": "const { data: practices, error } = await supabase",
            "current": false
          },
          {
            "line": 527,
            "code": ".from('best_practices')",
            "current": true
          },
          {
            "line": 528,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 529,
            "code": ".or(`category.eq.${this.inferCategory(ratData)},category.eq.general`)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "best_practices",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007015356_izsz2w50o\\\"\"}",
          "timestamp": "2025-09-04T17:30:15.532Z"
        }
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 528,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 526,
            "code": "const { data: practices, error } = await supabase",
            "current": false
          },
          {
            "line": 527,
            "code": ".from('best_practices')",
            "current": false
          },
          {
            "line": 528,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 529,
            "code": ".or(`category.eq.${this.inferCategory(ratData)},category.eq.general`)",
            "current": false
          },
          {
            "line": 530,
            "code": ".eq('active', true)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 564,
        "code": ".from('compliance_records')",
        "type": "OTHER",
        "table": "compliance_records",
        "operation": "OTHER",
        "context": [
          {
            "line": 562,
            "code": "try {",
            "current": false
          },
          {
            "line": 563,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 564,
            "code": ".from('compliance_records')",
            "current": true
          },
          {
            "line": 565,
            "code": ".insert({",
            "current": false
          },
          {
            "line": 566,
            "code": "rat_id: ratId,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "compliance_records",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007015733_2wvrnlexe\\\"\"}",
          "timestamp": "2025-09-04T17:30:15.938Z"
        }
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 565,
        "code": ".insert({",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 563,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 564,
            "code": ".from('compliance_records')",
            "current": false
          },
          {
            "line": 565,
            "code": ".insert({",
            "current": true
          },
          {
            "line": 566,
            "code": "rat_id: ratId,",
            "current": false
          },
          {
            "line": 567,
            "code": "compliance_score: complianceLevel,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 579,
        "code": ".from('compliance_records')",
        "type": "OTHER",
        "table": "compliance_records",
        "operation": "OTHER",
        "context": [
          {
            "line": 577,
            "code": "try {",
            "current": false
          },
          {
            "line": 578,
            "code": "const { data: records, error } = await supabase",
            "current": false
          },
          {
            "line": 579,
            "code": ".from('compliance_records')",
            "current": true
          },
          {
            "line": 580,
            "code": ".select('compliance_score, recorded_at')",
            "current": false
          },
          {
            "line": 581,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "compliance_records",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007015733_2wvrnlexe\\\"\"}",
          "timestamp": "2025-09-04T17:30:15.938Z"
        }
      },
      {
        "file": "frontend/src/utils/dynamicLegalRules.js",
        "line": 580,
        "code": ".select('compliance_score, recorded_at')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 578,
            "code": "const { data: records, error } = await supabase",
            "current": false
          },
          {
            "line": 579,
            "code": ".from('compliance_records')",
            "current": false
          },
          {
            "line": 580,
            "code": ".select('compliance_score, recorded_at')",
            "current": true
          },
          {
            "line": 581,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 582,
            "code": ".gte('recorded_at', new Date(Date.now() - days * 24 * 60 * 60 * 1000).toISOString())",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/errorMonitoringOnly.js",
        "line": 279,
        "code": "return 'Error 406 detectado - Revisar configuraci√≥n RLS en Supabase. Posible problema de permisos tenant_id.';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 277,
            "code": "switch (errorEntry.type) {",
            "current": false
          },
          {
            "line": 278,
            "code": "case 'CONSOLE_ERROR_RLS_ERROR_406':",
            "current": false
          },
          {
            "line": 279,
            "code": "return 'Error 406 detectado - Revisar configuraci√≥n RLS en Supabase. Posible problema de permisos tenant_id.';",
            "current": true
          },
          {
            "line": 280,
            "code": "",
            "current": false
          },
          {
            "line": 281,
            "code": "case 'CONSOLE_ERROR_UNDEFINED_ID_ERROR':",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/errorPreventionMonitor.js",
        "line": 8,
        "code": "import smartSupabase, { getSmartSupabaseStats } from './smartSupabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 6,
            "code": "*/",
            "current": false
          },
          {
            "line": 7,
            "code": "",
            "current": false
          },
          {
            "line": 8,
            "code": "import smartSupabase, { getSmartSupabaseStats } from './smartSupabaseClient';",
            "current": true
          },
          {
            "line": 9,
            "code": "import rlsGuard, { getSupabasePermissions } from './supabaseRLSGuard';",
            "current": false
          },
          {
            "line": 10,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/errorPreventionMonitor.js",
        "line": 165,
        "code": "return url.includes('supabase.co') || url.includes('/rest/v1/');",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 163,
            "code": "isSupabaseRequest(url) {",
            "current": false
          },
          {
            "line": 164,
            "code": "if (typeof url !== 'string') return false;",
            "current": false
          },
          {
            "line": 165,
            "code": "return url.includes('supabase.co') || url.includes('/rest/v1/');",
            "current": true
          },
          {
            "line": 166,
            "code": "}",
            "current": false
          },
          {
            "line": 167,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/frontendValidator.js",
        "line": 8,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 6,
            "code": "*/",
            "current": false
          },
          {
            "line": 7,
            "code": "",
            "current": false
          },
          {
            "line": 8,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 9,
            "code": "",
            "current": false
          },
          {
            "line": 10,
            "code": "class FrontendValidator {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/frontendValidator.js",
        "line": 254,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 252,
            "code": "// Probar conexi√≥n Supabase",
            "current": false
          },
          {
            "line": 253,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 254,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 255,
            "code": ".select('count')",
            "current": false
          },
          {
            "line": 256,
            "code": ".limit(1);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/frontendValidator.js",
        "line": 255,
        "code": ".select('count')",
        "type": "SELECT",
        "table": "count",
        "operation": "READ",
        "context": [
          {
            "line": 253,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 254,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 255,
            "code": ".select('count')",
            "current": true
          },
          {
            "line": 256,
            "code": ".limit(1);",
            "current": false
          },
          {
            "line": 257,
            "code": "",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "count",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":\"Perhaps you meant the table 'public.consents'\",\"message\":\"Could not find the table 'public.count' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:05.082Z"
        }
      },
      {
        "file": "frontend/src/utils/frontendValidator.js",
        "line": 386,
        "code": ".from('frontend_validation_reports')",
        "type": "OTHER",
        "table": "frontend_validation_reports",
        "operation": "OTHER",
        "context": [
          {
            "line": 384,
            "code": "try {",
            "current": false
          },
          {
            "line": 385,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 386,
            "code": ".from('frontend_validation_reports')",
            "current": true
          },
          {
            "line": 387,
            "code": ".insert({",
            "current": false
          },
          {
            "line": 388,
            "code": "report_id: `validation_${Date.now()}`,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "frontend_validation_reports",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007016139_h160v89p6\\\"\"}",
          "timestamp": "2025-09-04T17:30:16.312Z"
        }
      },
      {
        "file": "frontend/src/utils/frontendValidator.js",
        "line": 387,
        "code": ".insert({",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 385,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 386,
            "code": ".from('frontend_validation_reports')",
            "current": false
          },
          {
            "line": 387,
            "code": ".insert({",
            "current": true
          },
          {
            "line": 388,
            "code": "report_id: `validation_${Date.now()}`,",
            "current": false
          },
          {
            "line": 389,
            "code": "report_data: report,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/humanInteractionSimulator.js",
        "line": 12,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 10,
            "code": "*/",
            "current": false
          },
          {
            "line": 11,
            "code": "",
            "current": false
          },
          {
            "line": 12,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 13,
            "code": "",
            "current": false
          },
          {
            "line": 14,
            "code": "class HumanInteractionSimulator {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/humanInteractionSimulator.js",
        "line": 291,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 289,
            "code": "// 7. Verificar en base de datos",
            "current": false
          },
          {
            "line": 290,
            "code": "const { data: savedOrg } = await supabase",
            "current": false
          },
          {
            "line": 291,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 292,
            "code": ".select('id')",
            "current": false
          },
          {
            "line": 293,
            "code": ".eq('rut', testData.rut)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/humanInteractionSimulator.js",
        "line": 292,
        "code": ".select('id')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 290,
            "code": "const { data: savedOrg } = await supabase",
            "current": false
          },
          {
            "line": 291,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 292,
            "code": ".select('id')",
            "current": true
          },
          {
            "line": 293,
            "code": ".eq('rut', testData.rut)",
            "current": false
          },
          {
            "line": 294,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/humanInteractionSimulator.js",
        "line": 470,
        "code": ".from('rats')",
        "type": "OTHER",
        "table": "rats",
        "operation": "OTHER",
        "context": [
          {
            "line": 468,
            "code": "// Verificar en base de datos",
            "current": false
          },
          {
            "line": 469,
            "code": "const { data: rats } = await supabase",
            "current": false
          },
          {
            "line": 470,
            "code": ".from('rats')",
            "current": true
          },
          {
            "line": 471,
            "code": ".select('id')",
            "current": false
          },
          {
            "line": 472,
            "code": ".order('created_at', { ascending: false })",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "rats",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007011096_g78awpgwo\\\"\"}",
          "timestamp": "2025-09-04T17:30:11.298Z"
        }
      },
      {
        "file": "frontend/src/utils/humanInteractionSimulator.js",
        "line": 471,
        "code": ".select('id')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 469,
            "code": "const { data: rats } = await supabase",
            "current": false
          },
          {
            "line": 470,
            "code": ".from('rats')",
            "current": false
          },
          {
            "line": 471,
            "code": ".select('id')",
            "current": true
          },
          {
            "line": 472,
            "code": ".order('created_at', { ascending: false })",
            "current": false
          },
          {
            "line": 473,
            "code": ".limit(1);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/humanInteractionSimulator.js",
        "line": 547,
        "code": "element = Array.from(elements).find(el =>",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 545,
            "code": "const elements = document.querySelectorAll(tag);",
            "current": false
          },
          {
            "line": 546,
            "code": "",
            "current": false
          },
          {
            "line": 547,
            "code": "element = Array.from(elements).find(el =>",
            "current": true
          },
          {
            "line": 548,
            "code": "el.textContent?.toLowerCase().includes(textContent.toLowerCase())",
            "current": false
          },
          {
            "line": 549,
            "code": ");",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/humanInteractionSimulator.js",
        "line": 740,
        "code": ".from('simulation_results')",
        "type": "OTHER",
        "table": "simulation_results",
        "operation": "OTHER",
        "context": [
          {
            "line": 738,
            "code": "try {",
            "current": false
          },
          {
            "line": 739,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 740,
            "code": ".from('simulation_results')",
            "current": true
          },
          {
            "line": 741,
            "code": ".insert({",
            "current": false
          },
          {
            "line": 742,
            "code": "simulation_id: simulation.id,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "simulation_results",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":\"Perhaps you meant the table 'public.completion_templates'\",\"message\":\"Could not find the table 'public.simulation_results' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:16.708Z"
        }
      },
      {
        "file": "frontend/src/utils/humanInteractionSimulator.js",
        "line": 741,
        "code": ".insert({",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 739,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 740,
            "code": ".from('simulation_results')",
            "current": false
          },
          {
            "line": 741,
            "code": ".insert({",
            "current": true
          },
          {
            "line": 742,
            "code": "simulation_id: simulation.id,",
            "current": false
          },
          {
            "line": 743,
            "code": "results_data: simulation,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/iaAgentReporter.js",
        "line": 8,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 6,
            "code": "*/",
            "current": false
          },
          {
            "line": 7,
            "code": "",
            "current": false
          },
          {
            "line": 8,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 9,
            "code": "",
            "current": false
          },
          {
            "line": 10,
            "code": "class IAAgentReporter {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/iaAgentReporter.js",
        "line": 79,
        "code": ".from('active_agents')",
        "type": "OTHER",
        "table": "active_agents",
        "operation": "OTHER",
        "context": [
          {
            "line": 77,
            "code": "try {",
            "current": false
          },
          {
            "line": 78,
            "code": "const { data: activeAgents } = await supabase",
            "current": false
          },
          {
            "line": 79,
            "code": ".from('active_agents')",
            "current": true
          },
          {
            "line": 80,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 81,
            "code": ".eq('agent_type', 'system_validation')",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "active_agents",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007016909_wp9ikj54q\\\"\"}",
          "timestamp": "2025-09-04T17:30:17.128Z"
        }
      },
      {
        "file": "frontend/src/utils/iaAgentReporter.js",
        "line": 80,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 78,
            "code": "const { data: activeAgents } = await supabase",
            "current": false
          },
          {
            "line": 79,
            "code": ".from('active_agents')",
            "current": false
          },
          {
            "line": 80,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 81,
            "code": ".eq('agent_type', 'system_validation')",
            "current": false
          },
          {
            "line": 82,
            "code": ".order('last_activity', { ascending: false })",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/iaAgentReporter.js",
        "line": 118,
        "code": ".from('agent_activity_log')",
        "type": "OTHER",
        "table": "agent_activity_log",
        "operation": "OTHER",
        "context": [
          {
            "line": 116,
            "code": "try {",
            "current": false
          },
          {
            "line": 117,
            "code": "const { data: activities } = await supabase",
            "current": false
          },
          {
            "line": 118,
            "code": ".from('agent_activity_log')",
            "current": true
          },
          {
            "line": 119,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 120,
            "code": ".order('timestamp', { ascending: false })",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "agent_activity_log",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007007599_a3u1unxj5\\\"\"}",
          "timestamp": "2025-09-04T17:30:07.806Z"
        }
      },
      {
        "file": "frontend/src/utils/iaAgentReporter.js",
        "line": 119,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 117,
            "code": "const { data: activities } = await supabase",
            "current": false
          },
          {
            "line": 118,
            "code": ".from('agent_activity_log')",
            "current": false
          },
          {
            "line": 119,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 120,
            "code": ".order('timestamp', { ascending: false })",
            "current": false
          },
          {
            "line": 121,
            "code": ".limit(20);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/iaAgentReporter.js",
        "line": 148,
        "code": ".from('rats')",
        "type": "OTHER",
        "table": "rats",
        "operation": "OTHER",
        "context": [
          {
            "line": 146,
            "code": "// Obtener RATs creados recientes",
            "current": false
          },
          {
            "line": 147,
            "code": "const { data: rats } = await supabase",
            "current": false
          },
          {
            "line": 148,
            "code": ".from('rats')",
            "current": true
          },
          {
            "line": 149,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 150,
            "code": ".order('created_at', { ascending: false })",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "rats",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007011096_g78awpgwo\\\"\"}",
          "timestamp": "2025-09-04T17:30:11.298Z"
        }
      },
      {
        "file": "frontend/src/utils/iaAgentReporter.js",
        "line": 149,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 147,
            "code": "const { data: rats } = await supabase",
            "current": false
          },
          {
            "line": 148,
            "code": ".from('rats')",
            "current": false
          },
          {
            "line": 149,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 150,
            "code": ".order('created_at', { ascending: false })",
            "current": false
          },
          {
            "line": 151,
            "code": ".limit(50);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/iaAgentReporter.js",
        "line": 155,
        "code": ".from('dpo_notifications')",
        "type": "OTHER",
        "table": "dpo_notifications",
        "operation": "OTHER",
        "context": [
          {
            "line": 153,
            "code": "// Obtener notificaciones DPO",
            "current": false
          },
          {
            "line": 154,
            "code": "const { data: notifications } = await supabase",
            "current": false
          },
          {
            "line": 155,
            "code": ".from('dpo_notifications')",
            "current": true
          },
          {
            "line": 156,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 157,
            "code": ".order('created_at', { ascending: false })",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "dpo_notifications",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007001296_x2bjv8rug\\\"\"}",
          "timestamp": "2025-09-04T17:30:01.480Z"
        }
      },
      {
        "file": "frontend/src/utils/iaAgentReporter.js",
        "line": 156,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 154,
            "code": "const { data: notifications } = await supabase",
            "current": false
          },
          {
            "line": 155,
            "code": ".from('dpo_notifications')",
            "current": false
          },
          {
            "line": 156,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 157,
            "code": ".order('created_at', { ascending: false })",
            "current": false
          },
          {
            "line": 158,
            "code": ".limit(100);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/iaAgentReporter.js",
        "line": 194,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 192,
            "code": "// Test de conectividad b√°sica",
            "current": false
          },
          {
            "line": 193,
            "code": "const { data: test } = await supabase",
            "current": false
          },
          {
            "line": 194,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 195,
            "code": ".select('count')",
            "current": false
          },
          {
            "line": 196,
            "code": ".limit(1);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/iaAgentReporter.js",
        "line": 195,
        "code": ".select('count')",
        "type": "SELECT",
        "table": "count",
        "operation": "READ",
        "context": [
          {
            "line": 193,
            "code": "const { data: test } = await supabase",
            "current": false
          },
          {
            "line": 194,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 195,
            "code": ".select('count')",
            "current": true
          },
          {
            "line": 196,
            "code": ".limit(1);",
            "current": false
          },
          {
            "line": 197,
            "code": "",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "count",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":\"Perhaps you meant the table 'public.consents'\",\"message\":\"Could not find the table 'public.count' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:05.082Z"
        }
      },
      {
        "file": "frontend/src/utils/iaAgentReporter.js",
        "line": 221,
        "code": ".from('user_sessions')",
        "type": "OTHER",
        "table": "user_sessions",
        "operation": "OTHER",
        "context": [
          {
            "line": 219,
            "code": "try {",
            "current": false
          },
          {
            "line": 220,
            "code": "const { data: sessions } = await supabase",
            "current": false
          },
          {
            "line": 221,
            "code": ".from('user_sessions')",
            "current": true
          },
          {
            "line": 222,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 223,
            "code": ".eq('is_active', true);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "user_sessions",
          "error": "INSERT failed: 400 - {\"code\":\"PGRST204\",\"details\":null,\"hint\":null,\"message\":\"Could not find the 'data' column of 'user_sessions' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:04.286Z"
        }
      },
      {
        "file": "frontend/src/utils/iaAgentReporter.js",
        "line": 222,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 220,
            "code": "const { data: sessions } = await supabase",
            "current": false
          },
          {
            "line": 221,
            "code": ".from('user_sessions')",
            "current": false
          },
          {
            "line": 222,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 223,
            "code": ".eq('is_active', true);",
            "current": false
          },
          {
            "line": 224,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/iaAgentReporter.js",
        "line": 226,
        "code": ".from('rats')",
        "type": "OTHER",
        "table": "rats",
        "operation": "OTHER",
        "context": [
          {
            "line": 224,
            "code": "",
            "current": false
          },
          {
            "line": 225,
            "code": "const { data: recentRATs } = await supabase",
            "current": false
          },
          {
            "line": 226,
            "code": ".from('rats')",
            "current": true
          },
          {
            "line": 227,
            "code": ".select('created_at, responsable_proceso')",
            "current": false
          },
          {
            "line": 228,
            "code": ".gte('created_at', new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString())",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "rats",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007011096_g78awpgwo\\\"\"}",
          "timestamp": "2025-09-04T17:30:11.298Z"
        }
      },
      {
        "file": "frontend/src/utils/iaAgentReporter.js",
        "line": 227,
        "code": ".select('created_at, responsable_proceso')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 225,
            "code": "const { data: recentRATs } = await supabase",
            "current": false
          },
          {
            "line": 226,
            "code": ".from('rats')",
            "current": false
          },
          {
            "line": 227,
            "code": ".select('created_at, responsable_proceso')",
            "current": true
          },
          {
            "line": 228,
            "code": ".gte('created_at', new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString())",
            "current": false
          },
          {
            "line": 229,
            "code": ".order('created_at', { ascending: false });",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/iaAgentReporter.js",
        "line": 250,
        "code": ".from('generated_documents')",
        "type": "OTHER",
        "table": "generated_documents",
        "operation": "OTHER",
        "context": [
          {
            "line": 248,
            "code": "try {",
            "current": false
          },
          {
            "line": 249,
            "code": "const { data: documents } = await supabase",
            "current": false
          },
          {
            "line": 250,
            "code": ".from('generated_documents')",
            "current": true
          },
          {
            "line": 251,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 252,
            "code": ".order('created_at', { ascending: false })",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "generated_documents",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007002454_ceehesdkb\\\"\"}",
          "timestamp": "2025-09-04T17:30:02.635Z"
        }
      },
      {
        "file": "frontend/src/utils/iaAgentReporter.js",
        "line": 251,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 249,
            "code": "const { data: documents } = await supabase",
            "current": false
          },
          {
            "line": 250,
            "code": ".from('generated_documents')",
            "current": false
          },
          {
            "line": 251,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 252,
            "code": ".order('created_at', { ascending: false })",
            "current": false
          },
          {
            "line": 253,
            "code": ".limit(50);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/iaAgentReporter.js",
        "line": 412,
        "code": ".from('ia_agent_reports')",
        "type": "OTHER",
        "table": "ia_agent_reports",
        "operation": "OTHER",
        "context": [
          {
            "line": 410,
            "code": "try {",
            "current": false
          },
          {
            "line": 411,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 412,
            "code": ".from('ia_agent_reports')",
            "current": true
          },
          {
            "line": 413,
            "code": ".insert({",
            "current": false
          },
          {
            "line": 414,
            "code": "report_id: this.reportId,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "ia_agent_reports",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007017329_thhlma4c5\\\"\"}",
          "timestamp": "2025-09-04T17:30:17.514Z"
        }
      },
      {
        "file": "frontend/src/utils/iaAgentReporter.js",
        "line": 413,
        "code": ".insert({",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 411,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 412,
            "code": ".from('ia_agent_reports')",
            "current": false
          },
          {
            "line": 413,
            "code": ".insert({",
            "current": true
          },
          {
            "line": 414,
            "code": "report_id: this.reportId,",
            "current": false
          },
          {
            "line": 415,
            "code": "report_data: report,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/index.js",
        "line": 8,
        "code": "import smartSupabase, { getSmartSupabaseStats, logSupabaseActivity } from './smartSupabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 6,
            "code": "",
            "current": false
          },
          {
            "line": 7,
            "code": "// Importar todos los sistemas de prevenci√≥n",
            "current": false
          },
          {
            "line": 8,
            "code": "import smartSupabase, { getSmartSupabaseStats, logSupabaseActivity } from './smartSupabaseClient';",
            "current": true
          },
          {
            "line": 9,
            "code": "import rlsGuard, { safeSupabaseQuery, validateSupabaseQuery, getSupabasePermissions } from './supabaseRLSGuard';",
            "current": false
          },
          {
            "line": 10,
            "code": "import errorMonitor, { getErrorPreventionReport, preventSupabaseError, isMonitorActive } from './errorPreventionMonitor';",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/index.js",
        "line": 177,
        "code": "await smartSupabase.from('organizaciones').select('id').limit(1);",
        "type": "SELECT",
        "table": "organizaciones",
        "operation": "READ",
        "context": [
          {
            "line": 175,
            "code": "try {",
            "current": false
          },
          {
            "line": 176,
            "code": "// Test b√°sico del cliente inteligente",
            "current": false
          },
          {
            "line": 177,
            "code": "await smartSupabase.from('organizaciones').select('id').limit(1);",
            "current": true
          },
          {
            "line": 178,
            "code": "return { passed: true, message: 'Smart client funcionando' };",
            "current": false
          },
          {
            "line": 179,
            "code": "} catch (error) {",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 8,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 6,
            "code": "*/",
            "current": false
          },
          {
            "line": 7,
            "code": "",
            "current": false
          },
          {
            "line": 8,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 9,
            "code": "",
            "current": false
          },
          {
            "line": 10,
            "code": "class InstantSystemTest {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 78,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 76,
            "code": "// Test conexi√≥n",
            "current": false
          },
          {
            "line": 77,
            "code": "const { data: connTest } = await supabase",
            "current": false
          },
          {
            "line": 78,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 79,
            "code": ".select('count', { count: 'exact', head: true });",
            "current": false
          },
          {
            "line": 80,
            "code": "",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 79,
        "code": ".select('count', { count: 'exact', head: true });",
        "type": "SELECT",
        "table": "count",
        "operation": "READ",
        "context": [
          {
            "line": 77,
            "code": "const { data: connTest } = await supabase",
            "current": false
          },
          {
            "line": 78,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 79,
            "code": ".select('count', { count: 'exact', head: true });",
            "current": true
          },
          {
            "line": 80,
            "code": "",
            "current": false
          },
          {
            "line": 81,
            "code": "test.connection = '‚úÖ Conectado';",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "count",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":\"Perhaps you meant the table 'public.consents'\",\"message\":\"Could not find the table 'public.count' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:05.082Z"
        }
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 90,
        "code": ".from(table)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 88,
            "code": "try {",
            "current": false
          },
          {
            "line": 89,
            "code": "const { count } = await supabase",
            "current": false
          },
          {
            "line": 90,
            "code": ".from(table)",
            "current": true
          },
          {
            "line": 91,
            "code": ".select('*', { count: 'exact', head: true });",
            "current": false
          },
          {
            "line": 92,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 91,
        "code": ".select('*', { count: 'exact', head: true });",
        "type": "SELECT",
        "table": "exact",
        "operation": "READ",
        "context": [
          {
            "line": 89,
            "code": "const { count } = await supabase",
            "current": false
          },
          {
            "line": 90,
            "code": ".from(table)",
            "current": false
          },
          {
            "line": 91,
            "code": ".select('*', { count: 'exact', head: true });",
            "current": true
          },
          {
            "line": 92,
            "code": "",
            "current": false
          },
          {
            "line": 93,
            "code": "test.tables[table] = `‚úÖ ${count || 0} registros`;",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "exact",
          "error": "INSERT failed: 404 - {\"code\":\"PGRST205\",\"details\":null,\"hint\":null,\"message\":\"Could not find the table 'public.exact' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:08.587Z"
        }
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 102,
        "code": ".from('rats')",
        "type": "OTHER",
        "table": "rats",
        "operation": "OTHER",
        "context": [
          {
            "line": 100,
            "code": "// Test integridad",
            "current": false
          },
          {
            "line": 101,
            "code": "const { data: rats } = await supabase",
            "current": false
          },
          {
            "line": 102,
            "code": ".from('rats')",
            "current": true
          },
          {
            "line": 103,
            "code": ".select('id, organizacion_id')",
            "current": false
          },
          {
            "line": 104,
            "code": ".not('organizacion_id', 'is', null)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "rats",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007011096_g78awpgwo\\\"\"}",
          "timestamp": "2025-09-04T17:30:11.298Z"
        }
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 103,
        "code": ".select('id, organizacion_id')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 101,
            "code": "const { data: rats } = await supabase",
            "current": false
          },
          {
            "line": 102,
            "code": ".from('rats')",
            "current": false
          },
          {
            "line": 103,
            "code": ".select('id, organizacion_id')",
            "current": true
          },
          {
            "line": 104,
            "code": ".not('organizacion_id', 'is', null)",
            "current": false
          },
          {
            "line": 105,
            "code": ".limit(5);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 111,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 109,
            "code": "for (const rat of rats) {",
            "current": false
          },
          {
            "line": 110,
            "code": "const { data: org } = await supabase",
            "current": false
          },
          {
            "line": 111,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 112,
            "code": ".select('id')",
            "current": false
          },
          {
            "line": 113,
            "code": ".eq('id', rat.organizacion_id)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 112,
        "code": ".select('id')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 110,
            "code": "const { data: org } = await supabase",
            "current": false
          },
          {
            "line": 111,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 112,
            "code": ".select('id')",
            "current": true
          },
          {
            "line": 113,
            "code": ".eq('id', rat.organizacion_id)",
            "current": false
          },
          {
            "line": 114,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 156,
        "code": "const linkExists = Array.from(navElements).some(",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 154,
            "code": "",
            "current": false
          },
          {
            "line": 155,
            "code": "for (const route of expectedRoutes) {",
            "current": false
          },
          {
            "line": 156,
            "code": "const linkExists = Array.from(navElements).some(",
            "current": true
          },
          {
            "line": 157,
            "code": "link => link.getAttribute('href')?.includes(route.path)",
            "current": false
          },
          {
            "line": 158,
            "code": ");",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 264,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 262,
            "code": "",
            "current": false
          },
          {
            "line": 263,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 264,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 265,
            "code": ".insert(testOrg)",
            "current": false
          },
          {
            "line": 266,
            "code": ".select('id')",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 265,
        "code": ".insert(testOrg)",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 263,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 264,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 265,
            "code": ".insert(testOrg)",
            "current": true
          },
          {
            "line": 266,
            "code": ".select('id')",
            "current": false
          },
          {
            "line": 267,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 266,
        "code": ".select('id')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 264,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 265,
            "code": ".insert(testOrg)",
            "current": false
          },
          {
            "line": 266,
            "code": ".select('id')",
            "current": true
          },
          {
            "line": 267,
            "code": ".single();",
            "current": false
          },
          {
            "line": 268,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 282,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 280,
            "code": "try {",
            "current": false
          },
          {
            "line": 281,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 282,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 283,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 284,
            "code": ".eq('id', recordId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 283,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 281,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 282,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 283,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 284,
            "code": ".eq('id', recordId)",
            "current": false
          },
          {
            "line": 285,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 300,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 298,
            "code": "try {",
            "current": false
          },
          {
            "line": 299,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 300,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 301,
            "code": ".update({ razon_social: 'Updated Test Organization' })",
            "current": false
          },
          {
            "line": 302,
            "code": ".eq('id', recordId);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 301,
        "code": ".update({ razon_social: 'Updated Test Organization' })",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 299,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 300,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 301,
            "code": ".update({ razon_social: 'Updated Test Organization' })",
            "current": true
          },
          {
            "line": 302,
            "code": ".eq('id', recordId);",
            "current": false
          },
          {
            "line": 303,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 317,
        "code": ".from('organizaciones')",
        "type": "OTHER",
        "table": "organizaciones",
        "operation": "OTHER",
        "context": [
          {
            "line": 315,
            "code": "try {",
            "current": false
          },
          {
            "line": 316,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 317,
            "code": ".from('organizaciones')",
            "current": true
          },
          {
            "line": 318,
            "code": ".delete()",
            "current": false
          },
          {
            "line": 319,
            "code": ".eq('id', recordId);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 318,
        "code": ".delete()",
        "type": "DELETE",
        "table": "UNKNOWN",
        "operation": "DELETE",
        "context": [
          {
            "line": 316,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 317,
            "code": ".from('organizaciones')",
            "current": false
          },
          {
            "line": 318,
            "code": ".delete()",
            "current": true
          },
          {
            "line": 319,
            "code": ".eq('id', recordId);",
            "current": false
          },
          {
            "line": 320,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/instantSystemTest.js",
        "line": 374,
        "code": "await supabase.from('organizaciones').select('count', { count: 'exact', head: true });",
        "type": "SELECT",
        "table": "organizaciones",
        "operation": "READ",
        "context": [
          {
            "line": 372,
            "code": "// Test tiempo de respuesta DB",
            "current": false
          },
          {
            "line": 373,
            "code": "const dbStart = performance.now();",
            "current": false
          },
          {
            "line": 374,
            "code": "await supabase.from('organizaciones').select('count', { count: 'exact', head: true });",
            "current": true
          },
          {
            "line": 375,
            "code": "const dbTime = performance.now() - dbStart;",
            "current": false
          },
          {
            "line": 376,
            "code": "",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "organizaciones",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006997030_jba74chyu\\\"\"}",
          "timestamp": "2025-09-04T17:29:57.226Z"
        }
      },
      {
        "file": "frontend/src/utils/interactiveHelper.js",
        "line": 4,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 2,
            "code": "import { Tooltip, Alert, Snackbar, Dialog, DialogTitle, DialogContent, IconButton } from '@mui/material';",
            "current": false
          },
          {
            "line": 3,
            "code": "import { Help, LightbulbOutlined, WarningAmber, CheckCircle } from '@mui/icons-material';",
            "current": false
          },
          {
            "line": 4,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 5,
            "code": "",
            "current": false
          },
          {
            "line": 6,
            "code": "const HelpContext = createContext();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/interactiveHelper.js",
        "line": 26,
        "code": ".from('help_content')",
        "type": "OTHER",
        "table": "help_content",
        "operation": "OTHER",
        "context": [
          {
            "line": 24,
            "code": "try {",
            "current": false
          },
          {
            "line": 25,
            "code": "const { data: content, error } = await supabase",
            "current": false
          },
          {
            "line": 26,
            "code": ".from('help_content')",
            "current": true
          },
          {
            "line": 27,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 28,
            "code": ".eq('active', true);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "help_content",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007017715_tj6wa47fi\\\"\"}",
          "timestamp": "2025-09-04T17:30:17.919Z"
        }
      },
      {
        "file": "frontend/src/utils/interactiveHelper.js",
        "line": 27,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 25,
            "code": "const { data: content, error } = await supabase",
            "current": false
          },
          {
            "line": 26,
            "code": ".from('help_content')",
            "current": false
          },
          {
            "line": 27,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 28,
            "code": ".eq('active', true);",
            "current": false
          },
          {
            "line": 29,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/interactiveHelper.js",
        "line": 109,
        "code": ".from('help_usage_log')",
        "type": "OTHER",
        "table": "help_usage_log",
        "operation": "OTHER",
        "context": [
          {
            "line": 107,
            "code": "try {",
            "current": false
          },
          {
            "line": 108,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 109,
            "code": ".from('help_usage_log')",
            "current": true
          },
          {
            "line": 110,
            "code": ".insert({",
            "current": false
          },
          {
            "line": 111,
            "code": "field_id: fieldId,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "help_usage_log",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007018120_wg1mcd8kj\\\"\"}",
          "timestamp": "2025-09-04T17:30:18.303Z"
        }
      },
      {
        "file": "frontend/src/utils/interactiveHelper.js",
        "line": 110,
        "code": ".insert({",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 108,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 109,
            "code": ".from('help_usage_log')",
            "current": false
          },
          {
            "line": 110,
            "code": ".insert({",
            "current": true
          },
          {
            "line": 111,
            "code": "field_id: fieldId,",
            "current": false
          },
          {
            "line": 112,
            "code": "user_id: userId,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/interactiveHelper.js",
        "line": 140,
        "code": ".from('field_progress')",
        "type": "OTHER",
        "table": "field_progress",
        "operation": "OTHER",
        "context": [
          {
            "line": 138,
            "code": "try {",
            "current": false
          },
          {
            "line": 139,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 140,
            "code": ".from('field_progress')",
            "current": true
          },
          {
            "line": 141,
            "code": ".upsert({",
            "current": false
          },
          {
            "line": 142,
            "code": "field_id: fieldId,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "field_progress",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007018504_mv9owvmud\\\"\"}",
          "timestamp": "2025-09-04T17:30:18.728Z"
        }
      },
      {
        "file": "frontend/src/utils/interactiveHelper.js",
        "line": 141,
        "code": ".upsert({",
        "type": "UPSERT",
        "table": "UNKNOWN",
        "operation": "UPSERT",
        "context": [
          {
            "line": 139,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 140,
            "code": ".from('field_progress')",
            "current": false
          },
          {
            "line": 141,
            "code": ".upsert({",
            "current": true
          },
          {
            "line": 142,
            "code": "field_id: fieldId,",
            "current": false
          },
          {
            "line": 143,
            "code": "user_id: userId,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/interactiveHelper.js",
        "line": 156,
        "code": ".from('user_help_stats')",
        "type": "OTHER",
        "table": "user_help_stats",
        "operation": "OTHER",
        "context": [
          {
            "line": 154,
            "code": "try {",
            "current": false
          },
          {
            "line": 155,
            "code": "const { data: userStats, error } = await supabase",
            "current": false
          },
          {
            "line": 156,
            "code": ".from('user_help_stats')",
            "current": true
          },
          {
            "line": 157,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 158,
            "code": ".eq('user_id', userId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "user_help_stats",
          "error": "INSERT failed: 400 - {\"code\":\"PGRST204\",\"details\":null,\"hint\":null,\"message\":\"Could not find the 'empresa_id' column of 'user_help_stats' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:19.112Z"
        }
      },
      {
        "file": "frontend/src/utils/interactiveHelper.js",
        "line": 157,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 155,
            "code": "const { data: userStats, error } = await supabase",
            "current": false
          },
          {
            "line": 156,
            "code": ".from('user_help_stats')",
            "current": false
          },
          {
            "line": 157,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 158,
            "code": ".eq('user_id', userId)",
            "current": false
          },
          {
            "line": 159,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/interactiveHelper.js",
        "line": 222,
        "code": ".from('user_help_stats')",
        "type": "OTHER",
        "table": "user_help_stats",
        "operation": "OTHER",
        "context": [
          {
            "line": 220,
            "code": "try {",
            "current": false
          },
          {
            "line": 221,
            "code": "const { data: existing, error: fetchError } = await supabase",
            "current": false
          },
          {
            "line": 222,
            "code": ".from('user_help_stats')",
            "current": true
          },
          {
            "line": 223,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 224,
            "code": ".eq('user_id', userId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "user_help_stats",
          "error": "INSERT failed: 400 - {\"code\":\"PGRST204\",\"details\":null,\"hint\":null,\"message\":\"Could not find the 'empresa_id' column of 'user_help_stats' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:19.112Z"
        }
      },
      {
        "file": "frontend/src/utils/interactiveHelper.js",
        "line": 223,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 221,
            "code": "const { data: existing, error: fetchError } = await supabase",
            "current": false
          },
          {
            "line": 222,
            "code": ".from('user_help_stats')",
            "current": false
          },
          {
            "line": 223,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 224,
            "code": ".eq('user_id', userId)",
            "current": false
          },
          {
            "line": 225,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/interactiveHelper.js",
        "line": 250,
        "code": ".from('user_help_stats')",
        "type": "OTHER",
        "table": "user_help_stats",
        "operation": "OTHER",
        "context": [
          {
            "line": 248,
            "code": "",
            "current": false
          },
          {
            "line": 249,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 250,
            "code": ".from('user_help_stats')",
            "current": true
          },
          {
            "line": 251,
            "code": ".upsert(updateData);",
            "current": false
          },
          {
            "line": 252,
            "code": "",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "user_help_stats",
          "error": "INSERT failed: 400 - {\"code\":\"PGRST204\",\"details\":null,\"hint\":null,\"message\":\"Could not find the 'empresa_id' column of 'user_help_stats' in the schema cache\"}",
          "timestamp": "2025-09-04T17:30:19.112Z"
        }
      },
      {
        "file": "frontend/src/utils/interactiveHelper.js",
        "line": 251,
        "code": ".upsert(updateData);",
        "type": "UPSERT",
        "table": "UNKNOWN",
        "operation": "UPSERT",
        "context": [
          {
            "line": 249,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 250,
            "code": ".from('user_help_stats')",
            "current": false
          },
          {
            "line": 251,
            "code": ".upsert(updateData);",
            "current": true
          },
          {
            "line": 252,
            "code": "",
            "current": false
          },
          {
            "line": 253,
            "code": "if (error) throw error;",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/interactiveHelper.js",
        "line": 582,
        "code": ".from('completion_templates')",
        "type": "OTHER",
        "table": "completion_templates",
        "operation": "OTHER",
        "context": [
          {
            "line": 580,
            "code": "try {",
            "current": false
          },
          {
            "line": 581,
            "code": "const { data: templates, error } = await supabase",
            "current": false
          },
          {
            "line": 582,
            "code": ".from('completion_templates')",
            "current": true
          },
          {
            "line": 583,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 584,
            "code": ".eq('active', true);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "completion_templates",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007021116_mmtvwa46o\\\"\"}",
          "timestamp": "2025-09-04T17:30:21.293Z"
        }
      },
      {
        "file": "frontend/src/utils/interactiveHelper.js",
        "line": 583,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 581,
            "code": "const { data: templates, error } = await supabase",
            "current": false
          },
          {
            "line": 582,
            "code": ".from('completion_templates')",
            "current": false
          },
          {
            "line": 583,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 584,
            "code": ".eq('active', true);",
            "current": false
          },
          {
            "line": 585,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/interactiveHelper.js",
        "line": 620,
        "code": ".from('completion_log')",
        "type": "OTHER",
        "table": "completion_log",
        "operation": "OTHER",
        "context": [
          {
            "line": 618,
            "code": "try {",
            "current": false
          },
          {
            "line": 619,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 620,
            "code": ".from('completion_log')",
            "current": true
          },
          {
            "line": 621,
            "code": ".insert({",
            "current": false
          },
          {
            "line": 622,
            "code": "field_id: fieldId,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "completion_log",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007021493_6u0ek2i71\\\"\"}",
          "timestamp": "2025-09-04T17:30:21.668Z"
        }
      },
      {
        "file": "frontend/src/utils/interactiveHelper.js",
        "line": 621,
        "code": ".insert({",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 619,
            "code": "await supabase",
            "current": false
          },
          {
            "line": 620,
            "code": ".from('completion_log')",
            "current": false
          },
          {
            "line": 621,
            "code": ".insert({",
            "current": true
          },
          {
            "line": 622,
            "code": "field_id: fieldId,",
            "current": false
          },
          {
            "line": 623,
            "code": "final_value: finalValue,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 2,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 1,
            "code": "// üîç IA AUDITOR L√ìGICO - VALIDADOR AUTOM√ÅTICO DE PROCESOS Y SECUENCIAS",
            "current": false
          },
          {
            "line": 2,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 3,
            "code": "",
            "current": false
          },
          {
            "line": 4,
            "code": "class LogicAuditor {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 189,
        "code": "supabase.from('mapeo_datos_rat').select('id', { count: 'exact' }).eq('tenant_id', tenantId),",
        "type": "SELECT",
        "table": "mapeo_datos_rat",
        "operation": "READ",
        "context": [
          {
            "line": 187,
            "code": "try {",
            "current": false
          },
          {
            "line": 188,
            "code": "const [rats, eipds, tasks, inventory] = await Promise.all([",
            "current": false
          },
          {
            "line": 189,
            "code": "supabase.from('mapeo_datos_rat').select('id', { count: 'exact' }).eq('tenant_id', tenantId),",
            "current": true
          },
          {
            "line": 190,
            "code": "supabase.from('generated_documents').select('id', { count: 'exact' }).eq('document_type', 'EIPD'),",
            "current": false
          },
          {
            "line": 191,
            "code": "supabase.from('actividades_dpo').select('id', { count: 'exact' }).eq('tenant_id', tenantId),",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 190,
        "code": "supabase.from('generated_documents').select('id', { count: 'exact' }).eq('document_type', 'EIPD'),",
        "type": "SELECT",
        "table": "generated_documents",
        "operation": "READ",
        "context": [
          {
            "line": 188,
            "code": "const [rats, eipds, tasks, inventory] = await Promise.all([",
            "current": false
          },
          {
            "line": 189,
            "code": "supabase.from('mapeo_datos_rat').select('id', { count: 'exact' }).eq('tenant_id', tenantId),",
            "current": false
          },
          {
            "line": 190,
            "code": "supabase.from('generated_documents').select('id', { count: 'exact' }).eq('document_type', 'EIPD'),",
            "current": true
          },
          {
            "line": 191,
            "code": "supabase.from('actividades_dpo').select('id', { count: 'exact' }).eq('tenant_id', tenantId),",
            "current": false
          },
          {
            "line": 192,
            "code": "supabase.from('mapeo_datos_rat').select('id', { count: 'exact' }).eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "generated_documents",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007002454_ceehesdkb\\\"\"}",
          "timestamp": "2025-09-04T17:30:02.635Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 191,
        "code": "supabase.from('actividades_dpo').select('id', { count: 'exact' }).eq('tenant_id', tenantId),",
        "type": "SELECT",
        "table": "actividades_dpo",
        "operation": "READ",
        "context": [
          {
            "line": 189,
            "code": "supabase.from('mapeo_datos_rat').select('id', { count: 'exact' }).eq('tenant_id', tenantId),",
            "current": false
          },
          {
            "line": 190,
            "code": "supabase.from('generated_documents').select('id', { count: 'exact' }).eq('document_type', 'EIPD'),",
            "current": false
          },
          {
            "line": 191,
            "code": "supabase.from('actividades_dpo').select('id', { count: 'exact' }).eq('tenant_id', tenantId),",
            "current": true
          },
          {
            "line": 192,
            "code": "supabase.from('mapeo_datos_rat').select('id', { count: 'exact' }).eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 193,
            "code": "]);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 192,
        "code": "supabase.from('mapeo_datos_rat').select('id', { count: 'exact' }).eq('tenant_id', tenantId)",
        "type": "SELECT",
        "table": "mapeo_datos_rat",
        "operation": "READ",
        "context": [
          {
            "line": 190,
            "code": "supabase.from('generated_documents').select('id', { count: 'exact' }).eq('document_type', 'EIPD'),",
            "current": false
          },
          {
            "line": 191,
            "code": "supabase.from('actividades_dpo').select('id', { count: 'exact' }).eq('tenant_id', tenantId),",
            "current": false
          },
          {
            "line": 192,
            "code": "supabase.from('mapeo_datos_rat').select('id', { count: 'exact' }).eq('tenant_id', tenantId)",
            "current": true
          },
          {
            "line": 193,
            "code": "]);",
            "current": false
          },
          {
            "line": 194,
            "code": "",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 211,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 209,
            "code": "async getRATsByRisk(tenantId, riskLevel) {",
            "current": false
          },
          {
            "line": 210,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 211,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 212,
            "code": ".select('id, nombre_actividad, nivel_riesgo, estado')",
            "current": false
          },
          {
            "line": 213,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 212,
        "code": ".select('id, nombre_actividad, nivel_riesgo, estado')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 210,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 211,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 212,
            "code": ".select('id, nombre_actividad, nivel_riesgo, estado')",
            "current": true
          },
          {
            "line": 213,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 214,
            "code": ".eq('nivel_riesgo', riskLevel)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 225,
        "code": ".from('generated_documents')",
        "type": "OTHER",
        "table": "generated_documents",
        "operation": "OTHER",
        "context": [
          {
            "line": 223,
            "code": "",
            "current": false
          },
          {
            "line": 224,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 225,
            "code": ".from('generated_documents')",
            "current": true
          },
          {
            "line": 226,
            "code": ".select('id, source_rat_id, status, title')",
            "current": false
          },
          {
            "line": 227,
            "code": ".eq('document_type', 'EIPD')",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "generated_documents",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007002454_ceehesdkb\\\"\"}",
          "timestamp": "2025-09-04T17:30:02.635Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 226,
        "code": ".select('id, source_rat_id, status, title')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 224,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 225,
            "code": ".from('generated_documents')",
            "current": false
          },
          {
            "line": 226,
            "code": ".select('id, source_rat_id, status, title')",
            "current": true
          },
          {
            "line": 227,
            "code": ".eq('document_type', 'EIPD')",
            "current": false
          },
          {
            "line": 228,
            "code": ".in('source_rat_id', ratIds);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 236,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 234,
            "code": "async getAllRATs(tenantId) {",
            "current": false
          },
          {
            "line": 235,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 236,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 237,
            "code": ".select('id, nombre_actividad, estado')",
            "current": false
          },
          {
            "line": 238,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 237,
        "code": ".select('id, nombre_actividad, estado')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 235,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 236,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 237,
            "code": ".select('id, nombre_actividad, estado')",
            "current": true
          },
          {
            "line": 238,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 239,
            "code": ".neq('estado', 'ELIMINADO');",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 247,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 245,
            "code": "async getInventarioRATs(tenantId) {",
            "current": false
          },
          {
            "line": 246,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 247,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 248,
            "code": ".select('id, estado')",
            "current": false
          },
          {
            "line": 249,
            "code": ".eq('tenant_id', tenantId);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 248,
        "code": ".select('id, estado')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 246,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 247,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 248,
            "code": ".select('id, estado')",
            "current": true
          },
          {
            "line": 249,
            "code": ".eq('tenant_id', tenantId);",
            "current": false
          },
          {
            "line": 250,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 257,
        "code": ".from('generated_documents')",
        "type": "OTHER",
        "table": "generated_documents",
        "operation": "OTHER",
        "context": [
          {
            "line": 255,
            "code": "async getEIPDs(tenantId) {",
            "current": false
          },
          {
            "line": 256,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 257,
            "code": ".from('generated_documents')",
            "current": true
          },
          {
            "line": 258,
            "code": ".select('id, source_rat_id, status, title')",
            "current": false
          },
          {
            "line": 259,
            "code": ".eq('document_type', 'EIPD');",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "generated_documents",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007002454_ceehesdkb\\\"\"}",
          "timestamp": "2025-09-04T17:30:02.635Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 258,
        "code": ".select('id, source_rat_id, status, title')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 256,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 257,
            "code": ".from('generated_documents')",
            "current": false
          },
          {
            "line": 258,
            "code": ".select('id, source_rat_id, status, title')",
            "current": true
          },
          {
            "line": 259,
            "code": ".eq('document_type', 'EIPD');",
            "current": false
          },
          {
            "line": 260,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 267,
        "code": ".from('actividades_dpo')",
        "type": "OTHER",
        "table": "actividades_dpo",
        "operation": "OTHER",
        "context": [
          {
            "line": 265,
            "code": "async getDPOTasksByEIPD(tenantId, eipdId) {",
            "current": false
          },
          {
            "line": 266,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 267,
            "code": ".from('actividades_dpo')",
            "current": true
          },
          {
            "line": 268,
            "code": ".select('id, descripcion, estado')",
            "current": false
          },
          {
            "line": 269,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 268,
        "code": ".select('id, descripcion, estado')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 266,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 267,
            "code": ".from('actividades_dpo')",
            "current": false
          },
          {
            "line": 268,
            "code": ".select('id, descripcion, estado')",
            "current": true
          },
          {
            "line": 269,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 270,
            "code": ".like('descripcion', `%${eipdId}%`);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 278,
        "code": ".from('actividades_dpo')",
        "type": "OTHER",
        "table": "actividades_dpo",
        "operation": "OTHER",
        "context": [
          {
            "line": 276,
            "code": "async getDPOPendingTasks(tenantId) {",
            "current": false
          },
          {
            "line": 277,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 278,
            "code": ".from('actividades_dpo')",
            "current": true
          },
          {
            "line": 279,
            "code": ".select('id, rat_id, descripcion, estado')",
            "current": false
          },
          {
            "line": 280,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 279,
        "code": ".select('id, rat_id, descripcion, estado')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 277,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 278,
            "code": ".from('actividades_dpo')",
            "current": false
          },
          {
            "line": 279,
            "code": ".select('id, rat_id, descripcion, estado')",
            "current": true
          },
          {
            "line": 280,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 281,
            "code": ".eq('estado', 'pendiente');",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 289,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 287,
            "code": "async checkRATExists(tenantId, ratId) {",
            "current": false
          },
          {
            "line": 288,
            "code": "const { count, error } = await supabase",
            "current": false
          },
          {
            "line": 289,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 290,
            "code": ".select('id', { count: 'exact' })",
            "current": false
          },
          {
            "line": 291,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 290,
        "code": ".select('id', { count: 'exact' })",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 288,
            "code": "const { count, error } = await supabase",
            "current": false
          },
          {
            "line": 289,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 290,
            "code": ".select('id', { count: 'exact' })",
            "current": true
          },
          {
            "line": 291,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 292,
            "code": ".eq('id', ratId)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 393,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 391,
            "code": "try {",
            "current": false
          },
          {
            "line": 392,
            "code": "const { data: rat } = await supabase",
            "current": false
          },
          {
            "line": 393,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 394,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 395,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 394,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 392,
            "code": "const { data: rat } = await supabase",
            "current": false
          },
          {
            "line": 393,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 394,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 395,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 396,
            "code": ".eq('id', ratId)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 417,
        "code": ".from('generated_documents')",
        "type": "OTHER",
        "table": "generated_documents",
        "operation": "OTHER",
        "context": [
          {
            "line": 415,
            "code": "",
            "current": false
          },
          {
            "line": 416,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 417,
            "code": ".from('generated_documents')",
            "current": true
          },
          {
            "line": 418,
            "code": ".insert(eipdData)",
            "current": false
          },
          {
            "line": 419,
            "code": ".select()",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "generated_documents",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007002454_ceehesdkb\\\"\"}",
          "timestamp": "2025-09-04T17:30:02.635Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 418,
        "code": ".insert(eipdData)",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 416,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 417,
            "code": ".from('generated_documents')",
            "current": false
          },
          {
            "line": 418,
            "code": ".insert(eipdData)",
            "current": true
          },
          {
            "line": 419,
            "code": ".select()",
            "current": false
          },
          {
            "line": 420,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 419,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 417,
            "code": ".from('generated_documents')",
            "current": false
          },
          {
            "line": 418,
            "code": ".insert(eipdData)",
            "current": false
          },
          {
            "line": 419,
            "code": ".select()",
            "current": true
          },
          {
            "line": 420,
            "code": ".single();",
            "current": false
          },
          {
            "line": 421,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 435,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 433,
            "code": "try {",
            "current": false
          },
          {
            "line": 434,
            "code": "const { data: rat } = await supabase",
            "current": false
          },
          {
            "line": 435,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 436,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 437,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 436,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 434,
            "code": "const { data: rat } = await supabase",
            "current": false
          },
          {
            "line": 435,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 436,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 437,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 438,
            "code": ".eq('id', ratId)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 457,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 455,
            "code": "",
            "current": false
          },
          {
            "line": 456,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 457,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 458,
            "code": ".update({",
            "current": false
          },
          {
            "line": 459,
            "code": "metadata: {",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 458,
        "code": ".update({",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 456,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 457,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 458,
            "code": ".update({",
            "current": true
          },
          {
            "line": 459,
            "code": "metadata: {",
            "current": false
          },
          {
            "line": 460,
            "code": "...inventarioEntry.metadata,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 465,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 463,
            "code": "})",
            "current": false
          },
          {
            "line": 464,
            "code": ".eq('id', inventarioEntry.rat_id)",
            "current": false
          },
          {
            "line": 465,
            "code": ".select()",
            "current": true
          },
          {
            "line": 466,
            "code": ".single();",
            "current": false
          },
          {
            "line": 467,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 481,
        "code": ".from('actividades_dpo')",
        "type": "OTHER",
        "table": "actividades_dpo",
        "operation": "OTHER",
        "context": [
          {
            "line": 479,
            "code": "try {",
            "current": false
          },
          {
            "line": 480,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 481,
            "code": ".from('actividades_dpo')",
            "current": true
          },
          {
            "line": 482,
            "code": ".update({",
            "current": false
          },
          {
            "line": 483,
            "code": "estado: 'OBSOLETA',",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 482,
        "code": ".update({",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 480,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 481,
            "code": ".from('actividades_dpo')",
            "current": false
          },
          {
            "line": 482,
            "code": ".update({",
            "current": true
          },
          {
            "line": 483,
            "code": "estado: 'OBSOLETA',",
            "current": false
          },
          {
            "line": 484,
            "code": "updated_at: new Date().toISOString(),",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 492,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 490,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 491,
            "code": ".eq('id', taskId)",
            "current": false
          },
          {
            "line": 492,
            "code": ".select()",
            "current": true
          },
          {
            "line": 493,
            "code": ".single();",
            "current": false
          },
          {
            "line": 494,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 510,
        "code": ".from('ia_agent_reports')",
        "type": "OTHER",
        "table": "ia_agent_reports",
        "operation": "OTHER",
        "context": [
          {
            "line": 508,
            "code": "// Usar tabla real ia_agent_reports en lugar de vista audit_reports",
            "current": false
          },
          {
            "line": 509,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 510,
            "code": ".from('ia_agent_reports')",
            "current": true
          },
          {
            "line": 511,
            "code": ".insert({",
            "current": false
          },
          {
            "line": 512,
            "code": "report_id: `AUDIT_${Date.now()}`,",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "ia_agent_reports",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007017329_thhlma4c5\\\"\"}",
          "timestamp": "2025-09-04T17:30:17.514Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 511,
        "code": ".insert({",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 509,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 510,
            "code": ".from('ia_agent_reports')",
            "current": false
          },
          {
            "line": 511,
            "code": ".insert({",
            "current": true
          },
          {
            "line": 512,
            "code": "report_id: `AUDIT_${Date.now()}`,",
            "current": false
          },
          {
            "line": 513,
            "code": "report_type: 'LOGIC_AUDIT',",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 523,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 521,
            "code": "created_at: auditReport.timestamp",
            "current": false
          },
          {
            "line": 522,
            "code": "})",
            "current": false
          },
          {
            "line": 523,
            "code": ".select()",
            "current": true
          },
          {
            "line": 524,
            "code": ".single();",
            "current": false
          },
          {
            "line": 525,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 614,
        "code": ".from('mapeo_datos_rat')",
        "type": "OTHER",
        "table": "mapeo_datos_rat",
        "operation": "OTHER",
        "context": [
          {
            "line": 612,
            "code": "async getRATById(tenantId, ratId) {",
            "current": false
          },
          {
            "line": 613,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 614,
            "code": ".from('mapeo_datos_rat')",
            "current": true
          },
          {
            "line": 615,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 616,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "mapeo_datos_rat",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998974_uqpbck15n\\\"\"}",
          "timestamp": "2025-09-04T17:29:59.159Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 615,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 613,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 614,
            "code": ".from('mapeo_datos_rat')",
            "current": false
          },
          {
            "line": 615,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 616,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 617,
            "code": ".eq('id', ratId)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 626,
        "code": ".from('actividades_dpo')",
        "type": "OTHER",
        "table": "actividades_dpo",
        "operation": "OTHER",
        "context": [
          {
            "line": 624,
            "code": "async getDPOTasksByRAT(tenantId, ratId) {",
            "current": false
          },
          {
            "line": 625,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 626,
            "code": ".from('actividades_dpo')",
            "current": true
          },
          {
            "line": 627,
            "code": ".select('id, descripcion, estado')",
            "current": false
          },
          {
            "line": 628,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "actividades_dpo",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757006998215_1dfvdwngc\\\"\"}",
          "timestamp": "2025-09-04T17:29:58.392Z"
        }
      },
      {
        "file": "frontend/src/utils/logicAuditor.js",
        "line": 627,
        "code": ".select('id, descripcion, estado')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 625,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 626,
            "code": ".from('actividades_dpo')",
            "current": false
          },
          {
            "line": 627,
            "code": ".select('id, descripcion, estado')",
            "current": true
          },
          {
            "line": 628,
            "code": ".eq('tenant_id', tenantId)",
            "current": false
          },
          {
            "line": 629,
            "code": ".eq('rat_id', ratId);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/rateLimiter.js",
        "line": 82,
        "code": "this.blocked.delete(key);",
        "type": "DELETE",
        "table": "UNKNOWN",
        "operation": "DELETE",
        "context": [
          {
            "line": 80,
            "code": "",
            "current": false
          },
          {
            "line": 81,
            "code": "if (now - blockTime > this.config.blockDuration) {",
            "current": false
          },
          {
            "line": 82,
            "code": "this.blocked.delete(key);",
            "current": true
          },
          {
            "line": 83,
            "code": "return false;",
            "current": false
          },
          {
            "line": 84,
            "code": "}",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/rateLimiter.js",
        "line": 131,
        "code": "this.requestCounts.delete(key);",
        "type": "DELETE",
        "table": "UNKNOWN",
        "operation": "DELETE",
        "context": [
          {
            "line": 129,
            "code": "const keyMinute = parseInt(key.split(':').pop());",
            "current": false
          },
          {
            "line": 130,
            "code": "if (currentMinute - keyMinute > 5) {",
            "current": false
          },
          {
            "line": 131,
            "code": "this.requestCounts.delete(key);",
            "current": true
          },
          {
            "line": 132,
            "code": "}",
            "current": false
          },
          {
            "line": 133,
            "code": "}",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/rateLimiter.js",
        "line": 158,
        "code": "this.attempts.delete(compositeKey);",
        "type": "DELETE",
        "table": "UNKNOWN",
        "operation": "DELETE",
        "context": [
          {
            "line": 156,
            "code": "clearAttempts(key, action = 'default') {",
            "current": false
          },
          {
            "line": 157,
            "code": "const compositeKey = `${key}:${action}`;",
            "current": false
          },
          {
            "line": 158,
            "code": "this.attempts.delete(compositeKey);",
            "current": true
          },
          {
            "line": 159,
            "code": "this.blocked.delete(compositeKey);",
            "current": false
          },
          {
            "line": 160,
            "code": "}",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/rateLimiter.js",
        "line": 159,
        "code": "this.blocked.delete(compositeKey);",
        "type": "DELETE",
        "table": "UNKNOWN",
        "operation": "DELETE",
        "context": [
          {
            "line": 157,
            "code": "const compositeKey = `${key}:${action}`;",
            "current": false
          },
          {
            "line": 158,
            "code": "this.attempts.delete(compositeKey);",
            "current": false
          },
          {
            "line": 159,
            "code": "this.blocked.delete(compositeKey);",
            "current": true
          },
          {
            "line": 160,
            "code": "}",
            "current": false
          },
          {
            "line": 161,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/secureTokens.js",
        "line": 48,
        "code": "return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('');",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 46,
            "code": "const array = new Uint8Array(16);",
            "current": false
          },
          {
            "line": 47,
            "code": "crypto.getRandomValues(array);",
            "current": false
          },
          {
            "line": 48,
            "code": "return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('');",
            "current": true
          },
          {
            "line": 49,
            "code": "},",
            "current": false
          },
          {
            "line": 50,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/semanticValidator.js",
        "line": 1,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 1,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 2,
            "code": "",
            "current": false
          },
          {
            "line": 3,
            "code": "class SemanticValidator {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/semanticValidator.js",
        "line": 12,
        "code": ".from('semantic_validation_rules')",
        "type": "OTHER",
        "table": "semantic_validation_rules",
        "operation": "OTHER",
        "context": [
          {
            "line": 10,
            "code": "try {",
            "current": false
          },
          {
            "line": 11,
            "code": "const { data: rules, error } = await supabase",
            "current": false
          },
          {
            "line": 12,
            "code": ".from('semantic_validation_rules')",
            "current": true
          },
          {
            "line": 13,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 14,
            "code": ".eq('active', true);",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "semantic_validation_rules",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007021869_i9krz4wxc\\\"\"}",
          "timestamp": "2025-09-04T17:30:22.046Z"
        }
      },
      {
        "file": "frontend/src/utils/semanticValidator.js",
        "line": 13,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 11,
            "code": "const { data: rules, error } = await supabase",
            "current": false
          },
          {
            "line": 12,
            "code": ".from('semantic_validation_rules')",
            "current": false
          },
          {
            "line": 13,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 14,
            "code": ".eq('active', true);",
            "current": false
          },
          {
            "line": 15,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/semanticValidator.js",
        "line": 184,
        "code": ".from('finalidad_templates')",
        "type": "OTHER",
        "table": "finalidad_templates",
        "operation": "OTHER",
        "context": [
          {
            "line": 182,
            "code": "try {",
            "current": false
          },
          {
            "line": 183,
            "code": "const { data: templates, error } = await supabase",
            "current": false
          },
          {
            "line": 184,
            "code": ".from('finalidad_templates')",
            "current": true
          },
          {
            "line": 185,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 186,
            "code": ".ilike('keywords', `%${this.extractKeywords(finalidadText).join('%')}%`)",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "finalidad_templates",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007022246_8x953hnuz\\\"\"}",
          "timestamp": "2025-09-04T17:30:22.446Z"
        }
      },
      {
        "file": "frontend/src/utils/semanticValidator.js",
        "line": 185,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 183,
            "code": "const { data: templates, error } = await supabase",
            "current": false
          },
          {
            "line": 184,
            "code": ".from('finalidad_templates')",
            "current": false
          },
          {
            "line": 185,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 186,
            "code": ".ilike('keywords', `%${this.extractKeywords(finalidadText).join('%')}%`)",
            "current": false
          },
          {
            "line": 187,
            "code": ".limit(3);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/semanticValidator.js",
        "line": 227,
        "code": ".from('finalidad_templates')",
        "type": "OTHER",
        "table": "finalidad_templates",
        "operation": "OTHER",
        "context": [
          {
            "line": 225,
            "code": "try {",
            "current": false
          },
          {
            "line": 226,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 227,
            "code": ".from('finalidad_templates')",
            "current": true
          },
          {
            "line": 228,
            "code": ".upsert({",
            "current": false
          },
          {
            "line": 229,
            "code": "title: finalidad.substring(0, 100),",
            "current": false
          }
        ],
        "realTestResult": {
          "success": false,
          "table": "finalidad_templates",
          "error": "INSERT failed: 400 - {\"code\":\"22P02\",\"details\":null,\"hint\":null,\"message\":\"invalid input syntax for type uuid: \\\"audit_1757007022246_8x953hnuz\\\"\"}",
          "timestamp": "2025-09-04T17:30:22.446Z"
        }
      },
      {
        "file": "frontend/src/utils/semanticValidator.js",
        "line": 228,
        "code": ".upsert({",
        "type": "UPSERT",
        "table": "UNKNOWN",
        "operation": "UPSERT",
        "context": [
          {
            "line": 226,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 227,
            "code": ".from('finalidad_templates')",
            "current": false
          },
          {
            "line": 228,
            "code": ".upsert({",
            "current": true
          },
          {
            "line": 229,
            "code": "title: finalidad.substring(0, 100),",
            "current": false
          },
          {
            "line": 230,
            "code": "description: finalidad,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/smartSupabaseClient.js",
        "line": 8,
        "code": "import { supabase as originalSupabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 6,
            "code": "*/",
            "current": false
          },
          {
            "line": 7,
            "code": "",
            "current": false
          },
          {
            "line": 8,
            "code": "import { supabase as originalSupabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 9,
            "code": "import rlsGuard from './supabaseRLSGuard';",
            "current": false
          },
          {
            "line": 10,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/smartSupabaseClient.js",
        "line": 11,
        "code": "class SmartSupabaseClient {",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 9,
            "code": "import rlsGuard from './supabaseRLSGuard';",
            "current": false
          },
          {
            "line": 10,
            "code": "",
            "current": false
          },
          {
            "line": 11,
            "code": "class SmartSupabaseClient {",
            "current": true
          },
          {
            "line": 12,
            "code": "constructor() {",
            "current": false
          },
          {
            "line": 13,
            "code": "this.originalClient = originalSupabase;",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/smartSupabaseClient.js",
        "line": 24,
        "code": "return new SmartQueryBuilder(tableName, this.originalClient.from(tableName), this);",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 22,
            "code": "from(tableName) {",
            "current": false
          },
          {
            "line": 23,
            "code": "this.queryCount++;",
            "current": false
          },
          {
            "line": 24,
            "code": "return new SmartQueryBuilder(tableName, this.originalClient.from(tableName), this);",
            "current": true
          },
          {
            "line": 25,
            "code": "}",
            "current": false
          },
          {
            "line": 26,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/smartSupabaseClient.js",
        "line": 230,
        "code": "let query = this.smartClient.originalClient.from(this.tableName);",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 228,
            "code": "*/",
            "current": false
          },
          {
            "line": 229,
            "code": "buildQuery(attemptNumber) {",
            "current": false
          },
          {
            "line": 230,
            "code": "let query = this.smartClient.originalClient.from(this.tableName);",
            "current": true
          },
          {
            "line": 231,
            "code": "",
            "current": false
          },
          {
            "line": 232,
            "code": "// Aplicar SELECT",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/smartSupabaseClient.js",
        "line": 234,
        "code": "query = query.select(this.queryParts.select.columns, this.queryParts.select.options);",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 232,
            "code": "// Aplicar SELECT",
            "current": false
          },
          {
            "line": 233,
            "code": "if (this.queryParts.select) {",
            "current": false
          },
          {
            "line": 234,
            "code": "query = query.select(this.queryParts.select.columns, this.queryParts.select.options);",
            "current": true
          },
          {
            "line": 235,
            "code": "}",
            "current": false
          },
          {
            "line": 236,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/smartSupabaseClient.js",
        "line": 362,
        "code": ".from(this.tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 360,
            "code": "try {",
            "current": false
          },
          {
            "line": 361,
            "code": "const query = this.smartClient.originalClient",
            "current": false
          },
          {
            "line": 362,
            "code": ".from(this.tableName)",
            "current": true
          },
          {
            "line": 363,
            "code": ".insert(values, options);",
            "current": false
          },
          {
            "line": 364,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/smartSupabaseClient.js",
        "line": 363,
        "code": ".insert(values, options);",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 361,
            "code": "const query = this.smartClient.originalClient",
            "current": false
          },
          {
            "line": 362,
            "code": ".from(this.tableName)",
            "current": false
          },
          {
            "line": 363,
            "code": ".insert(values, options);",
            "current": true
          },
          {
            "line": 364,
            "code": "",
            "current": false
          },
          {
            "line": 365,
            "code": "return await query;",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/smartSupabaseClient.js",
        "line": 383,
        "code": ".from(this.tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 381,
            "code": "",
            "current": false
          },
          {
            "line": 382,
            "code": "const retryQuery = this.smartClient.originalClient",
            "current": false
          },
          {
            "line": 383,
            "code": ".from(this.tableName)",
            "current": true
          },
          {
            "line": 384,
            "code": ".insert(cleanedValues, options);",
            "current": false
          },
          {
            "line": 385,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/smartSupabaseClient.js",
        "line": 384,
        "code": ".insert(cleanedValues, options);",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 382,
            "code": "const retryQuery = this.smartClient.originalClient",
            "current": false
          },
          {
            "line": 383,
            "code": ".from(this.tableName)",
            "current": false
          },
          {
            "line": 384,
            "code": ".insert(cleanedValues, options);",
            "current": true
          },
          {
            "line": 385,
            "code": "",
            "current": false
          },
          {
            "line": 386,
            "code": "const result = await retryQuery;",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/smartSupabaseClient.js",
        "line": 406,
        "code": "return await query.update(values, options);",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 404,
            "code": "try {",
            "current": false
          },
          {
            "line": 405,
            "code": "const query = this.buildQuery(0);",
            "current": false
          },
          {
            "line": 406,
            "code": "return await query.update(values, options);",
            "current": true
          },
          {
            "line": 407,
            "code": "",
            "current": false
          },
          {
            "line": 408,
            "code": "} catch (error) {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/smartSupabaseClient.js",
        "line": 421,
        "code": "return await query.delete(options);",
        "type": "DELETE",
        "table": "UNKNOWN",
        "operation": "DELETE",
        "context": [
          {
            "line": 419,
            "code": "try {",
            "current": false
          },
          {
            "line": 420,
            "code": "const query = this.buildQuery(0);",
            "current": false
          },
          {
            "line": 421,
            "code": "return await query.delete(options);",
            "current": true
          },
          {
            "line": 422,
            "code": "",
            "current": false
          },
          {
            "line": 423,
            "code": "} catch (error) {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/smartSupabaseClient.js",
        "line": 432,
        "code": "const smartSupabase = new SmartSupabaseClient();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 430,
            "code": "",
            "current": false
          },
          {
            "line": 431,
            "code": "// Crear instancia del cliente inteligente",
            "current": false
          },
          {
            "line": 432,
            "code": "const smartSupabase = new SmartSupabaseClient();",
            "current": true
          },
          {
            "line": 433,
            "code": "",
            "current": false
          },
          {
            "line": 434,
            "code": "// Funci√≥n para obtener estad√≠sticas",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/smartSupabaseClient.js",
        "line": 435,
        "code": "export const getSmartSupabaseStats = () => smartSupabase.getStats();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 433,
            "code": "",
            "current": false
          },
          {
            "line": 434,
            "code": "// Funci√≥n para obtener estad√≠sticas",
            "current": false
          },
          {
            "line": 435,
            "code": "export const getSmartSupabaseStats = () => smartSupabase.getStats();",
            "current": true
          },
          {
            "line": 436,
            "code": "",
            "current": false
          },
          {
            "line": 437,
            "code": "// Funci√≥n para debugging",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseAuditor.js",
        "line": 8,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 6,
            "code": "*/",
            "current": false
          },
          {
            "line": 7,
            "code": "",
            "current": false
          },
          {
            "line": 8,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 9,
            "code": "",
            "current": false
          },
          {
            "line": 10,
            "code": "export class SupabaseAuditor {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseAuditor.js",
        "line": 56,
        "code": "const { data: { user } } = await supabase.auth.getUser();",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 54,
            "code": "",
            "current": false
          },
          {
            "line": 55,
            "code": "try {",
            "current": false
          },
          {
            "line": 56,
            "code": "const { data: { user } } = await supabase.auth.getUser();",
            "current": true
          },
          {
            "line": 57,
            "code": "console.log('‚úÖ Supabase client OK');",
            "current": false
          },
          {
            "line": 58,
            "code": "console.log('üë§ User:', user?.email || 'Not authenticated');",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseAuditor.js",
        "line": 88,
        "code": ".from(tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 86,
            "code": "console.log(`üîç SELECT test on ${tableName}...`);",
            "current": false
          },
          {
            "line": 87,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 88,
            "code": ".from(tableName)",
            "current": true
          },
          {
            "line": 89,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 90,
            "code": ".limit(1);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseAuditor.js",
        "line": 89,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 87,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 88,
            "code": ".from(tableName)",
            "current": false
          },
          {
            "line": 89,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 90,
            "code": ".limit(1);",
            "current": false
          },
          {
            "line": 91,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseAuditor.js",
        "line": 135,
        "code": ".from(tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 133,
            "code": "",
            "current": false
          },
          {
            "line": 134,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 135,
            "code": ".from(tableName)",
            "current": true
          },
          {
            "line": 136,
            "code": ".insert([testData])",
            "current": false
          },
          {
            "line": 137,
            "code": ".select();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseAuditor.js",
        "line": 136,
        "code": ".insert([testData])",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 134,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 135,
            "code": ".from(tableName)",
            "current": false
          },
          {
            "line": 136,
            "code": ".insert([testData])",
            "current": true
          },
          {
            "line": 137,
            "code": ".select();",
            "current": false
          },
          {
            "line": 138,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseAuditor.js",
        "line": 137,
        "code": ".select();",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 135,
            "code": ".from(tableName)",
            "current": false
          },
          {
            "line": 136,
            "code": ".insert([testData])",
            "current": false
          },
          {
            "line": 137,
            "code": ".select();",
            "current": true
          },
          {
            "line": 138,
            "code": "",
            "current": false
          },
          {
            "line": 139,
            "code": "if (error) {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseAuditor.js",
        "line": 165,
        "code": ".from(tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 163,
            "code": "try {",
            "current": false
          },
          {
            "line": 164,
            "code": "const { error: updateError } = await supabase",
            "current": false
          },
          {
            "line": 165,
            "code": ".from(tableName)",
            "current": true
          },
          {
            "line": 166,
            "code": ".update({ updated_at: new Date().toISOString() })",
            "current": false
          },
          {
            "line": 167,
            "code": ".eq('id', recordId);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseAuditor.js",
        "line": 166,
        "code": ".update({ updated_at: new Date().toISOString() })",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 164,
            "code": "const { error: updateError } = await supabase",
            "current": false
          },
          {
            "line": 165,
            "code": ".from(tableName)",
            "current": false
          },
          {
            "line": 166,
            "code": ".update({ updated_at: new Date().toISOString() })",
            "current": true
          },
          {
            "line": 167,
            "code": ".eq('id', recordId);",
            "current": false
          },
          {
            "line": 168,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseAuditor.js",
        "line": 183,
        "code": ".from(tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 181,
            "code": "try {",
            "current": false
          },
          {
            "line": 182,
            "code": "const { error: deleteError } = await supabase",
            "current": false
          },
          {
            "line": 183,
            "code": ".from(tableName)",
            "current": true
          },
          {
            "line": 184,
            "code": ".delete()",
            "current": false
          },
          {
            "line": 185,
            "code": ".eq('id', recordId);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseAuditor.js",
        "line": 184,
        "code": ".delete()",
        "type": "DELETE",
        "table": "UNKNOWN",
        "operation": "DELETE",
        "context": [
          {
            "line": 182,
            "code": "const { error: deleteError } = await supabase",
            "current": false
          },
          {
            "line": 183,
            "code": ".from(tableName)",
            "current": false
          },
          {
            "line": 184,
            "code": ".delete()",
            "current": true
          },
          {
            "line": 185,
            "code": ".eq('id', recordId);",
            "current": false
          },
          {
            "line": 186,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseEmpresaPersistence.js",
        "line": 8,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 6,
            "code": "*/",
            "current": false
          },
          {
            "line": 7,
            "code": "",
            "current": false
          },
          {
            "line": 8,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 9,
            "code": "",
            "current": false
          },
          {
            "line": 10,
            "code": "class SupabaseEmpresaPersistence {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseEmpresaPersistence.js",
        "line": 58,
        "code": ".from(this.tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 56,
            "code": "// Buscar si ya existe un template para este tenant (sin RLS por ahora)",
            "current": false
          },
          {
            "line": 57,
            "code": "const { data: existing, error: selectError } = await supabase",
            "current": false
          },
          {
            "line": 58,
            "code": ".from(this.tableName)",
            "current": true
          },
          {
            "line": 59,
            "code": ".select('id')",
            "current": false
          },
          {
            "line": 60,
            "code": ".eq('template_name', templateName)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseEmpresaPersistence.js",
        "line": 59,
        "code": ".select('id')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 57,
            "code": "const { data: existing, error: selectError } = await supabase",
            "current": false
          },
          {
            "line": 58,
            "code": ".from(this.tableName)",
            "current": false
          },
          {
            "line": 59,
            "code": ".select('id')",
            "current": true
          },
          {
            "line": 60,
            "code": ".eq('template_name', templateName)",
            "current": false
          },
          {
            "line": 61,
            "code": ".eq('is_active', true)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseEmpresaPersistence.js",
        "line": 73,
        "code": ".from(this.tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 71,
            "code": "// Actualizar existente",
            "current": false
          },
          {
            "line": 72,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 73,
            "code": ".from(this.tableName)",
            "current": true
          },
          {
            "line": 74,
            "code": ".update(datosParaGuardar)",
            "current": false
          },
          {
            "line": 75,
            "code": ".eq('id', existing.id)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseEmpresaPersistence.js",
        "line": 74,
        "code": ".update(datosParaGuardar)",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 72,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 73,
            "code": ".from(this.tableName)",
            "current": false
          },
          {
            "line": 74,
            "code": ".update(datosParaGuardar)",
            "current": true
          },
          {
            "line": 75,
            "code": ".eq('id', existing.id)",
            "current": false
          },
          {
            "line": 76,
            "code": ".select()",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseEmpresaPersistence.js",
        "line": 76,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 74,
            "code": ".update(datosParaGuardar)",
            "current": false
          },
          {
            "line": 75,
            "code": ".eq('id', existing.id)",
            "current": false
          },
          {
            "line": 76,
            "code": ".select()",
            "current": true
          },
          {
            "line": 77,
            "code": ".single();",
            "current": false
          },
          {
            "line": 78,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseEmpresaPersistence.js",
        "line": 84,
        "code": ".from(this.tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 82,
            "code": "// Insertar nuevo",
            "current": false
          },
          {
            "line": 83,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 84,
            "code": ".from(this.tableName)",
            "current": true
          },
          {
            "line": 85,
            "code": ".insert([datosParaGuardar])",
            "current": false
          },
          {
            "line": 86,
            "code": ".select()",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseEmpresaPersistence.js",
        "line": 85,
        "code": ".insert([datosParaGuardar])",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 83,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 84,
            "code": ".from(this.tableName)",
            "current": false
          },
          {
            "line": 85,
            "code": ".insert([datosParaGuardar])",
            "current": true
          },
          {
            "line": 86,
            "code": ".select()",
            "current": false
          },
          {
            "line": 87,
            "code": ".single();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseEmpresaPersistence.js",
        "line": 86,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 84,
            "code": ".from(this.tableName)",
            "current": false
          },
          {
            "line": 85,
            "code": ".insert([datosParaGuardar])",
            "current": false
          },
          {
            "line": 86,
            "code": ".select()",
            "current": true
          },
          {
            "line": 87,
            "code": ".single();",
            "current": false
          },
          {
            "line": 88,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseEmpresaPersistence.js",
        "line": 120,
        "code": ".from(this.tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 118,
            "code": "try {",
            "current": false
          },
          {
            "line": 119,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 120,
            "code": ".from(this.tableName)",
            "current": true
          },
          {
            "line": 121,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 122,
            "code": ".eq('template_name', templateName)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseEmpresaPersistence.js",
        "line": 121,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 119,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 120,
            "code": ".from(this.tableName)",
            "current": false
          },
          {
            "line": 121,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 122,
            "code": ".eq('template_name', templateName)",
            "current": false
          },
          {
            "line": 123,
            "code": ".eq('is_active', true)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseEmpresaPersistence.js",
        "line": 257,
        "code": ".from(this.tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 255,
            "code": "try {",
            "current": false
          },
          {
            "line": 256,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 257,
            "code": ".from(this.tableName)",
            "current": true
          },
          {
            "line": 258,
            "code": ".update({ is_active: false })",
            "current": false
          },
          {
            "line": 259,
            "code": ".eq('template_name', templateName);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseEmpresaPersistence.js",
        "line": 258,
        "code": ".update({ is_active: false })",
        "type": "UPDATE",
        "table": "UNKNOWN",
        "operation": "UPDATE",
        "context": [
          {
            "line": 256,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 257,
            "code": ".from(this.tableName)",
            "current": false
          },
          {
            "line": 258,
            "code": ".update({ is_active: false })",
            "current": true
          },
          {
            "line": 259,
            "code": ".eq('template_name', templateName);",
            "current": false
          },
          {
            "line": 260,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseEmpresaPersistence.js",
        "line": 291,
        "code": "this.listeners.delete(callback);",
        "type": "DELETE",
        "table": "UNKNOWN",
        "operation": "DELETE",
        "context": [
          {
            "line": 289,
            "code": "",
            "current": false
          },
          {
            "line": 290,
            "code": "return () => {",
            "current": false
          },
          {
            "line": 291,
            "code": "this.listeners.delete(callback);",
            "current": true
          },
          {
            "line": 292,
            "code": "};",
            "current": false
          },
          {
            "line": 293,
            "code": "}",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseErrorLogger.js",
        "line": 8,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 6,
            "code": "*/",
            "current": false
          },
          {
            "line": 7,
            "code": "",
            "current": false
          },
          {
            "line": 8,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 9,
            "code": "",
            "current": false
          },
          {
            "line": 10,
            "code": "class SupabaseErrorLogger {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseErrorLogger.js",
        "line": 111,
        "code": ".from(this.tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 109,
            "code": "/* C√ìDIGO ORIGINAL COMENTADO TEMPORALMENTE",
            "current": false
          },
          {
            "line": 110,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 111,
            "code": ".from(this.tableName)",
            "current": true
          },
          {
            "line": 112,
            "code": ".insert(logEntries)",
            "current": false
          },
          {
            "line": 113,
            "code": ".select();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseErrorLogger.js",
        "line": 112,
        "code": ".insert(logEntries)",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 110,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 111,
            "code": ".from(this.tableName)",
            "current": false
          },
          {
            "line": 112,
            "code": ".insert(logEntries)",
            "current": true
          },
          {
            "line": 113,
            "code": ".select();",
            "current": false
          },
          {
            "line": 114,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseErrorLogger.js",
        "line": 113,
        "code": ".select();",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 111,
            "code": ".from(this.tableName)",
            "current": false
          },
          {
            "line": 112,
            "code": ".insert(logEntries)",
            "current": false
          },
          {
            "line": 113,
            "code": ".select();",
            "current": true
          },
          {
            "line": 114,
            "code": "",
            "current": false
          },
          {
            "line": 115,
            "code": "if (error) {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseErrorLogger.js",
        "line": 140,
        "code": "this.errorBuffer.delete(bufferKey);",
        "type": "DELETE",
        "table": "UNKNOWN",
        "operation": "DELETE",
        "context": [
          {
            "line": 138,
            "code": "",
            "current": false
          },
          {
            "line": 139,
            "code": "// Limpiar buffer antes de enviar",
            "current": false
          },
          {
            "line": 140,
            "code": "this.errorBuffer.delete(bufferKey);",
            "current": true
          },
          {
            "line": 141,
            "code": "",
            "current": false
          },
          {
            "line": 142,
            "code": "// Enviar a Supabase",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseErrorLogger.js",
        "line": 231,
        "code": ".from(this.tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 229,
            "code": "try {",
            "current": false
          },
          {
            "line": 230,
            "code": "let query = supabase",
            "current": false
          },
          {
            "line": 231,
            "code": ".from(this.tableName)",
            "current": true
          },
          {
            "line": 232,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 233,
            "code": ".eq('tenant_id', this.currentTenantId)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseErrorLogger.js",
        "line": 232,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 230,
            "code": "let query = supabase",
            "current": false
          },
          {
            "line": 231,
            "code": ".from(this.tableName)",
            "current": false
          },
          {
            "line": 232,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 233,
            "code": ".eq('tenant_id', this.currentTenantId)",
            "current": false
          },
          {
            "line": 234,
            "code": ".order('created_at', { ascending: false })",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseErrorLogger.js",
        "line": 326,
        "code": ".from(this.tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 324,
            "code": "try {",
            "current": false
          },
          {
            "line": 325,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 326,
            "code": ".from(this.tableName)",
            "current": true
          },
          {
            "line": 327,
            "code": ".delete()",
            "current": false
          },
          {
            "line": 328,
            "code": ".eq('tenant_id', this.currentTenantId)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseErrorLogger.js",
        "line": 327,
        "code": ".delete()",
        "type": "DELETE",
        "table": "UNKNOWN",
        "operation": "DELETE",
        "context": [
          {
            "line": 325,
            "code": "const { error } = await supabase",
            "current": false
          },
          {
            "line": 326,
            "code": ".from(this.tableName)",
            "current": false
          },
          {
            "line": 327,
            "code": ".delete()",
            "current": true
          },
          {
            "line": 328,
            "code": ".eq('tenant_id', this.currentTenantId)",
            "current": false
          },
          {
            "line": 329,
            "code": ".lt('created_at', cutoffDate.toISOString());",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseRLSGuard.js",
        "line": 8,
        "code": "import { supabase } from '../config/supabaseClient';",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 6,
            "code": "*/",
            "current": false
          },
          {
            "line": 7,
            "code": "",
            "current": false
          },
          {
            "line": 8,
            "code": "import { supabase } from '../config/supabaseClient';",
            "current": true
          },
          {
            "line": 9,
            "code": "",
            "current": false
          },
          {
            "line": 10,
            "code": "class SupabaseRLSGuard {",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseRLSGuard.js",
        "line": 51,
        "code": ".from(table)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 49,
            "code": "// Test query m√≠nima para detectar columnas disponibles",
            "current": false
          },
          {
            "line": 50,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 51,
            "code": ".from(table)",
            "current": true
          },
          {
            "line": 52,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 53,
            "code": ".limit(1)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseRLSGuard.js",
        "line": 52,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 50,
            "code": "const { data, error } = await supabase",
            "current": false
          },
          {
            "line": 51,
            "code": ".from(table)",
            "current": false
          },
          {
            "line": 52,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 53,
            "code": ".limit(1)",
            "current": false
          },
          {
            "line": 54,
            "code": ".maybeSingle();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseRLSGuard.js",
        "line": 101,
        "code": ".from(table)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 99,
            "code": "// Test SELECT",
            "current": false
          },
          {
            "line": 100,
            "code": "const { error: selectError } = await supabase",
            "current": false
          },
          {
            "line": 101,
            "code": ".from(table)",
            "current": true
          },
          {
            "line": 102,
            "code": ".select('id', { count: 'exact', head: true });",
            "current": false
          },
          {
            "line": 103,
            "code": "permissions.select = !selectError;",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseRLSGuard.js",
        "line": 102,
        "code": ".select('id', { count: 'exact', head: true });",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 100,
            "code": "const { error: selectError } = await supabase",
            "current": false
          },
          {
            "line": 101,
            "code": ".from(table)",
            "current": false
          },
          {
            "line": 102,
            "code": ".select('id', { count: 'exact', head: true });",
            "current": true
          },
          {
            "line": 103,
            "code": "permissions.select = !selectError;",
            "current": false
          },
          {
            "line": 104,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseRLSGuard.js",
        "line": 108,
        "code": ".from(table)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 106,
            "code": "if (schema.columns?.includes('tenant_id') && tenantId) {",
            "current": false
          },
          {
            "line": 107,
            "code": "const { error: tenantError } = await supabase",
            "current": false
          },
          {
            "line": 108,
            "code": ".from(table)",
            "current": true
          },
          {
            "line": 109,
            "code": ".select('id', { count: 'exact', head: true })",
            "current": false
          },
          {
            "line": 110,
            "code": ".eq('tenant_id', tenantId);",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseRLSGuard.js",
        "line": 109,
        "code": ".select('id', { count: 'exact', head: true })",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 107,
            "code": "const { error: tenantError } = await supabase",
            "current": false
          },
          {
            "line": 108,
            "code": ".from(table)",
            "current": false
          },
          {
            "line": 109,
            "code": ".select('id', { count: 'exact', head: true })",
            "current": true
          },
          {
            "line": 110,
            "code": ".eq('tenant_id', tenantId);",
            "current": false
          },
          {
            "line": 111,
            "code": "permissions.tenant_filtered = !tenantError;",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseRLSGuard.js",
        "line": 118,
        "code": ".from(table)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 116,
            "code": "const testData = this.generateTestRecord(table, schema.columns);",
            "current": false
          },
          {
            "line": 117,
            "code": "const { error: insertError } = await supabase",
            "current": false
          },
          {
            "line": 118,
            "code": ".from(table)",
            "current": true
          },
          {
            "line": 119,
            "code": ".insert(testData)",
            "current": false
          },
          {
            "line": 120,
            "code": ".select()",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseRLSGuard.js",
        "line": 119,
        "code": ".insert(testData)",
        "type": "INSERT",
        "table": "UNKNOWN",
        "operation": "CREATE",
        "context": [
          {
            "line": 117,
            "code": "const { error: insertError } = await supabase",
            "current": false
          },
          {
            "line": 118,
            "code": ".from(table)",
            "current": false
          },
          {
            "line": 119,
            "code": ".insert(testData)",
            "current": true
          },
          {
            "line": 120,
            "code": ".select()",
            "current": false
          },
          {
            "line": 121,
            "code": ".limit(0); // No insertar realmente",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseRLSGuard.js",
        "line": 120,
        "code": ".select()",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 118,
            "code": ".from(table)",
            "current": false
          },
          {
            "line": 119,
            "code": ".insert(testData)",
            "current": false
          },
          {
            "line": 120,
            "code": ".select()",
            "current": true
          },
          {
            "line": 121,
            "code": ".limit(0); // No insertar realmente",
            "current": false
          },
          {
            "line": 122,
            "code": "permissions.insert = !insertError;",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseRLSGuard.js",
        "line": 260,
        "code": ".from(tableName)",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 258,
            "code": "// Consulta ultra-simple como √∫ltimo recurso",
            "current": false
          },
          {
            "line": 259,
            "code": "return await supabase",
            "current": false
          },
          {
            "line": 260,
            "code": ".from(tableName)",
            "current": true
          },
          {
            "line": 261,
            "code": ".select('*')",
            "current": false
          },
          {
            "line": 262,
            "code": ".limit(1)",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseRLSGuard.js",
        "line": 261,
        "code": ".select('*')",
        "type": "SELECT",
        "table": "UNKNOWN",
        "operation": "READ",
        "context": [
          {
            "line": 259,
            "code": "return await supabase",
            "current": false
          },
          {
            "line": 260,
            "code": ".from(tableName)",
            "current": false
          },
          {
            "line": 261,
            "code": ".select('*')",
            "current": true
          },
          {
            "line": 262,
            "code": ".limit(1)",
            "current": false
          },
          {
            "line": 263,
            "code": ".maybeSingle();",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseRLSGuard.js",
        "line": 301,
        "code": "this.failedQueries.delete(key);",
        "type": "DELETE",
        "table": "UNKNOWN",
        "operation": "DELETE",
        "context": [
          {
            "line": 299,
            "code": "cacheSuccessfulQuery(tableName, queryKey) {",
            "current": false
          },
          {
            "line": 300,
            "code": "const key = `${tableName}:${queryKey}`;",
            "current": false
          },
          {
            "line": 301,
            "code": "this.failedQueries.delete(key);",
            "current": true
          },
          {
            "line": 302,
            "code": "}",
            "current": false
          },
          {
            "line": 303,
            "code": "",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseRLSGuard.js",
        "line": 331,
        "code": "tables: Array.from(this.tableSchemas.entries()).map(([name, schema]) => ({",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 329,
            "code": "permissions_cached: this.permissionsCache.size,",
            "current": false
          },
          {
            "line": 330,
            "code": "failed_queries: this.failedQueries.size,",
            "current": false
          },
          {
            "line": 331,
            "code": "tables: Array.from(this.tableSchemas.entries()).map(([name, schema]) => ({",
            "current": true
          },
          {
            "line": 332,
            "code": "name,",
            "current": false
          },
          {
            "line": 333,
            "code": "accessible: schema.accessible !== false,",
            "current": false
          }
        ]
      },
      {
        "file": "frontend/src/utils/supabaseRLSGuard.js",
        "line": 337,
        "code": "permissions: Array.from(this.permissionsCache.entries()).map(([name, perms]) => ({",
        "type": "OTHER",
        "table": "UNKNOWN",
        "operation": "OTHER",
        "context": [
          {
            "line": 335,
            "code": "error: schema.error || null",
            "current": false
          },
          {
            "line": 336,
            "code": "})),",
            "current": false
          },
          {
            "line": 337,
            "code": "permissions: Array.from(this.permissionsCache.entries()).map(([name, perms]) => ({",
            "current": true
          },
          {
            "line": 338,
            "code": "table: name,",
            "current": false
          },
          {
            "line": 339,
            "code": "...perms",
            "current": false
          }
        ]
      }
    ],
    "table_discrepancies": [
      {
        "type": "MISSING_IN_DB",
        "table": "is_active",
        "severity": "HIGH",
        "description": "Tabla \"is_active\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "created_at",
        "severity": "HIGH",
        "description": "Tabla \"created_at\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "rat_completed",
        "severity": "HIGH",
        "description": "Tabla \"rat_completed\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "document_generated",
        "severity": "HIGH",
        "description": "Tabla \"document_generated\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "webhook_test",
        "severity": "HIGH",
        "description": "Tabla \"webhook_test\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "whsec_",
        "severity": "HIGH",
        "description": "Tabla \"whsec_\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "tenant_id",
        "severity": "HIGH",
        "description": "Tabla \"tenant_id\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "tipo_actividad",
        "severity": "HIGH",
        "description": "Tabla \"tipo_actividad\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "PENDIENTE_SETUP",
        "severity": "HIGH",
        "description": "Tabla \"PENDIENTE_SETUP\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "PENDIENTE_ACTIVACION",
        "severity": "HIGH",
        "description": "Tabla \"PENDIENTE_ACTIVACION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DPO_PRINCIPAL",
        "severity": "HIGH",
        "description": "Tabla \"DPO_PRINCIPAL\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "COMPLIANCE_OFFICER",
        "severity": "HIGH",
        "description": "Tabla \"COMPLIANCE_OFFICER\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ADMIN_HOLDING",
        "severity": "HIGH",
        "description": "Tabla \"ADMIN_HOLDING\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "USUARIO_BASICO",
        "severity": "HIGH",
        "description": "Tabla \"USUARIO_BASICO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_VENCIMIENTO",
        "severity": "HIGH",
        "description": "Tabla \"RAT_VENCIMIENTO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DPA_RENOVACION",
        "severity": "HIGH",
        "description": "Tabla \"DPA_RENOVACION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "EIPD_DEADLINE",
        "severity": "HIGH",
        "description": "Tabla \"EIPD_DEADLINE\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "AUDITORIA_PROGRAMADA",
        "severity": "HIGH",
        "description": "Tabla \"AUDITORIA_PROGRAMADA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "REVISION_PERIODICA",
        "severity": "HIGH",
        "description": "Tabla \"REVISION_PERIODICA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "TAREA_COMPLIANCE",
        "severity": "HIGH",
        "description": "Tabla \"TAREA_COMPLIANCE\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "fecha_evento",
        "severity": "HIGH",
        "description": "Tabla \"fecha_evento\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "PENDIENTE_APROBACION",
        "severity": "HIGH",
        "description": "Tabla \"PENDIENTE_APROBACION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "transferencias_internacionales",
        "severity": "HIGH",
        "description": "Tabla \"transferencias_internacionales\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "cifrado_datos",
        "severity": "HIGH",
        "description": "Tabla \"cifrado_datos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "control_acceso",
        "severity": "HIGH",
        "description": "Tabla \"control_acceso\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "backup_seguro",
        "severity": "HIGH",
        "description": "Tabla \"backup_seguro\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "monitoreo_accesos",
        "severity": "HIGH",
        "description": "Tabla \"monitoreo_accesos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "capacitacion_personal",
        "severity": "HIGH",
        "description": "Tabla \"capacitacion_personal\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "politicas_seguridad",
        "severity": "HIGH",
        "description": "Tabla \"politicas_seguridad\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "all_pass",
        "severity": "HIGH",
        "description": "Tabla \"all_pass\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "some_failures",
        "severity": "HIGH",
        "description": "Tabla \"some_failures\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "critical_fail",
        "severity": "HIGH",
        "description": "Tabla \"critical_fail\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ALL_PASS",
        "severity": "HIGH",
        "description": "Tabla \"ALL_PASS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "duracion_contractual",
        "severity": "HIGH",
        "description": "Tabla \"duracion_contractual\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "indefinido_con_medidas",
        "severity": "HIGH",
        "description": "Tabla \"indefinido_con_medidas\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "MEDIO_ALTO",
        "severity": "HIGH",
        "description": "Tabla \"MEDIO_ALTO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "demo_user",
        "severity": "HIGH",
        "description": "Tabla \"demo_user\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "juridica_digital",
        "severity": "HIGH",
        "description": "Tabla \"juridica_digital\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "prov_001",
        "severity": "HIGH",
        "description": "Tabla \"prov_001\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "prov_002",
        "severity": "HIGH",
        "description": "Tabla \"prov_002\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ver_evaluacion",
        "severity": "HIGH",
        "description": "Tabla \"ver_evaluacion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_CREATED",
        "severity": "HIGH",
        "description": "Tabla \"RAT_CREATED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_UPDATED",
        "severity": "HIGH",
        "description": "Tabla \"RAT_UPDATED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_DELETED",
        "severity": "HIGH",
        "description": "Tabla \"RAT_DELETED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_APPROVED",
        "severity": "HIGH",
        "description": "Tabla \"RAT_APPROVED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_REJECTED",
        "severity": "HIGH",
        "description": "Tabla \"RAT_REJECTED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DPA_GENERATED",
        "severity": "HIGH",
        "description": "Tabla \"DPA_GENERATED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "EIPD_CREATED",
        "severity": "HIGH",
        "description": "Tabla \"EIPD_CREATED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "USER_LOGIN",
        "severity": "HIGH",
        "description": "Tabla \"USER_LOGIN\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "USER_LOGOUT",
        "severity": "HIGH",
        "description": "Tabla \"USER_LOGOUT\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ADMIN_ACTION",
        "severity": "HIGH",
        "description": "Tabla \"ADMIN_ACTION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "PERMISSION_CHANGE",
        "severity": "HIGH",
        "description": "Tabla \"PERMISSION_CHANGE\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DATA_EXPORT",
        "severity": "HIGH",
        "description": "Tabla \"DATA_EXPORT\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CONFIGURATION_CHANGE",
        "severity": "HIGH",
        "description": "Tabla \"CONFIGURATION_CHANGE\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "usuario_id",
        "severity": "HIGH",
        "description": "Tabla \"usuario_id\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "en_progreso",
        "severity": "HIGH",
        "description": "Tabla \"en_progreso\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "requiere_revision",
        "severity": "HIGH",
        "description": "Tabla \"requiere_revision\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "evaluacion_sistematica",
        "severity": "HIGH",
        "description": "Tabla \"evaluacion_sistematica\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "tratamiento_masivo",
        "severity": "HIGH",
        "description": "Tabla \"tratamiento_masivo\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "datos_sensibles",
        "severity": "HIGH",
        "description": "Tabla \"datos_sensibles\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "observacion_sistematica",
        "severity": "HIGH",
        "description": "Tabla \"observacion_sistematica\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "innovacion_tecnologica",
        "severity": "HIGH",
        "description": "Tabla \"innovacion_tecnologica\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "impacto_derechos",
        "severity": "HIGH",
        "description": "Tabla \"impacto_derechos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "acceso_no_autorizado",
        "severity": "HIGH",
        "description": "Tabla \"acceso_no_autorizado\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "modificacion_no_deseada",
        "severity": "HIGH",
        "description": "Tabla \"modificacion_no_deseada\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "perdida_datos",
        "severity": "HIGH",
        "description": "Tabla \"perdida_datos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "dano_reputacional",
        "severity": "HIGH",
        "description": "Tabla \"dano_reputacional\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "perdida_confidencialidad",
        "severity": "HIGH",
        "description": "Tabla \"perdida_confidencialidad\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "uso_indebido",
        "severity": "HIGH",
        "description": "Tabla \"uso_indebido\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "imposibilidad_ejercer_derechos",
        "severity": "HIGH",
        "description": "Tabla \"imposibilidad_ejercer_derechos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "EIPD_REQUERIDA",
        "severity": "HIGH",
        "description": "Tabla \"EIPD_REQUERIDA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "WORKFLOW_ASIGNACION",
        "severity": "HIGH",
        "description": "Tabla \"WORKFLOW_ASIGNACION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "PROVEEDOR_RIESGO",
        "severity": "HIGH",
        "description": "Tabla \"PROVEEDOR_RIESGO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "USUARIO_NUEVO",
        "severity": "HIGH",
        "description": "Tabla \"USUARIO_NUEVO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "SISTEMA_ACTUALIZACION",
        "severity": "HIGH",
        "description": "Tabla \"SISTEMA_ACTUALIZACION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "IN_APP",
        "severity": "HIGH",
        "description": "Tabla \"IN_APP\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "tipo_notificacion",
        "severity": "HIGH",
        "description": "Tabla \"tipo_notificacion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "sistema_general",
        "severity": "HIGH",
        "description": "Tabla \"sistema_general\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "no_leida",
        "severity": "HIGH",
        "description": "Tabla \"no_leida\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "explorar_sistema",
        "severity": "HIGH",
        "description": "Tabla \"explorar_sistema\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ejecutar_sql_notificaciones",
        "severity": "HIGH",
        "description": "Tabla \"ejecutar_sql_notificaciones\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "NO_LEIDAS",
        "severity": "HIGH",
        "description": "Tabla \"NO_LEIDAS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "_blank",
        "severity": "HIGH",
        "description": "Tabla \"_blank\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "cloud_hosting",
        "severity": "HIGH",
        "description": "Tabla \"cloud_hosting\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "SCC_EU",
        "severity": "HIGH",
        "description": "Tabla \"SCC_EU\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "software_servicio",
        "severity": "HIGH",
        "description": "Tabla \"software_servicio\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DPA_MICROSOFT",
        "severity": "HIGH",
        "description": "Tabla \"DPA_MICROSOFT\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "PENDIENTE_REVISION",
        "severity": "HIGH",
        "description": "Tabla \"PENDIENTE_REVISION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "transferencia_no_autorizada",
        "severity": "HIGH",
        "description": "Tabla \"transferencia_no_autorizada\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DPA_VENCIDO",
        "severity": "HIGH",
        "description": "Tabla \"DPA_VENCIDO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "SIN_AUDITORIA",
        "severity": "HIGH",
        "description": "Tabla \"SIN_AUDITORIA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "INCIDENTES_PENDIENTES",
        "severity": "HIGH",
        "description": "Tabla \"INCIDENTES_PENDIENTES\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RIESGO_CRITICO",
        "severity": "HIGH",
        "description": "Tabla \"RIESGO_CRITICO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "interes_legitimo",
        "severity": "HIGH",
        "description": "Tabla \"interes_legitimo\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_EDIT_SAVE",
        "severity": "HIGH",
        "description": "Tabla \"RAT_EDIT_SAVE\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "FULL_SAVE",
        "severity": "HIGH",
        "description": "Tabla \"FULL_SAVE\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "EN_REVISION",
        "severity": "HIGH",
        "description": "Tabla \"EN_REVISION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "nombre_actividad",
        "severity": "HIGH",
        "description": "Tabla \"nombre_actividad\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "finalidad_principal",
        "severity": "HIGH",
        "description": "Tabla \"finalidad_principal\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "base_licitud",
        "severity": "HIGH",
        "description": "Tabla \"base_licitud\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "obligacion_legal",
        "severity": "HIGH",
        "description": "Tabla \"obligacion_legal\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "proteccion_intereses_vitales",
        "severity": "HIGH",
        "description": "Tabla \"proteccion_intereses_vitales\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "interes_publico",
        "severity": "HIGH",
        "description": "Tabla \"interes_publico\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "responsable_proceso",
        "severity": "HIGH",
        "description": "Tabla \"responsable_proceso\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "area_responsable",
        "severity": "HIGH",
        "description": "Tabla \"area_responsable\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "email_responsable",
        "severity": "HIGH",
        "description": "Tabla \"email_responsable\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "telefono_responsable",
        "severity": "HIGH",
        "description": "Tabla \"telefono_responsable\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "base_legal",
        "severity": "HIGH",
        "description": "Tabla \"base_legal\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "categorias_datos",
        "severity": "HIGH",
        "description": "Tabla \"categorias_datos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "origen_datos",
        "severity": "HIGH",
        "description": "Tabla \"origen_datos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "plazo_conservacion",
        "severity": "HIGH",
        "description": "Tabla \"plazo_conservacion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "criterios_conservacion",
        "severity": "HIGH",
        "description": "Tabla \"criterios_conservacion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "destinatarios_internos",
        "severity": "HIGH",
        "description": "Tabla \"destinatarios_internos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "destinatarios_externos",
        "severity": "HIGH",
        "description": "Tabla \"destinatarios_externos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "paises_destino",
        "severity": "HIGH",
        "description": "Tabla \"paises_destino\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "garantias_transferencia",
        "severity": "HIGH",
        "description": "Tabla \"garantias_transferencia\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "medidas_tecnicas",
        "severity": "HIGH",
        "description": "Tabla \"medidas_tecnicas\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "medidas_organizativas",
        "severity": "HIGH",
        "description": "Tabla \"medidas_organizativas\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "codigo_postal",
        "severity": "HIGH",
        "description": "Tabla \"codigo_postal\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "numero_cliente",
        "severity": "HIGH",
        "description": "Tabla \"numero_cliente\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "codigo_empleado",
        "severity": "HIGH",
        "description": "Tabla \"codigo_empleado\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "historial_medico",
        "severity": "HIGH",
        "description": "Tabla \"historial_medico\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "huella_dactilar",
        "severity": "HIGH",
        "description": "Tabla \"huella_dactilar\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "reconocimiento_facial",
        "severity": "HIGH",
        "description": "Tabla \"reconocimiento_facial\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "afiliacion_religiosa",
        "severity": "HIGH",
        "description": "Tabla \"afiliacion_religiosa\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "opinion_politica",
        "severity": "HIGH",
        "description": "Tabla \"opinion_politica\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "comportamiento_sexual",
        "severity": "HIGH",
        "description": "Tabla \"comportamiento_sexual\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "datos_menores_14",
        "severity": "HIGH",
        "description": "Tabla \"datos_menores_14\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "consentimiento_parental",
        "severity": "HIGH",
        "description": "Tabla \"consentimiento_parental\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ip_address",
        "severity": "HIGH",
        "description": "Tabla \"ip_address\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "mac_address",
        "severity": "HIGH",
        "description": "Tabla \"mac_address\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "device_id",
        "severity": "HIGH",
        "description": "Tabla \"device_id\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "browser_fingerprint",
        "severity": "HIGH",
        "description": "Tabla \"browser_fingerprint\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "interes_vital",
        "severity": "HIGH",
        "description": "Tabla \"interes_vital\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "datos_identificacion",
        "severity": "HIGH",
        "description": "Tabla \"datos_identificacion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "datos_financieros",
        "severity": "HIGH",
        "description": "Tabla \"datos_financieros\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "situacion_socioeconomica",
        "severity": "HIGH",
        "description": "Tabla \"situacion_socioeconomica\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "datos_salud",
        "severity": "HIGH",
        "description": "Tabla \"datos_salud\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "datos_biometricos",
        "severity": "HIGH",
        "description": "Tabla \"datos_biometricos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "decisiones_automatizadas",
        "severity": "HIGH",
        "description": "Tabla \"decisiones_automatizadas\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "efectos_significativos",
        "severity": "HIGH",
        "description": "Tabla \"efectos_significativos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "fecha_actualizacion",
        "severity": "HIGH",
        "description": "Tabla \"fecha_actualizacion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "updated_at",
        "severity": "HIGH",
        "description": "Tabla \"updated_at\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "consentimiento_titular",
        "severity": "HIGH",
        "description": "Tabla \"consentimiento_titular\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ejecucion_contrato",
        "severity": "HIGH",
        "description": "Tabla \"ejecucion_contrato\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "cumplimiento_obligacion_legal",
        "severity": "HIGH",
        "description": "Tabla \"cumplimiento_obligacion_legal\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "sensibles_especiales",
        "severity": "HIGH",
        "description": "Tabla \"sensibles_especiales\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "nivel_riesgo",
        "severity": "HIGH",
        "description": "Tabla \"nivel_riesgo\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "formulario_rat",
        "severity": "HIGH",
        "description": "Tabla \"formulario_rat\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_PERSISTENCE_AUTO_SAVE",
        "severity": "HIGH",
        "description": "Tabla \"RAT_PERSISTENCE_AUTO_SAVE\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_AUTO_PERSISTENCE",
        "severity": "HIGH",
        "description": "Tabla \"RAT_AUTO_PERSISTENCE\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_PERSISTENCE_FAILED",
        "severity": "HIGH",
        "description": "Tabla \"RAT_PERSISTENCE_FAILED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_PERSISTENCE_ERROR",
        "severity": "HIGH",
        "description": "Tabla \"RAT_PERSISTENCE_ERROR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_SYSTEM_INIT",
        "severity": "HIGH",
        "description": "Tabla \"RAT_SYSTEM_INIT\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_SYSTEM",
        "severity": "HIGH",
        "description": "Tabla \"RAT_SYSTEM\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_AUTOCOMPLETADO_SUCCESS",
        "severity": "HIGH",
        "description": "Tabla \"RAT_AUTOCOMPLETADO_SUCCESS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_AUTOCOMPLETAR",
        "severity": "HIGH",
        "description": "Tabla \"RAT_AUTOCOMPLETAR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_AUTOCOMPLETADO_NO_DATOS",
        "severity": "HIGH",
        "description": "Tabla \"RAT_AUTOCOMPLETADO_NO_DATOS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_AUTOCOMPLETADO_FAILED",
        "severity": "HIGH",
        "description": "Tabla \"RAT_AUTOCOMPLETADO_FAILED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_NUEVO_RELOAD_DATOS",
        "severity": "HIGH",
        "description": "Tabla \"RAT_NUEVO_RELOAD_DATOS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_VALIDACION_FAILED",
        "severity": "HIGH",
        "description": "Tabla \"RAT_VALIDACION_FAILED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_VALIDACION",
        "severity": "HIGH",
        "description": "Tabla \"RAT_VALIDACION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_VALIDACION_SUCCESS",
        "severity": "HIGH",
        "description": "Tabla \"RAT_VALIDACION_SUCCESS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "datos_geneticos",
        "severity": "HIGH",
        "description": "Tabla \"datos_geneticos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "APROBADO_CON_MEDIDAS",
        "severity": "HIGH",
        "description": "Tabla \"APROBADO_CON_MEDIDAS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "GENERADO_AUTOMATICAMENTE",
        "severity": "HIGH",
        "description": "Tabla \"GENERADO_AUTOMATICAMENTE\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "EIPD_GENERADO_REVISION",
        "severity": "HIGH",
        "description": "Tabla \"EIPD_GENERADO_REVISION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "revision_eipd_generado",
        "severity": "HIGH",
        "description": "Tabla \"revision_eipd_generado\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_SAVE_FAILED",
        "severity": "HIGH",
        "description": "Tabla \"RAT_SAVE_FAILED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_SAVE",
        "severity": "HIGH",
        "description": "Tabla \"RAT_SAVE\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "grabacion_video",
        "severity": "HIGH",
        "description": "Tabla \"grabacion_video\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "grabacion_audio",
        "severity": "HIGH",
        "description": "Tabla \"grabacion_audio\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "imagen_vigilancia",
        "severity": "HIGH",
        "description": "Tabla \"imagen_vigilancia\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "huella_digital",
        "severity": "HIGH",
        "description": "Tabla \"huella_digital\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "direccion_ip",
        "severity": "HIGH",
        "description": "Tabla \"direccion_ip\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "cookies_identificacion",
        "severity": "HIGH",
        "description": "Tabla \"cookies_identificacion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "numero_cuenta",
        "severity": "HIGH",
        "description": "Tabla \"numero_cuenta\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "patente_vehiculo",
        "severity": "HIGH",
        "description": "Tabla \"patente_vehiculo\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "origen_racial",
        "severity": "HIGH",
        "description": "Tabla \"origen_racial\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "opiniones_politicas",
        "severity": "HIGH",
        "description": "Tabla \"opiniones_politicas\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "convicciones_religiosas",
        "severity": "HIGH",
        "description": "Tabla \"convicciones_religiosas\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "afiliacion_sindical",
        "severity": "HIGH",
        "description": "Tabla \"afiliacion_sindical\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "vida_sexual",
        "severity": "HIGH",
        "description": "Tabla \"vida_sexual\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "antecedentes_penales",
        "severity": "HIGH",
        "description": "Tabla \"antecedentes_penales\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "localizacion_permanente",
        "severity": "HIGH",
        "description": "Tabla \"localizacion_permanente\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ingresos_economicos",
        "severity": "HIGH",
        "description": "Tabla \"ingresos_economicos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "historial_crediticio",
        "severity": "HIGH",
        "description": "Tabla \"historial_crediticio\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "transacciones_bancarias",
        "severity": "HIGH",
        "description": "Tabla \"transacciones_bancarias\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "habitos_consumo",
        "severity": "HIGH",
        "description": "Tabla \"habitos_consumo\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "scoring_financiero",
        "severity": "HIGH",
        "description": "Tabla \"scoring_financiero\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "cargo_posicion",
        "severity": "HIGH",
        "description": "Tabla \"cargo_posicion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "sueldo_remuneracion",
        "severity": "HIGH",
        "description": "Tabla \"sueldo_remuneracion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "evaluaciones_desempeno",
        "severity": "HIGH",
        "description": "Tabla \"evaluaciones_desempeno\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "historial_laboral",
        "severity": "HIGH",
        "description": "Tabla \"historial_laboral\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "referencias_laborales",
        "severity": "HIGH",
        "description": "Tabla \"referencias_laborales\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "licencias_medicas",
        "severity": "HIGH",
        "description": "Tabla \"licencias_medicas\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "prevision_social",
        "severity": "HIGH",
        "description": "Tabla \"prevision_social\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "titulos_profesionales",
        "severity": "HIGH",
        "description": "Tabla \"titulos_profesionales\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "historial_academico",
        "severity": "HIGH",
        "description": "Tabla \"historial_academico\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "registros_llamadas",
        "severity": "HIGH",
        "description": "Tabla \"registros_llamadas\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "metadata_comunicaciones",
        "severity": "HIGH",
        "description": "Tabla \"metadata_comunicaciones\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "contenido_comunicaciones",
        "severity": "HIGH",
        "description": "Tabla \"contenido_comunicaciones\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "cookies_analiticas",
        "severity": "HIGH",
        "description": "Tabla \"cookies_analiticas\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "cookies_publicidad",
        "severity": "HIGH",
        "description": "Tabla \"cookies_publicidad\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "historial_navegacion",
        "severity": "HIGH",
        "description": "Tabla \"historial_navegacion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "comportamiento_online",
        "severity": "HIGH",
        "description": "Tabla \"comportamiento_online\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "dispositivos_id",
        "severity": "HIGH",
        "description": "Tabla \"dispositivos_id\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "consentimiento_expreso",
        "severity": "HIGH",
        "description": "Tabla \"consentimiento_expreso\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "consentimiento_padres",
        "severity": "HIGH",
        "description": "Tabla \"consentimiento_padres\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "mision_publica",
        "severity": "HIGH",
        "description": "Tabla \"mision_publica\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "investigacion_cientifica",
        "severity": "HIGH",
        "description": "Tabla \"investigacion_cientifica\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "interes_publico_salud",
        "severity": "HIGH",
        "description": "Tabla \"interes_publico_salud\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "medicina_laboral",
        "severity": "HIGH",
        "description": "Tabla \"medicina_laboral\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "libertad_expresion",
        "severity": "HIGH",
        "description": "Tabla \"libertad_expresion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "seguridad_nacional",
        "severity": "HIGH",
        "description": "Tabla \"seguridad_nacional\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "archivos_historicos",
        "severity": "HIGH",
        "description": "Tabla \"archivos_historicos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "prevencion_delitos",
        "severity": "HIGH",
        "description": "Tabla \"prevencion_delitos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "proteccion_menores",
        "severity": "HIGH",
        "description": "Tabla \"proteccion_menores\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "durante_relacion",
        "severity": "HIGH",
        "description": "Tabla \"durante_relacion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "indefinido_archivo_historico",
        "severity": "HIGH",
        "description": "Tabla \"indefinido_archivo_historico\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "hasta_prescripcion",
        "severity": "HIGH",
        "description": "Tabla \"hasta_prescripcion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "rat_consolidado",
        "severity": "HIGH",
        "description": "Tabla \"rat_consolidado\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "document_type",
        "severity": "HIGH",
        "description": "Tabla \"document_type\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "INFORME_RAT_PDF",
        "severity": "HIGH",
        "description": "Tabla \"INFORME_RAT_PDF\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "EXPORT_EXCEL_RATS",
        "severity": "HIGH",
        "description": "Tabla \"EXPORT_EXCEL_RATS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "REPORTE_CONSOLIDADO",
        "severity": "HIGH",
        "description": "Tabla \"REPORTE_CONSOLIDADO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "rat_id",
        "severity": "HIGH",
        "description": "Tabla \"rat_id\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "table_name",
        "severity": "HIGH",
        "description": "Tabla \"table_name\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "record_id",
        "severity": "HIGH",
        "description": "Tabla \"record_id\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "compliance_ejecutivo",
        "severity": "HIGH",
        "description": "Tabla \"compliance_ejecutivo\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "auditoria_completa",
        "severity": "HIGH",
        "description": "Tabla \"auditoria_completa\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "system_admin",
        "severity": "HIGH",
        "description": "Tabla \"system_admin\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "calculated_at",
        "severity": "HIGH",
        "description": "Tabla \"calculated_at\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "sb_publishable_",
        "severity": "HIGH",
        "description": "Tabla \"sb_publishable_\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "user_id",
        "severity": "HIGH",
        "description": "Tabla \"user_id\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "supabase_production",
        "severity": "HIGH",
        "description": "Tabla \"supabase_production\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "supabase_error",
        "severity": "HIGH",
        "description": "Tabla \"supabase_error\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "MODIFICACION_REQUERIDA",
        "severity": "HIGH",
        "description": "Tabla \"MODIFICACION_REQUERIDA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "PENDIENTE_FIRMA",
        "severity": "HIGH",
        "description": "Tabla \"PENDIENTE_FIRMA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "EN_EVALUACION",
        "severity": "HIGH",
        "description": "Tabla \"EN_EVALUACION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "en_proceso",
        "severity": "HIGH",
        "description": "Tabla \"en_proceso\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "intro_only",
        "severity": "HIGH",
        "description": "Tabla \"intro_only\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "demo_view_only",
        "severity": "HIGH",
        "description": "Tabla \"demo_view_only\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "inventario_rats",
        "severity": "HIGH",
        "description": "Tabla \"inventario_rats\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "EIPD_GENERATED",
        "severity": "HIGH",
        "description": "Tabla \"EIPD_GENERATED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DPO_TASK_CREATED",
        "severity": "HIGH",
        "description": "Tabla \"DPO_TASK_CREATED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "MANUAL_REFRESH",
        "severity": "HIGH",
        "description": "Tabla \"MANUAL_REFRESH\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "tenants",
        "severity": "HIGH",
        "description": "Tabla \"tenants\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "super_admin",
        "severity": "HIGH",
        "description": "Tabla \"super_admin\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "machine_learning",
        "severity": "HIGH",
        "description": "Tabla \"machine_learning\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "deep_learning",
        "severity": "HIGH",
        "description": "Tabla \"deep_learning\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "algoritmo_evaluado",
        "severity": "HIGH",
        "description": "Tabla \"algoritmo_evaluado\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "tipo_algoritmo",
        "severity": "HIGH",
        "description": "Tabla \"tipo_algoritmo\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "medidas_proteccion",
        "severity": "HIGH",
        "description": "Tabla \"medidas_proteccion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "reglas_logicas",
        "severity": "HIGH",
        "description": "Tabla \"reglas_logicas\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "nivel_transparencia",
        "severity": "HIGH",
        "description": "Tabla \"nivel_transparencia\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "bases_licitud",
        "severity": "HIGH",
        "description": "Tabla \"bases_licitud\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "novedades_chile",
        "severity": "HIGH",
        "description": "Tabla \"novedades_chile\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CLOUD_HOSTING",
        "severity": "HIGH",
        "description": "Tabla \"CLOUD_HOSTING\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CLOUD_COMPUTING",
        "severity": "HIGH",
        "description": "Tabla \"CLOUD_COMPUTING\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "rsm_chile",
        "severity": "HIGH",
        "description": "Tabla \"rsm_chile\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_EVALUATION_FAILED",
        "severity": "HIGH",
        "description": "Tabla \"RAT_EVALUATION_FAILED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DASHBOARD_FETCH_FAILED",
        "severity": "HIGH",
        "description": "Tabla \"DASHBOARD_FETCH_FAILED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "EIPD_GENERATION_FAILED",
        "severity": "HIGH",
        "description": "Tabla \"EIPD_GENERATION_FAILED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DPA_GENERATION_FAILED",
        "severity": "HIGH",
        "description": "Tabla \"DPA_GENERATION_FAILED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "WEBHOOK_REGISTRATION_FAILED",
        "severity": "HIGH",
        "description": "Tabla \"WEBHOOK_REGISTRATION_FAILED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "REGULATORY_UPDATES_FAILED",
        "severity": "HIGH",
        "description": "Tabla \"REGULATORY_UPDATES_FAILED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "BATCH_PROCESSING_FAILED",
        "severity": "HIGH",
        "description": "Tabla \"BATCH_PROCESSING_FAILED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "EIPD_OBLIGATORIA",
        "severity": "HIGH",
        "description": "Tabla \"EIPD_OBLIGATORIA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DPA_REQUERIDO",
        "severity": "HIGH",
        "description": "Tabla \"DPA_REQUERIDO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "draft_ready",
        "severity": "HIGH",
        "description": "Tabla \"draft_ready\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "profesional_salud_autorizado",
        "severity": "HIGH",
        "description": "Tabla \"profesional_salud_autorizado\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "registro_profesional_verificado",
        "severity": "HIGH",
        "description": "Tabla \"registro_profesional_verificado\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "autorizacion_especifica_salud",
        "severity": "HIGH",
        "description": "Tabla \"autorizacion_especifica_salud\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DATOS_SENSIBLES_SALUD",
        "severity": "HIGH",
        "description": "Tabla \"DATOS_SENSIBLES_SALUD\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "segun_finalidad",
        "severity": "HIGH",
        "description": "Tabla \"segun_finalidad\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "realmente_necesarios",
        "severity": "HIGH",
        "description": "Tabla \"realmente_necesarios\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "alternativas_menos_invasivas",
        "severity": "HIGH",
        "description": "Tabla \"alternativas_menos_invasivas\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "documentacion_tecnica_especifica",
        "severity": "HIGH",
        "description": "Tabla \"documentacion_tecnica_especifica\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "encriptacion_especifica_biometrica",
        "severity": "HIGH",
        "description": "Tabla \"encriptacion_especifica_biometrica\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "almacenamiento_separado",
        "severity": "HIGH",
        "description": "Tabla \"almacenamiento_separado\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "hash_irreversible",
        "severity": "HIGH",
        "description": "Tabla \"hash_irreversible\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "eliminacion_segura_garantizada",
        "severity": "HIGH",
        "description": "Tabla \"eliminacion_segura_garantizada\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "estrictamente_necesario_revision_anual",
        "severity": "HIGH",
        "description": "Tabla \"estrictamente_necesario_revision_anual\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "consentimiento_parental_especifico",
        "severity": "HIGH",
        "description": "Tabla \"consentimiento_parental_especifico\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "verificacion_identidad_padre_madre_tutor",
        "severity": "HIGH",
        "description": "Tabla \"verificacion_identidad_padre_madre_tutor\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "proceso_doble_verificacion",
        "severity": "HIGH",
        "description": "Tabla \"proceso_doble_verificacion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "informacion_adaptada_menores",
        "severity": "HIGH",
        "description": "Tabla \"informacion_adaptada_menores\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "no_transferencias_internacionales_sin_garantias",
        "severity": "HIGH",
        "description": "Tabla \"no_transferencias_internacionales_sin_garantias\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "no_perfilado_marketing_directo",
        "severity": "HIGH",
        "description": "Tabla \"no_perfilado_marketing_directo\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "plazo_hasta_mayoria_edad",
        "severity": "HIGH",
        "description": "Tabla \"plazo_hasta_mayoria_edad\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "formulario_consentimiento_parental",
        "severity": "HIGH",
        "description": "Tabla \"formulario_consentimiento_parental\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "informacion_privacy_friendly",
        "severity": "HIGH",
        "description": "Tabla \"informacion_privacy_friendly\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "procedimiento_revocacion_simplificado",
        "severity": "HIGH",
        "description": "Tabla \"procedimiento_revocacion_simplificado\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "revision_cada_6_meses",
        "severity": "HIGH",
        "description": "Tabla \"revision_cada_6_meses\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "autorizacion_agencia_posible",
        "severity": "HIGH",
        "description": "Tabla \"autorizacion_agencia_posible\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "portabilidad_facilitados",
        "severity": "HIGH",
        "description": "Tabla \"portabilidad_facilitados\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "menores_14",
        "severity": "HIGH",
        "description": "Tabla \"menores_14\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ERROR_CRITICO",
        "severity": "HIGH",
        "description": "Tabla \"ERROR_CRITICO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DETENER_PROCESO",
        "severity": "HIGH",
        "description": "Tabla \"DETENER_PROCESO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CAMBIAR_BASE_LEGAL",
        "severity": "HIGH",
        "description": "Tabla \"CAMBIAR_BASE_LEGAL\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "requiere_eipd",
        "severity": "HIGH",
        "description": "Tabla \"requiere_eipd\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "evaluacion_especial",
        "severity": "HIGH",
        "description": "Tabla \"evaluacion_especial\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "medidas_reforzadas",
        "severity": "HIGH",
        "description": "Tabla \"medidas_reforzadas\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CONSENTIMIENTO_SALUD_ESPECIFICO",
        "severity": "HIGH",
        "description": "Tabla \"CONSENTIMIENTO_SALUD_ESPECIFICO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "REVISAR_ALTERNATIVAS",
        "severity": "HIGH",
        "description": "Tabla \"REVISAR_ALTERNATIVAS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "requiere_dpia",
        "severity": "HIGH",
        "description": "Tabla \"requiere_dpia\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "consulta_previa",
        "severity": "HIGH",
        "description": "Tabla \"consulta_previa\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "si_mas_1000_titulares",
        "severity": "HIGH",
        "description": "Tabla \"si_mas_1000_titulares\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "MEDIDAS_TECNICAS_OBLIGATORIAS",
        "severity": "HIGH",
        "description": "Tabla \"MEDIDAS_TECNICAS_OBLIGATORIAS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "almacenamiento_separado_resto_datos",
        "severity": "HIGH",
        "description": "Tabla \"almacenamiento_separado_resto_datos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "hash_irreversible_template_matching",
        "severity": "HIGH",
        "description": "Tabla \"hash_irreversible_template_matching\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "NO_INTERES_LEGITIMO",
        "severity": "HIGH",
        "description": "Tabla \"NO_INTERES_LEGITIMO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "NO_TRANSFERENCIAS_SIN_GARANTIAS",
        "severity": "HIGH",
        "description": "Tabla \"NO_TRANSFERENCIAS_SIN_GARANTIAS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "NO_PERFILADO_MARKETING",
        "severity": "HIGH",
        "description": "Tabla \"NO_PERFILADO_MARKETING\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "PLAZO_HASTA_MAYORIA_EDAD",
        "severity": "HIGH",
        "description": "Tabla \"PLAZO_HASTA_MAYORIA_EDAD\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CONSENTIMIENTO_PARENTAL",
        "severity": "HIGH",
        "description": "Tabla \"CONSENTIMIENTO_PARENTAL\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "INFORMACION_PRIVACY_FRIENDLY",
        "severity": "HIGH",
        "description": "Tabla \"INFORMACION_PRIVACY_FRIENDLY\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "PROCEDIMIENTO_REVOCACION_SIMPLIFICADO",
        "severity": "HIGH",
        "description": "Tabla \"PROCEDIMIENTO_REVOCACION_SIMPLIFICADO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "supervision_reforzada",
        "severity": "HIGH",
        "description": "Tabla \"supervision_reforzada\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "nivel_riesgo_geo",
        "severity": "HIGH",
        "description": "Tabla \"nivel_riesgo_geo\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "gps_exacto",
        "severity": "HIGH",
        "description": "Tabla \"gps_exacto\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CONSULTAR_AGENCIA",
        "severity": "HIGH",
        "description": "Tabla \"CONSULTAR_AGENCIA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "derechos_reforzados",
        "severity": "HIGH",
        "description": "Tabla \"derechos_reforzados\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "derecho_oposicion_facilitado",
        "severity": "HIGH",
        "description": "Tabla \"derecho_oposicion_facilitado\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "derecho_portabilidad_facilitado",
        "severity": "HIGH",
        "description": "Tabla \"derecho_portabilidad_facilitado\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ciudad_region",
        "severity": "HIGH",
        "description": "Tabla \"ciudad_region\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ip_approximate",
        "severity": "HIGH",
        "description": "Tabla \"ip_approximate\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "opt_in_especifico_requerido",
        "severity": "HIGH",
        "description": "Tabla \"opt_in_especifico_requerido\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "anonimizacion_obligatoria",
        "severity": "HIGH",
        "description": "Tabla \"anonimizacion_obligatoria\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "alto_riesgo",
        "severity": "HIGH",
        "description": "Tabla \"alto_riesgo\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "eipd_obligatoria",
        "severity": "HIGH",
        "description": "Tabla \"eipd_obligatoria\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "AUTO_SYNC",
        "severity": "HIGH",
        "description": "Tabla \"AUTO_SYNC\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "LEY_21719",
        "severity": "HIGH",
        "description": "Tabla \"LEY_21719\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CIIU_4_CL",
        "severity": "HIGH",
        "description": "Tabla \"CIIU_4_CL\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CODIGO_TRIBUTARIO",
        "severity": "HIGH",
        "description": "Tabla \"CODIGO_TRIBUTARIO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "LEY_BANCOS_CHILE",
        "severity": "HIGH",
        "description": "Tabla \"LEY_BANCOS_CHILE\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "NCG_CMF_411",
        "severity": "HIGH",
        "description": "Tabla \"NCG_CMF_411\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CODIGO_SANITARIO",
        "severity": "HIGH",
        "description": "Tabla \"CODIGO_SANITARIO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "LEY_20584",
        "severity": "HIGH",
        "description": "Tabla \"LEY_20584\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DS_466_MINSAL",
        "severity": "HIGH",
        "description": "Tabla \"DS_466_MINSAL\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "LEY_20370",
        "severity": "HIGH",
        "description": "Tabla \"LEY_20370\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "LEY_19628",
        "severity": "HIGH",
        "description": "Tabla \"LEY_19628\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "GDPR_EU",
        "severity": "HIGH",
        "description": "Tabla \"GDPR_EU\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ISO_27001",
        "severity": "HIGH",
        "description": "Tabla \"ISO_27001\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "NIST_FRAMEWORK",
        "severity": "HIGH",
        "description": "Tabla \"NIST_FRAMEWORK\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "scoring_crediticio",
        "severity": "HIGH",
        "description": "Tabla \"scoring_crediticio\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "historial_financiero",
        "severity": "HIGH",
        "description": "Tabla \"historial_financiero\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "antecedentes_riesgo",
        "severity": "HIGH",
        "description": "Tabla \"antecedentes_riesgo\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "resultados_examenes",
        "severity": "HIGH",
        "description": "Tabla \"resultados_examenes\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "historia_clinica",
        "severity": "HIGH",
        "description": "Tabla \"historia_clinica\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "rendimiento_academico",
        "severity": "HIGH",
        "description": "Tabla \"rendimiento_academico\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "datos_menores",
        "severity": "HIGH",
        "description": "Tabla \"datos_menores\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "situacion_familiar",
        "severity": "HIGH",
        "description": "Tabla \"situacion_familiar\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "datos_estudiantes",
        "severity": "HIGH",
        "description": "Tabla \"datos_estudiantes\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "datos_funcionarios",
        "severity": "HIGH",
        "description": "Tabla \"datos_funcionarios\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "datos_clientes",
        "severity": "HIGH",
        "description": "Tabla \"datos_clientes\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "documentos_legales",
        "severity": "HIGH",
        "description": "Tabla \"documentos_legales\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "procesos_judiciales",
        "severity": "HIGH",
        "description": "Tabla \"procesos_judiciales\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "algoritmos_decisionales",
        "severity": "HIGH",
        "description": "Tabla \"algoritmos_decisionales\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "bases_datos_relacionales",
        "severity": "HIGH",
        "description": "Tabla \"bases_datos_relacionales\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ubicacion_aproximada",
        "severity": "HIGH",
        "description": "Tabla \"ubicacion_aproximada\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DPIA_ALGORITMOS",
        "severity": "HIGH",
        "description": "Tabla \"DPIA_ALGORITMOS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "TRANSFERENCIA_EEUU",
        "severity": "HIGH",
        "description": "Tabla \"TRANSFERENCIA_EEUU\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DECISIONES_AUTOMATIZADAS",
        "severity": "HIGH",
        "description": "Tabla \"DECISIONES_AUTOMATIZADAS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_CREADO",
        "severity": "HIGH",
        "description": "Tabla \"RAT_CREADO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "EIPD_GENERADA",
        "severity": "HIGH",
        "description": "Tabla \"EIPD_GENERADA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DPO_APROBADO",
        "severity": "HIGH",
        "description": "Tabla \"DPO_APROBADO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "REVISION_EIPD",
        "severity": "HIGH",
        "description": "Tabla \"REVISION_EIPD\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "supabase_fallback",
        "severity": "HIGH",
        "description": "Tabla \"supabase_fallback\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CONSULTA_PREVIA",
        "severity": "HIGH",
        "description": "Tabla \"CONSULTA_PREVIA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "datos_medicos",
        "severity": "HIGH",
        "description": "Tabla \"datos_medicos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CONSENTIMIENTO_MEDICO",
        "severity": "HIGH",
        "description": "Tabla \"CONSENTIMIENTO_MEDICO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "AUTORIZACION_PARENTAL",
        "severity": "HIGH",
        "description": "Tabla \"AUTORIZACION_PARENTAL\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "POLITICAS_SCORING",
        "severity": "HIGH",
        "description": "Tabla \"POLITICAS_SCORING\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "POLITICAS_TRANSPARENCIA",
        "severity": "HIGH",
        "description": "Tabla \"POLITICAS_TRANSPARENCIA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "MEDIDAS_MASIVAS",
        "severity": "HIGH",
        "description": "Tabla \"MEDIDAS_MASIVAS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "EVALUACION_VOLUMEN",
        "severity": "HIGH",
        "description": "Tabla \"EVALUACION_VOLUMEN\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ANALISIS_LICITUD",
        "severity": "HIGH",
        "description": "Tabla \"ANALISIS_LICITUD\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "POLITICA_RETENCION",
        "severity": "HIGH",
        "description": "Tabla \"POLITICA_RETENCION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "evaluacion_seguridad",
        "severity": "HIGH",
        "description": "Tabla \"evaluacion_seguridad\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ACTIVIDAD_DPO_CREADA",
        "severity": "HIGH",
        "description": "Tabla \"ACTIVIDAD_DPO_CREADA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "NOTIFICACION_ENVIADA",
        "severity": "HIGH",
        "description": "Tabla \"NOTIFICACION_ENVIADA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DPIA_GENERADA",
        "severity": "HIGH",
        "description": "Tabla \"DPIA_GENERADA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ALERTA_CRITICA",
        "severity": "HIGH",
        "description": "Tabla \"ALERTA_CRITICA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "SISTEMA_IA",
        "severity": "HIGH",
        "description": "Tabla \"SISTEMA_IA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "REVISAR_RIESGO_CRITICO",
        "severity": "HIGH",
        "description": "Tabla \"REVISAR_RIESGO_CRITICO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "REVISAR_EIPD_ALTO_RIESGO",
        "severity": "HIGH",
        "description": "Tabla \"REVISAR_EIPD_ALTO_RIESGO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "REQUIERE_ELABORACION",
        "severity": "HIGH",
        "description": "Tabla \"REQUIERE_ELABORACION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ALERTA_SISTEMA_CRITICA",
        "severity": "HIGH",
        "description": "Tabla \"ALERTA_SISTEMA_CRITICA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RIESGO_CRITICO_DETECTADO",
        "severity": "HIGH",
        "description": "Tabla \"RIESGO_CRITICO_DETECTADO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "laboratorio_autorizado_isp",
        "severity": "HIGH",
        "description": "Tabla \"laboratorio_autorizado_isp\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "certificacion_tecnica_vigente",
        "severity": "HIGH",
        "description": "Tabla \"certificacion_tecnica_vigente\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "personal_calificado_certificado",
        "severity": "HIGH",
        "description": "Tabla \"personal_calificado_certificado\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "informacion_herencia_familiar",
        "severity": "HIGH",
        "description": "Tabla \"informacion_herencia_familiar\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "posibles_discriminaciones_seguros_empleo",
        "severity": "HIGH",
        "description": "Tabla \"posibles_discriminaciones_seguros_empleo\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "derecho_no_saber_resultados",
        "severity": "HIGH",
        "description": "Tabla \"derecho_no_saber_resultados\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "asesoramiento_genetico_disponible",
        "severity": "HIGH",
        "description": "Tabla \"asesoramiento_genetico_disponible\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "encriptacion_especifica_geneticos",
        "severity": "HIGH",
        "description": "Tabla \"encriptacion_especifica_geneticos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "acceso_restringido_personal_autorizado",
        "severity": "HIGH",
        "description": "Tabla \"acceso_restringido_personal_autorizado\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "auditorias_seguridad_mensuales",
        "severity": "HIGH",
        "description": "Tabla \"auditorias_seguridad_mensuales\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "plan_contingencia_brechas",
        "severity": "HIGH",
        "description": "Tabla \"plan_contingencia_brechas\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "autorizacion_cmf",
        "severity": "HIGH",
        "description": "Tabla \"autorizacion_cmf\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "normas_generales_cmf_scoring",
        "severity": "HIGH",
        "description": "Tabla \"normas_generales_cmf_scoring\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "modelo_estadistico_validado_risk_management",
        "severity": "HIGH",
        "description": "Tabla \"modelo_estadistico_validado_risk_management\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "factores_scoring_no_discriminatorios",
        "severity": "HIGH",
        "description": "Tabla \"factores_scoring_no_discriminatorios\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "supervision_humana_real",
        "severity": "HIGH",
        "description": "Tabla \"supervision_humana_real\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "contrato_credito_requiere_evaluacion",
        "severity": "HIGH",
        "description": "Tabla \"contrato_credito_requiere_evaluacion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "decision_factores_objetivos",
        "severity": "HIGH",
        "description": "Tabla \"decision_factores_objetivos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "supervision_humana_decisiones_limite",
        "severity": "HIGH",
        "description": "Tabla \"supervision_humana_decisiones_limite\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "derecho_impugnacion_humana_siempre",
        "severity": "HIGH",
        "description": "Tabla \"derecho_impugnacion_humana_siempre\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "transparencia_factores_considerados",
        "severity": "HIGH",
        "description": "Tabla \"transparencia_factores_considerados\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "aprobacion_comite_etica_universidad",
        "severity": "HIGH",
        "description": "Tabla \"aprobacion_comite_etica_universidad\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "consentimiento_informado_investigacion",
        "severity": "HIGH",
        "description": "Tabla \"consentimiento_informado_investigacion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "beneficio_academico_justifica_recoleccion",
        "severity": "HIGH",
        "description": "Tabla \"beneficio_academico_justifica_recoleccion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "medidas_anonimizacion_post_investigacion",
        "severity": "HIGH",
        "description": "Tabla \"medidas_anonimizacion_post_investigacion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "derecho_retiro_sin_penalizacion",
        "severity": "HIGH",
        "description": "Tabla \"derecho_retiro_sin_penalizacion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "participacion_voluntaria",
        "severity": "HIGH",
        "description": "Tabla \"participacion_voluntaria\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "obligaciones_educativas_basicas",
        "severity": "HIGH",
        "description": "Tabla \"obligaciones_educativas_basicas\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "participacion_voluntaria_sin_impacto_academico",
        "severity": "HIGH",
        "description": "Tabla \"participacion_voluntaria_sin_impacto_academico\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "retiro_investigacion_sin_consecuencias",
        "severity": "HIGH",
        "description": "Tabla \"retiro_investigacion_sin_consecuencias\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "informacion_resultados_si_desean",
        "severity": "HIGH",
        "description": "Tabla \"informacion_resultados_si_desean\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "anonimizacion_garantizada_publicaciones",
        "severity": "HIGH",
        "description": "Tabla \"anonimizacion_garantizada_publicaciones\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "decisiones_financieras",
        "severity": "HIGH",
        "description": "Tabla \"decisiones_financieras\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "investigacion_academica",
        "severity": "HIGH",
        "description": "Tabla \"investigacion_academica\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "VERIFICAR_REGISTRO_CMF",
        "severity": "HIGH",
        "description": "Tabla \"VERIFICAR_REGISTRO_CMF\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "WARNING_LEGAL",
        "severity": "HIGH",
        "description": "Tabla \"WARNING_LEGAL\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "OBTENER_APROBACION_ETICA",
        "severity": "HIGH",
        "description": "Tabla \"OBTENER_APROBACION_ETICA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "consulta_previa_agencia",
        "severity": "HIGH",
        "description": "Tabla \"consulta_previa_agencia\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CONSULTA_PREVIA_AGENCIA",
        "severity": "HIGH",
        "description": "Tabla \"CONSULTA_PREVIA_AGENCIA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "auditoria_trimestral",
        "severity": "HIGH",
        "description": "Tabla \"auditoria_trimestral\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "EIPD_GENETICA",
        "severity": "HIGH",
        "description": "Tabla \"EIPD_GENETICA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "eipd_genetica_v1",
        "severity": "HIGH",
        "description": "Tabla \"eipd_genetica_v1\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CONSENTIMIENTO_GENETICO",
        "severity": "HIGH",
        "description": "Tabla \"CONSENTIMIENTO_GENETICO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "consentimiento_genetico_v1",
        "severity": "HIGH",
        "description": "Tabla \"consentimiento_genetico_v1\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "PROTOCOLO_SEGURIDAD_GENETICOS",
        "severity": "HIGH",
        "description": "Tabla \"PROTOCOLO_SEGURIDAD_GENETICOS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "protocolo_seguridad_geneticos_v1",
        "severity": "HIGH",
        "description": "Tabla \"protocolo_seguridad_geneticos_v1\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CASUISTICA_GENETICOS",
        "severity": "HIGH",
        "description": "Tabla \"CASUISTICA_GENETICOS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "evaluacion_riesgo",
        "severity": "HIGH",
        "description": "Tabla \"evaluacion_riesgo\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "decision_automatizada",
        "severity": "HIGH",
        "description": "Tabla \"decision_automatizada\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "Circular_SBS",
        "severity": "HIGH",
        "description": "Tabla \"Circular_SBS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CEI_PRINCIPAL",
        "severity": "HIGH",
        "description": "Tabla \"CEI_PRINCIPAL\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "COMITE_BIOETICA",
        "severity": "HIGH",
        "description": "Tabla \"COMITE_BIOETICA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "Codigo_Etica_Investigacion",
        "severity": "HIGH",
        "description": "Tabla \"Codigo_Etica_Investigacion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "Normas_CONCYTEC",
        "severity": "HIGH",
        "description": "Tabla \"Normas_CONCYTEC\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "seguridad_empresa",
        "severity": "HIGH",
        "description": "Tabla \"seguridad_empresa\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "mejora_servicios",
        "severity": "HIGH",
        "description": "Tabla \"mejora_servicios\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "marketing_directo",
        "severity": "HIGH",
        "description": "Tabla \"marketing_directo\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "investigacion_mercado",
        "severity": "HIGH",
        "description": "Tabla \"investigacion_mercado\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "cumplimiento_contractual",
        "severity": "HIGH",
        "description": "Tabla \"cumplimiento_contractual\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "cliente_existente",
        "severity": "HIGH",
        "description": "Tabla \"cliente_existente\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "datos_publicos",
        "severity": "HIGH",
        "description": "Tabla \"datos_publicos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "FAVORABLE_EMPRESA",
        "severity": "HIGH",
        "description": "Tabla \"FAVORABLE_EMPRESA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "BALANCING_APROBADO",
        "severity": "HIGH",
        "description": "Tabla \"BALANCING_APROBADO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "BALANCING_RECHAZADO",
        "severity": "HIGH",
        "description": "Tabla \"BALANCING_RECHAZADO\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "IMPLEMENTAR_DERECHO_OPOSICION",
        "severity": "HIGH",
        "description": "Tabla \"IMPLEMENTAR_DERECHO_OPOSICION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ERROR_BALANCING_DESFAVORABLE",
        "severity": "HIGH",
        "description": "Tabla \"ERROR_BALANCING_DESFAVORABLE\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "IMPLEMENTAR_MEDIDAS_BALANCING",
        "severity": "HIGH",
        "description": "Tabla \"IMPLEMENTAR_MEDIDAS_BALANCING\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "servicio_publico",
        "severity": "HIGH",
        "description": "Tabla \"servicio_publico\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "relacion_comercial",
        "severity": "HIGH",
        "description": "Tabla \"relacion_comercial\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "primera_interaccion",
        "severity": "HIGH",
        "description": "Tabla \"primera_interaccion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "datos_privados",
        "severity": "HIGH",
        "description": "Tabla \"datos_privados\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "datos_intimos",
        "severity": "HIGH",
        "description": "Tabla \"datos_intimos\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "datos_semiprivados",
        "severity": "HIGH",
        "description": "Tabla \"datos_semiprivados\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "personas_vulnerables",
        "severity": "HIGH",
        "description": "Tabla \"personas_vulnerables\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "clientes_frecuentes",
        "severity": "HIGH",
        "description": "Tabla \"clientes_frecuentes\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "datos_navegacion",
        "severity": "HIGH",
        "description": "Tabla \"datos_navegacion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ai_supervisor_enabled",
        "severity": "HIGH",
        "description": "Tabla \"ai_supervisor_enabled\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "rat_creation",
        "severity": "HIGH",
        "description": "Tabla \"rat_creation\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "business_logic_violation",
        "severity": "HIGH",
        "description": "Tabla \"business_logic_violation\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "legal_compliance_issue",
        "severity": "HIGH",
        "description": "Tabla \"legal_compliance_issue\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "data_quality_concern",
        "severity": "HIGH",
        "description": "Tabla \"data_quality_concern\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "duplicate_detected",
        "severity": "HIGH",
        "description": "Tabla \"duplicate_detected\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "dpo_tasks_created",
        "severity": "HIGH",
        "description": "Tabla \"dpo_tasks_created\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "change_base_juridica",
        "severity": "HIGH",
        "description": "Tabla \"change_base_juridica\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "add_security_measures",
        "severity": "HIGH",
        "description": "Tabla \"add_security_measures\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "acceso_restringido",
        "severity": "HIGH",
        "description": "Tabla \"acceso_restringido\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "manual_review_required",
        "severity": "HIGH",
        "description": "Tabla \"manual_review_required\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "check_legal_compliance",
        "severity": "HIGH",
        "description": "Tabla \"check_legal_compliance\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "manual_review",
        "severity": "HIGH",
        "description": "Tabla \"manual_review\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "block_creation",
        "severity": "HIGH",
        "description": "Tabla \"block_creation\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "review_before_creation",
        "severity": "HIGH",
        "description": "Tabla \"review_before_creation\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "inform_user",
        "severity": "HIGH",
        "description": "Tabla \"inform_user\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CONSENT_MANAGEMENT",
        "severity": "HIGH",
        "description": "Tabla \"CONSENT_MANAGEMENT\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "covered_countries",
        "severity": "HIGH",
        "description": "Tabla \"covered_countries\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "assigned_existing",
        "severity": "HIGH",
        "description": "Tabla \"assigned_existing\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "created_new",
        "severity": "HIGH",
        "description": "Tabla \"created_new\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ai_auto_assignment",
        "severity": "HIGH",
        "description": "Tabla \"ai_auto_assignment\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ai_supervisor",
        "severity": "HIGH",
        "description": "Tabla \"ai_supervisor\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ai_intervention",
        "severity": "HIGH",
        "description": "Tabla \"ai_intervention\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ai_supervised",
        "severity": "HIGH",
        "description": "Tabla \"ai_supervised\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "organizacion_id",
        "severity": "HIGH",
        "description": "Tabla \"organizacion_id\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "razon_social",
        "severity": "HIGH",
        "description": "Tabla \"razon_social\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "email_empresa",
        "severity": "HIGH",
        "description": "Tabla \"email_empresa\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "unique_rat_per_activity_per_tenant",
        "severity": "HIGH",
        "description": "Tabla \"unique_rat_per_activity_per_tenant\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "valid_risk_level",
        "severity": "HIGH",
        "description": "Tabla \"valid_risk_level\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "complete_dpo_info",
        "severity": "HIGH",
        "description": "Tabla \"complete_dpo_info\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "unique_rut",
        "severity": "HIGH",
        "description": "Tabla \"unique_rut\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "valid_organization_data",
        "severity": "HIGH",
        "description": "Tabla \"valid_organization_data\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "dpo_nombre",
        "severity": "HIGH",
        "description": "Tabla \"dpo_nombre\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "dpo_email",
        "severity": "HIGH",
        "description": "Tabla \"dpo_email\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "MONITOR_INIT_FAILED",
        "severity": "HIGH",
        "description": "Tabla \"MONITOR_INIT_FAILED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "NETWORK_ERROR",
        "severity": "HIGH",
        "description": "Tabla \"NETWORK_ERROR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CONNECTION_FAILED",
        "severity": "HIGH",
        "description": "Tabla \"CONNECTION_FAILED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CRITICAL_FAILURE",
        "severity": "HIGH",
        "description": "Tabla \"CRITICAL_FAILURE\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "TABLE_MISSING",
        "severity": "HIGH",
        "description": "Tabla \"TABLE_MISSING\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "TABLE_PERMISSION_DENIED",
        "severity": "HIGH",
        "description": "Tabla \"TABLE_PERMISSION_DENIED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "TABLE_CRITICAL_ERROR",
        "severity": "HIGH",
        "description": "Tabla \"TABLE_CRITICAL_ERROR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ORPHAN_RAT",
        "severity": "HIGH",
        "description": "Tabla \"ORPHAN_RAT\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ORPHAN_PROVIDER",
        "severity": "HIGH",
        "description": "Tabla \"ORPHAN_PROVIDER\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "REFERENTIAL_INTEGRITY",
        "severity": "HIGH",
        "description": "Tabla \"REFERENTIAL_INTEGRITY\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "INTEGRITY_CHECK_FAILED",
        "severity": "HIGH",
        "description": "Tabla \"INTEGRITY_CHECK_FAILED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RLS_406_ERROR",
        "severity": "HIGH",
        "description": "Tabla \"RLS_406_ERROR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RLS_TEST_FAILED",
        "severity": "HIGH",
        "description": "Tabla \"RLS_TEST_FAILED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "INCOMPLETE_RAT_DATA",
        "severity": "HIGH",
        "description": "Tabla \"INCOMPLETE_RAT_DATA\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DUPLICATE_ORGANIZATION_RUT",
        "severity": "HIGH",
        "description": "Tabla \"DUPLICATE_ORGANIZATION_RUT\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DATA_INCONSISTENCY",
        "severity": "HIGH",
        "description": "Tabla \"DATA_INCONSISTENCY\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CONSISTENCY_CHECK_FAILED",
        "severity": "HIGH",
        "description": "Tabla \"CONSISTENCY_CHECK_FAILED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DATABASE_HEALTH_MONITOR",
        "severity": "HIGH",
        "description": "Tabla \"DATABASE_HEALTH_MONITOR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "REALTIME_RLS_ERROR",
        "severity": "HIGH",
        "description": "Tabla \"REALTIME_RLS_ERROR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "REALTIME_CONNECTION_ERROR",
        "severity": "HIGH",
        "description": "Tabla \"REALTIME_CONNECTION_ERROR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "REALTIME_UNDEFINED_ID",
        "severity": "HIGH",
        "description": "Tabla \"REALTIME_UNDEFINED_ID\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "rule_id",
        "severity": "HIGH",
        "description": "Tabla \"rule_id\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "article_number",
        "severity": "HIGH",
        "description": "Tabla \"article_number\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "law_code",
        "severity": "HIGH",
        "description": "Tabla \"law_code\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "executed_at",
        "severity": "HIGH",
        "description": "Tabla \"executed_at\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "published_date",
        "severity": "HIGH",
        "description": "Tabla \"published_date\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "new_article",
        "severity": "HIGH",
        "description": "Tabla \"new_article\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "modified_article",
        "severity": "HIGH",
        "description": "Tabla \"modified_article\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "new_requirement",
        "severity": "HIGH",
        "description": "Tabla \"new_requirement\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "legal_compliance",
        "severity": "HIGH",
        "description": "Tabla \"legal_compliance\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "article_reference",
        "severity": "HIGH",
        "description": "Tabla \"article_reference\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "eipd_template_v2",
        "severity": "HIGH",
        "description": "Tabla \"eipd_template_v2\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "dpa_template_v1",
        "severity": "HIGH",
        "description": "Tabla \"dpa_template_v1\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "EIPD_REQUIRED",
        "severity": "HIGH",
        "description": "Tabla \"EIPD_REQUIRED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DPA_REQUIRED",
        "severity": "HIGH",
        "description": "Tabla \"DPA_REQUIRED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CONSENT_UPDATE",
        "severity": "HIGH",
        "description": "Tabla \"CONSENT_UPDATE\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "SECURITY_REVIEW",
        "severity": "HIGH",
        "description": "Tabla \"SECURITY_REVIEW\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "effectiveness_score",
        "severity": "HIGH",
        "description": "Tabla \"effectiveness_score\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "recorded_at",
        "severity": "HIGH",
        "description": "Tabla \"recorded_at\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RLS_ERROR_406",
        "severity": "HIGH",
        "description": "Tabla \"RLS_ERROR_406\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "UNDEFINED_ID_ERROR",
        "severity": "HIGH",
        "description": "Tabla \"UNDEFINED_ID_ERROR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "MISSING_COLUMN_ERROR",
        "severity": "HIGH",
        "description": "Tabla \"MISSING_COLUMN_ERROR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DATA_PERSISTENCE_LOSS",
        "severity": "HIGH",
        "description": "Tabla \"DATA_PERSISTENCE_LOSS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "UNHANDLED_PROMISE_REJECTION",
        "severity": "HIGH",
        "description": "Tabla \"UNHANDLED_PROMISE_REJECTION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "JAVASCRIPT_ERROR",
        "severity": "HIGH",
        "description": "Tabla \"JAVASCRIPT_ERROR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "HTTP_ERROR",
        "severity": "HIGH",
        "description": "Tabla \"HTTP_ERROR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "SLOW_REQUEST",
        "severity": "HIGH",
        "description": "Tabla \"SLOW_REQUEST\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "FETCH_NETWORK_ERROR",
        "severity": "HIGH",
        "description": "Tabla \"FETCH_NETWORK_ERROR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CONSOLE_ERROR_RLS_ERROR_406",
        "severity": "HIGH",
        "description": "Tabla \"CONSOLE_ERROR_RLS_ERROR_406\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CONSOLE_ERROR_UNDEFINED_ID_ERROR",
        "severity": "HIGH",
        "description": "Tabla \"CONSOLE_ERROR_UNDEFINED_ID_ERROR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CONSOLE_ERROR_MISSING_COLUMN_ERROR",
        "severity": "HIGH",
        "description": "Tabla \"CONSOLE_ERROR_MISSING_COLUMN_ERROR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ERROR_MONITOR",
        "severity": "HIGH",
        "description": "Tabla \"ERROR_MONITOR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RLS_ERROR",
        "severity": "HIGH",
        "description": "Tabla \"RLS_ERROR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "use_smart_client_fallback",
        "severity": "HIGH",
        "description": "Tabla \"use_smart_client_fallback\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "TENANT_FILTER_ERROR",
        "severity": "HIGH",
        "description": "Tabla \"TENANT_FILTER_ERROR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "remove_tenant_filter",
        "severity": "HIGH",
        "description": "Tabla \"remove_tenant_filter\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "MISSING_COLUMN",
        "severity": "HIGH",
        "description": "Tabla \"MISSING_COLUMN\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "validate_schema",
        "severity": "HIGH",
        "description": "Tabla \"validate_schema\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CONNECTION_ERROR",
        "severity": "HIGH",
        "description": "Tabla \"CONNECTION_ERROR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "retry_with_backoff",
        "severity": "HIGH",
        "description": "Tabla \"retry_with_backoff\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "UNKNOWN_ERROR",
        "severity": "HIGH",
        "description": "Tabla \"UNKNOWN_ERROR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "log_and_report",
        "severity": "HIGH",
        "description": "Tabla \"log_and_report\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "SYSTEM_CONFIG",
        "severity": "HIGH",
        "description": "Tabla \"SYSTEM_CONFIG\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "EARLY_WARNING_SYSTEM",
        "severity": "HIGH",
        "description": "Tabla \"EARLY_WARNING_SYSTEM\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DATA_INTEGRITY_VALIDATOR",
        "severity": "HIGH",
        "description": "Tabla \"DATA_INTEGRITY_VALIDATOR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "javascript_error",
        "severity": "HIGH",
        "description": "Tabla \"javascript_error\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "theme_inconsistency",
        "severity": "HIGH",
        "description": "Tabla \"theme_inconsistency\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "theme_warning",
        "severity": "HIGH",
        "description": "Tabla \"theme_warning\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "css_error",
        "severity": "HIGH",
        "description": "Tabla \"css_error\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "missing_button_label",
        "severity": "HIGH",
        "description": "Tabla \"missing_button_label\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "missing_headings",
        "severity": "HIGH",
        "description": "Tabla \"missing_headings\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "low_contrast",
        "severity": "HIGH",
        "description": "Tabla \"low_contrast\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "accessibility_error",
        "severity": "HIGH",
        "description": "Tabla \"accessibility_error\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "simulation_results",
        "severity": "HIGH",
        "description": "Tabla \"simulation_results\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "agent_type",
        "severity": "HIGH",
        "description": "Tabla \"agent_type\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "system_validation",
        "severity": "HIGH",
        "description": "Tabla \"system_validation\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "last_activity",
        "severity": "HIGH",
        "description": "Tabla \"last_activity\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "NOT_FOUND",
        "severity": "HIGH",
        "description": "Tabla \"NOT_FOUND\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "activity_type",
        "severity": "HIGH",
        "description": "Tabla \"activity_type\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "error_message",
        "severity": "HIGH",
        "description": "Tabla \"error_message\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "full_status",
        "severity": "HIGH",
        "description": "Tabla \"full_status\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "NEEDS_ATTENTION",
        "severity": "HIGH",
        "description": "Tabla \"NEEDS_ATTENTION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "get_smart_suggestions",
        "severity": "HIGH",
        "description": "Tabla \"get_smart_suggestions\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "identificacion_responsable",
        "severity": "HIGH",
        "description": "Tabla \"identificacion_responsable\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "generate_completion_suggestions",
        "severity": "HIGH",
        "description": "Tabla \"generate_completion_suggestions\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "RAT_EIPD_CONSISTENCY",
        "severity": "HIGH",
        "description": "Tabla \"RAT_EIPD_CONSISTENCY\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "EIPD_APPROVAL_CONSISTENCY",
        "severity": "HIGH",
        "description": "Tabla \"EIPD_APPROVAL_CONSISTENCY\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "INVENTORY_SYNC_CONSISTENCY",
        "severity": "HIGH",
        "description": "Tabla \"INVENTORY_SYNC_CONSISTENCY\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DPO_TASKS_PENDING_CONSISTENCY",
        "severity": "HIGH",
        "description": "Tabla \"DPO_TASKS_PENDING_CONSISTENCY\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "source_rat_id",
        "severity": "HIGH",
        "description": "Tabla \"source_rat_id\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "AUTO_GENERATE_EIPD",
        "severity": "HIGH",
        "description": "Tabla \"AUTO_GENERATE_EIPD\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "AUTO_REGISTER_INVENTORY",
        "severity": "HIGH",
        "description": "Tabla \"AUTO_REGISTER_INVENTORY\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CLEANUP_ORPHAN_TASK",
        "severity": "HIGH",
        "description": "Tabla \"CLEANUP_ORPHAN_TASK\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "LOGIC_AUDITOR",
        "severity": "HIGH",
        "description": "Tabla \"LOGIC_AUDITOR\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ORPHAN_TASK_NO_VALID_RAT",
        "severity": "HIGH",
        "description": "Tabla \"ORPHAN_TASK_NO_VALID_RAT\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "LOGIC_AUDIT",
        "severity": "HIGH",
        "description": "Tabla \"LOGIC_AUDIT\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "CLOSE_RAT",
        "severity": "HIGH",
        "description": "Tabla \"CLOSE_RAT\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "APPROVE_EIPD",
        "severity": "HIGH",
        "description": "Tabla \"APPROVE_EIPD\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "DELETE_RAT",
        "severity": "HIGH",
        "description": "Tabla \"DELETE_RAT\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ISSUES_DETECTED",
        "severity": "HIGH",
        "description": "Tabla \"ISSUES_DETECTED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "SECURITY_VIOLATION",
        "severity": "HIGH",
        "description": "Tabla \"SECURITY_VIOLATION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "SECURITY_DISABLED",
        "severity": "HIGH",
        "description": "Tabla \"SECURITY_DISABLED\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "COMPLETE_WIZARD_STEPS",
        "severity": "HIGH",
        "description": "Tabla \"COMPLETE_WIZARD_STEPS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "FULL_CATEGORIAS_SELECTION",
        "severity": "HIGH",
        "description": "Tabla \"FULL_CATEGORIAS_SELECTION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "COMPLETE_FINALIDADES",
        "severity": "HIGH",
        "description": "Tabla \"COMPLETE_FINALIDADES\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "FULL_LEGITIMACION",
        "severity": "HIGH",
        "description": "Tabla \"FULL_LEGITIMACION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "COMPLETE_TRANSFERENCIAS",
        "severity": "HIGH",
        "description": "Tabla \"COMPLETE_TRANSFERENCIAS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "MEDIDAS_SEGURIDAD_COMPLETE",
        "severity": "HIGH",
        "description": "Tabla \"MEDIDAS_SEGURIDAD_COMPLETE\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "EMPRESA_DATA_EDITING",
        "severity": "HIGH",
        "description": "Tabla \"EMPRESA_DATA_EDITING\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "WIZARD_NAVIGATION",
        "severity": "HIGH",
        "description": "Tabla \"WIZARD_NAVIGATION\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "SAVE_PARTIAL_OPTIONS",
        "severity": "HIGH",
        "description": "Tabla \"SAVE_PARTIAL_OPTIONS\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "wizard_navigation_fixed",
        "severity": "HIGH",
        "description": "Tabla \"wizard_navigation_fixed\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "empresa_data_editing_fixed",
        "severity": "HIGH",
        "description": "Tabla \"empresa_data_editing_fixed\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "categorias_selection_fixed",
        "severity": "HIGH",
        "description": "Tabla \"categorias_selection_fixed\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "finalidades_options_fixed",
        "severity": "HIGH",
        "description": "Tabla \"finalidades_options_fixed\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "legitimacion_options_fixed",
        "severity": "HIGH",
        "description": "Tabla \"legitimacion_options_fixed\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "transferencias_options_fixed",
        "severity": "HIGH",
        "description": "Tabla \"transferencias_options_fixed\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "seguridad_options_fixed",
        "severity": "HIGH",
        "description": "Tabla \"seguridad_options_fixed\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "api_key",
        "severity": "HIGH",
        "description": "Tabla \"api_key\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "private_key",
        "severity": "HIGH",
        "description": "Tabla \"private_key\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "access_token",
        "severity": "HIGH",
        "description": "Tabla \"access_token\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "refresh_token",
        "severity": "HIGH",
        "description": "Tabla \"refresh_token\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "session_token",
        "severity": "HIGH",
        "description": "Tabla \"session_token\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "auth_token",
        "severity": "HIGH",
        "description": "Tabla \"auth_token\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "demo_empresa",
        "severity": "HIGH",
        "description": "Tabla \"demo_empresa\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "marketing_consent",
        "severity": "HIGH",
        "description": "Tabla \"marketing_consent\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "employee_contract",
        "severity": "HIGH",
        "description": "Tabla \"employee_contract\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "legal_obligation",
        "severity": "HIGH",
        "description": "Tabla \"legal_obligation\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "legitimate_interest",
        "severity": "HIGH",
        "description": "Tabla \"legitimate_interest\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "coherence_warning",
        "severity": "HIGH",
        "description": "Tabla \"coherence_warning\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "complexity_low",
        "severity": "HIGH",
        "description": "Tabla \"complexity_low\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "complexity_vague",
        "severity": "HIGH",
        "description": "Tabla \"complexity_vague\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "template_suggestion",
        "severity": "HIGH",
        "description": "Tabla \"template_suggestion\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "base_juridica_inconsistente",
        "severity": "HIGH",
        "description": "Tabla \"base_juridica_inconsistente\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "posible_duplicado",
        "severity": "HIGH",
        "description": "Tabla \"posible_duplicado\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "merge_or_reject",
        "severity": "HIGH",
        "description": "Tabla \"merge_or_reject\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "review_differences",
        "severity": "HIGH",
        "description": "Tabla \"review_differences\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "ensure_consistency",
        "severity": "HIGH",
        "description": "Tabla \"ensure_consistency\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "duplicacion_potencial",
        "severity": "HIGH",
        "description": "Tabla \"duplicacion_potencial\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "campo_faltante",
        "severity": "HIGH",
        "description": "Tabla \"campo_faltante\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "categorias_titulares",
        "severity": "HIGH",
        "description": "Tabla \"categorias_titulares\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "base_juridica",
        "severity": "HIGH",
        "description": "Tabla \"base_juridica\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "categorias_datos_laborales",
        "severity": "HIGH",
        "description": "Tabla \"categorias_datos_laborales\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "audit_test",
        "severity": "HIGH",
        "description": "Tabla \"audit_test\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "AUDIT_TEST",
        "severity": "HIGH",
        "description": "Tabla \"AUDIT_TEST\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "default_company_data",
        "severity": "HIGH",
        "description": "Tabla \"default_company_data\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "template_name",
        "severity": "HIGH",
        "description": "Tabla \"template_name\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "datos_guardados",
        "severity": "HIGH",
        "description": "Tabla \"datos_guardados\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "direccion_empresa",
        "severity": "HIGH",
        "description": "Tabla \"direccion_empresa\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "datos_limpiados",
        "severity": "HIGH",
        "description": "Tabla \"datos_limpiados\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "memory_fallback",
        "severity": "HIGH",
        "description": "Tabla \"memory_fallback\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "log_level",
        "severity": "HIGH",
        "description": "Tabla \"log_level\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "eipd_evaluaciones",
        "severity": "HIGH",
        "description": "Tabla \"eipd_evaluaciones\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "try_without_tenant_filter",
        "severity": "HIGH",
        "description": "Tabla \"try_without_tenant_filter\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "MISSING_IN_DB",
        "table": "test_value",
        "severity": "HIGH",
        "description": "Tabla \"test_value\" usada en c√≥digo pero no existe en base de datos"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "agent_corrections",
        "severity": "MEDIUM",
        "description": "Tabla \"agent_corrections\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "ai_learning_patterns",
        "severity": "MEDIUM",
        "description": "Tabla \"ai_learning_patterns\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "ai_prevenciones_log",
        "severity": "MEDIUM",
        "description": "Tabla \"ai_prevenciones_log\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "ai_validation_log",
        "severity": "MEDIUM",
        "description": "Tabla \"ai_validation_log\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "arcopol",
        "severity": "MEDIUM",
        "description": "Tabla \"arcopol\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "autofix_log",
        "severity": "MEDIUM",
        "description": "Tabla \"autofix_log\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "breaches",
        "severity": "MEDIUM",
        "description": "Tabla \"breaches\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "client_companies",
        "severity": "MEDIUM",
        "description": "Tabla \"client_companies\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "company_quotas",
        "severity": "MEDIUM",
        "description": "Tabla \"company_quotas\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "company_usage_metrics",
        "severity": "MEDIUM",
        "description": "Tabla \"company_usage_metrics\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "company_users",
        "severity": "MEDIUM",
        "description": "Tabla \"company_users\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "company_workspaces",
        "severity": "MEDIUM",
        "description": "Tabla \"company_workspaces\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "compliance_reports",
        "severity": "MEDIUM",
        "description": "Tabla \"compliance_reports\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "compliance_triggers_log",
        "severity": "MEDIUM",
        "description": "Tabla \"compliance_triggers_log\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "consents",
        "severity": "MEDIUM",
        "description": "Tabla \"consents\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "critical_incidents",
        "severity": "MEDIUM",
        "description": "Tabla \"critical_incidents\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "documentos_asociados",
        "severity": "MEDIUM",
        "description": "Tabla \"documentos_asociados\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "documentos_generados",
        "severity": "MEDIUM",
        "description": "Tabla \"documentos_generados\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "empresas",
        "severity": "MEDIUM",
        "description": "Tabla \"empresas\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "error_logs",
        "severity": "MEDIUM",
        "description": "Tabla \"error_logs\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "evaluaciones_impacto_privacidad",
        "severity": "MEDIUM",
        "description": "Tabla \"evaluaciones_impacto_privacidad\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "industry_configurations",
        "severity": "MEDIUM",
        "description": "Tabla \"industry_configurations\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "interviews",
        "severity": "MEDIUM",
        "description": "Tabla \"interviews\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "inventory",
        "severity": "MEDIUM",
        "description": "Tabla \"inventory\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "licencias",
        "severity": "MEDIUM",
        "description": "Tabla \"licencias\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "migration_log",
        "severity": "MEDIUM",
        "description": "Tabla \"migration_log\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "modulos_acceso",
        "severity": "MEDIUM",
        "description": "Tabla \"modulos_acceso\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "notifications",
        "severity": "MEDIUM",
        "description": "Tabla \"notifications\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "operation_validation_log",
        "severity": "MEDIUM",
        "description": "Tabla \"operation_validation_log\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "partner_access_logs",
        "severity": "MEDIUM",
        "description": "Tabla \"partner_access_logs\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "partner_api_keys",
        "severity": "MEDIUM",
        "description": "Tabla \"partner_api_keys\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "partner_usage_stats",
        "severity": "MEDIUM",
        "description": "Tabla \"partner_usage_stats\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "partner_webhooks",
        "severity": "MEDIUM",
        "description": "Tabla \"partner_webhooks\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "persistence_validation_log",
        "severity": "MEDIUM",
        "description": "Tabla \"persistence_validation_log\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "rat_processes",
        "severity": "MEDIUM",
        "description": "Tabla \"rat_processes\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "rat_saved_filters",
        "severity": "MEDIUM",
        "description": "Tabla \"rat_saved_filters\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "rat_snapshots",
        "severity": "MEDIUM",
        "description": "Tabla \"rat_snapshots\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "reports",
        "severity": "MEDIUM",
        "description": "Tabla \"reports\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "review_queue",
        "severity": "MEDIUM",
        "description": "Tabla \"review_queue\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "sandbox_assessments",
        "severity": "MEDIUM",
        "description": "Tabla \"sandbox_assessments\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "sandbox_data_flows",
        "severity": "MEDIUM",
        "description": "Tabla \"sandbox_data_flows\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "sandbox_generated_documents",
        "severity": "MEDIUM",
        "description": "Tabla \"sandbox_generated_documents\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "sandbox_rat_activities",
        "severity": "MEDIUM",
        "description": "Tabla \"sandbox_rat_activities\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "sandbox_sessions",
        "severity": "MEDIUM",
        "description": "Tabla \"sandbox_sessions\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "session_data",
        "severity": "MEDIUM",
        "description": "Tabla \"session_data\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "tenant_configs",
        "severity": "MEDIUM",
        "description": "Tabla \"tenant_configs\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "tenant_settings",
        "severity": "MEDIUM",
        "description": "Tabla \"tenant_settings\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "tokens",
        "severity": "MEDIUM",
        "description": "Tabla \"tokens\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "training",
        "severity": "MEDIUM",
        "description": "Tabla \"training\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "user_preferences",
        "severity": "MEDIUM",
        "description": "Tabla \"user_preferences\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      },
      {
        "type": "UNUSED_IN_CODE",
        "table": "users",
        "severity": "MEDIUM",
        "description": "Tabla \"users\" existe en BD pero no se usa en c√≥digo (posible tabla hu√©rfana)"
      }
    ],
    "module_analysis": {
      "RAT_CONSTRUCTION": {
        "name": "RAT_CONSTRUCTION",
        "description": "M√≥dulo 1: Construcci√≥n registro actividades tratamiento RAT",
        "files_found": 17,
        "files_list": [
          "frontend/src/components/APIPartnersIntegration.js",
          "frontend/src/components/DPAGenerator.js",
          "frontend/src/components/RATEditPage.js",
          "frontend/src/components/RATFormWithCompliance.js",
          "frontend/src/components/RATListPage.js",
          "frontend/src/components/RATSearchFilter.js",
          "frontend/src/components/RATSystemProfessional.js",
          "frontend/src/components/ReportGenerator.js",
          "frontend/src/debug_rat_id.js",
          "frontend/src/pages/RATEditPage.js",
          "frontend/src/pages/RATListPage.js",
          "frontend/src/services/ratIntelligenceEngine.js",
          "frontend/src/services/ratService.js",
          "frontend/src/utils/humanInteractionSimulator.js",
          "frontend/src/utils/interactiveHelper.js",
          "frontend/src/utils/ratEditModeFix.js",
          "frontend/src/utils/rateLimiter.js"
        ],
        "functions_count": 346,
        "supabase_calls": 116,
        "components_count": 31,
        "dependencies": [
          "react",
          "../config/supabaseClient",
          "../contexts/TenantContext",
          "../contexts/AuthContext",
          "./PageLayout",
          "react-router-dom",
          "../hooks/useAuth",
          "../utils/preventiveAI",
          "../services/ratIntelligenceEngine",
          "../constants/estados",
          "../utils/supabaseErrorLogger",
          "@mui/material/styles",
          "../services/ratService",
          "../services/riskCalculationEngine",
          "../services/testBalancingEngine",
          "../services/categoryAnalysisEngine",
          "../services/specificCasesEngine",
          "../services/industryStandardsService",
          "./EmpresaDataManager",
          "@mui/material",
          "@mui/icons-material"
        ],
        "entry_points": [],
        "data_flow": [],
        "critical_functions": [],
        "status": "ANALYZED"
      },
      "RAT_MANAGEMENT": {
        "name": "RAT_MANAGEMENT",
        "description": "M√≥dulo 2: Gesti√≥n RAT existentes",
        "files_found": 9,
        "files_list": [
          "frontend/src/components/EmpresaDataManager.js",
          "frontend/src/components/GestionProveedores.js",
          "frontend/src/components/ProviderManager.js",
          "frontend/src/components/RATListPage.js",
          "frontend/src/components/admin/UserManagement.js",
          "frontend/src/pages/EIPDListPage.js",
          "frontend/src/pages/GestionAsociaciones.js",
          "frontend/src/pages/ProviderManager.js",
          "frontend/src/pages/RATListPage.js"
        ],
        "functions_count": 171,
        "supabase_calls": 26,
        "components_count": 10,
        "dependencies": [
          "react",
          "react-router-dom",
          "../contexts/AuthContext",
          "../services/proveedoresService",
          "../config/supabaseClient",
          "../../config/supabaseClient",
          "../constants/estados",
          "../contexts/TenantContext",
          "@mui/material",
          "@mui/icons-material",
          "../services/ratService"
        ],
        "entry_points": [],
        "data_flow": [],
        "critical_functions": [],
        "status": "ANALYZED"
      },
      "COMPLIANCE_METRICS": {
        "name": "COMPLIANCE_METRICS",
        "description": "M√≥dulo 3: M√©tricas de compliance",
        "files_found": 9,
        "files_list": [
          "frontend/src/components/AdminDashboard.js",
          "frontend/src/components/ComplianceDashboard.js",
          "frontend/src/components/ComplianceMetrics.js",
          "frontend/src/components/RATFormWithCompliance.js",
          "frontend/src/components/__tests__/AdminDashboard.test.js",
          "frontend/src/components/admin/UsageDashboard.js",
          "frontend/src/pages/AdminDashboard.js",
          "frontend/src/pages/Dashboard.js",
          "frontend/src/pages/DashboardDPO.js"
        ],
        "functions_count": 117,
        "supabase_calls": 40,
        "components_count": 8,
        "dependencies": [
          "react",
          "../config/supabaseClient",
          "react-router-dom",
          "../hooks/useComplianceIntegration.js",
          "../services/ratService",
          "../contexts/TenantContext",
          "../services/ratIntelligenceEngine",
          "@testing-library/react",
          "@mui/material/styles",
          "../AdminDashboard",
          "../../config/supabaseClient",
          "../contexts/AuthContext",
          "../hooks/useDataSync",
          "@mui/material",
          "../components/PageLayout"
        ],
        "entry_points": [],
        "data_flow": [],
        "critical_functions": [],
        "status": "ANALYZED"
      },
      "DPO_MODULE": {
        "name": "DPO_MODULE",
        "description": "M√≥dulo 4: M√≥dulo DPO",
        "files_found": 6,
        "files_list": [
          "frontend/src/components/DPAGenerator.js",
          "frontend/src/pages/DPIAAlgoritmos.js",
          "frontend/src/pages/DPOApprovalQueue.js",
          "frontend/src/pages/DashboardDPO.js",
          "frontend/src/pages/GlosarioLPDP.js",
          "frontend/src/sdk/LPDPHubSDK.js"
        ],
        "functions_count": 75,
        "supabase_calls": 8,
        "components_count": 6,
        "dependencies": [
          "react",
          "react-router-dom",
          "../contexts/TenantContext",
          "../config/supabaseClient",
          "../services/ratService",
          "../services/ratIntelligenceEngine",
          "../hooks/useDataSync",
          "@mui/material",
          "../components/PageLayout"
        ],
        "entry_points": [],
        "data_flow": [],
        "critical_functions": [],
        "status": "ANALYZED"
      },
      "DPIA_PIA_MODULE": {
        "name": "DPIA_PIA_MODULE",
        "description": "M√≥dulo 5: M√≥dulo DPIA/PIA",
        "files_found": 3,
        "files_list": [
          "frontend/src/components/APIPartnersIntegration.js",
          "frontend/src/pages/DPIAAlgoritmos.js",
          "frontend/src/services/api.js"
        ],
        "functions_count": 31,
        "supabase_calls": 33,
        "components_count": 12,
        "dependencies": [
          "react",
          "../config/supabaseClient",
          "../contexts/TenantContext",
          "../contexts/AuthContext",
          "./PageLayout",
          "react-router-dom",
          "../utils/smartSupabaseClient"
        ],
        "entry_points": [],
        "data_flow": [],
        "critical_functions": [],
        "status": "ANALYZED"
      },
      "EIPDS_SAVED": {
        "name": "EIPDS_SAVED",
        "description": "M√≥dulo 6: LIS EIPDs guardadas",
        "files_found": 4,
        "files_list": [
          "frontend/src/components/EIPDTemplates.js",
          "frontend/src/components/ModuloEIPD.js",
          "frontend/src/pages/EIPDCreator.js",
          "frontend/src/pages/EIPDListPage.js"
        ],
        "functions_count": 79,
        "supabase_calls": 12,
        "components_count": 4,
        "dependencies": [
          "react",
          "react-router-dom",
          "../services/ratService",
          "../config/supabaseClient",
          "../contexts/TenantContext",
          "../contexts/AuthContext",
          "../services/ratIntelligenceEngine",
          "../constants/estados"
        ],
        "entry_points": [],
        "data_flow": [],
        "critical_functions": [],
        "status": "ANALYZED"
      },
      "SUPPLIERS_MODULE": {
        "name": "SUPPLIERS_MODULE",
        "description": "M√≥dulo 7: M√≥dulo de proveedores",
        "files_found": 2,
        "files_list": [
          "frontend/src/components/GestionProveedores.js",
          "frontend/src/services/proveedoresService.js"
        ],
        "functions_count": 28,
        "supabase_calls": 35,
        "components_count": 2,
        "dependencies": [
          "react",
          "react-router-dom",
          "../contexts/AuthContext",
          "../services/proveedoresService",
          "../config/supabaseClient"
        ],
        "entry_points": [],
        "data_flow": [],
        "critical_functions": [],
        "status": "ANALYZED"
      },
      "ADMIN_PANEL": {
        "name": "ADMIN_PANEL",
        "description": "M√≥dulo 8: Panel administrativo",
        "files_found": 11,
        "files_list": [
          "frontend/src/components/AdminDashboard.js",
          "frontend/src/components/__tests__/AdminDashboard.test.js",
          "frontend/src/components/admin/AdminPanel.js",
          "frontend/src/components/admin/IAAgentStatusPage.js",
          "frontend/src/components/admin/UsageDashboard.js",
          "frontend/src/components/admin/UserManagement.js",
          "frontend/src/config/industries.config.js",
          "frontend/src/config/supabaseClient.js",
          "frontend/src/config.js",
          "frontend/src/pages/AdminDashboard.js",
          "frontend/src/pages/AdminPanel.js"
        ],
        "functions_count": 137,
        "supabase_calls": 46,
        "components_count": 21,
        "dependencies": [
          "react",
          "../config/supabaseClient",
          "react-router-dom",
          "@testing-library/react",
          "@mui/material/styles",
          "../AdminDashboard",
          "./AdminDashboard",
          "./TenantManagement",
          "./UserManagement",
          "./SystemAudit",
          "./SystemReports",
          "../../contexts/AuthContext",
          "../../config/supabaseClient",
          "../../utils/iaAgentReporter",
          "@supabase/supabase-js",
          "../services/ratService",
          "../components/admin/IAAgentStatusPage"
        ],
        "entry_points": [],
        "data_flow": [],
        "critical_functions": [],
        "status": "ANALYZED"
      },
      "DPA_GENERATOR": {
        "name": "DPA_GENERATOR",
        "description": "M√≥dulo 9: Generador DPA",
        "files_found": 7,
        "files_list": [
          "frontend/src/components/DPAGenerator.js",
          "frontend/src/components/ReportGenerator.js",
          "frontend/src/pages/DPIAAlgoritmos.js",
          "frontend/src/pages/DPOApprovalQueue.js",
          "frontend/src/pages/DashboardDPO.js",
          "frontend/src/pages/GlosarioLPDP.js",
          "frontend/src/sdk/LPDPHubSDK.js"
        ],
        "functions_count": 93,
        "supabase_calls": 22,
        "components_count": 7,
        "dependencies": [
          "react",
          "react-router-dom",
          "../contexts/TenantContext",
          "../config/supabaseClient",
          "../contexts/AuthContext",
          "./PageLayout",
          "../services/ratService",
          "../services/ratIntelligenceEngine",
          "../hooks/useDataSync",
          "@mui/material",
          "../components/PageLayout"
        ],
        "entry_points": [],
        "data_flow": [],
        "critical_functions": [],
        "status": "ANALYZED"
      },
      "NOTIFICATIONS_CENTER": {
        "name": "NOTIFICATIONS_CENTER",
        "description": "M√≥dulo 10: Centro de notificaciones",
        "files_found": 1,
        "files_list": [
          "frontend/src/components/NotificationCenter.js"
        ],
        "functions_count": 30,
        "supabase_calls": 5,
        "components_count": 1,
        "dependencies": [
          "react",
          "react-router-dom",
          "../services/ratService",
          "../config/supabaseClient",
          "../contexts/TenantContext"
        ],
        "entry_points": [],
        "data_flow": [],
        "critical_functions": [],
        "status": "ANALYZED"
      },
      "REPORTS_GENERATOR": {
        "name": "REPORTS_GENERATOR",
        "description": "M√≥dulo 11: Generador de reportes",
        "files_found": 8,
        "files_list": [
          "frontend/src/components/EIPDTemplates.js",
          "frontend/src/components/ModuloEIPD.js",
          "frontend/src/components/ReportGenerator.js",
          "frontend/src/pages/EIPDCreator.js",
          "frontend/src/pages/EIPDListPage.js",
          "frontend/src/pages/GlosarioLPDP.js",
          "frontend/src/sdk/LPDPHubSDK.js",
          "frontend/src/utils/iaAgentReporter.js"
        ],
        "functions_count": 111,
        "supabase_calls": 44,
        "components_count": 8,
        "dependencies": [
          "react",
          "react-router-dom",
          "../services/ratService",
          "../config/supabaseClient",
          "../contexts/TenantContext",
          "../contexts/AuthContext",
          "./PageLayout",
          "../services/ratIntelligenceEngine",
          "../constants/estados",
          "../components/PageLayout"
        ],
        "entry_points": [],
        "data_flow": [],
        "critical_functions": [],
        "status": "ANALYZED"
      }
    },
    "integration_flows": [
      {
        "scenario_name": "CREATE_RAT_COMPLETE_FLOW",
        "execution_number": 1,
        "description": "Flujo completo: Crear RAT ‚Üí Validar ‚Üí Generar documentos",
        "total_steps": 4,
        "steps_completed": 4,
        "steps_detail": [
          {
            "step_name": "validate_company_data",
            "step_number": 1,
            "success": true,
            "duration_ms": 253,
            "details": "validate_company_data ejecutado para CREATE_RAT_COMPLETE_FLOW #1",
            "error": null
          },
          {
            "step_name": "create_rat_entry",
            "step_number": 2,
            "success": true,
            "duration_ms": 455,
            "details": "create_rat_entry ejecutado para CREATE_RAT_COMPLETE_FLOW #1",
            "error": null
          },
          {
            "step_name": "generate_documents",
            "step_number": 3,
            "success": true,
            "duration_ms": 968,
            "details": "generate_documents ejecutado para CREATE_RAT_COMPLETE_FLOW #1",
            "error": null
          },
          {
            "step_name": "notify_dpo",
            "step_number": 4,
            "success": true,
            "duration_ms": 183,
            "details": "notify_dpo ejecutado para CREATE_RAT_COMPLETE_FLOW #1",
            "error": null
          }
        ],
        "success": true,
        "execution_time_ms": 2832,
        "timestamp": "2025-09-04T17:30:26.667Z"
      },
      {
        "scenario_name": "CREATE_RAT_COMPLETE_FLOW",
        "execution_number": 2,
        "description": "Flujo completo: Crear RAT ‚Üí Validar ‚Üí Generar documentos",
        "total_steps": 4,
        "steps_completed": 1,
        "steps_detail": [
          {
            "step_name": "validate_company_data",
            "step_number": 1,
            "success": true,
            "duration_ms": 377,
            "details": "validate_company_data ejecutado para CREATE_RAT_COMPLETE_FLOW #2",
            "error": null
          },
          {
            "step_name": "create_rat_entry",
            "step_number": 2,
            "success": false,
            "duration_ms": 547,
            "details": "create_rat_entry ejecutado para CREATE_RAT_COMPLETE_FLOW #2",
            "error": "Fall√≥ create_rat_entry en ejecuci√≥n 2"
          }
        ],
        "success": false,
        "execution_time_ms": 1161,
        "timestamp": "2025-09-04T17:30:29.800Z",
        "failed_step": "create_rat_entry"
      },
      {
        "scenario_name": "CREATE_RAT_COMPLETE_FLOW",
        "execution_number": 3,
        "description": "Flujo completo: Crear RAT ‚Üí Validar ‚Üí Generar documentos",
        "total_steps": 4,
        "steps_completed": 4,
        "steps_detail": [
          {
            "step_name": "validate_company_data",
            "step_number": 1,
            "success": true,
            "duration_ms": 446,
            "details": "validate_company_data ejecutado para CREATE_RAT_COMPLETE_FLOW #3",
            "error": null
          },
          {
            "step_name": "create_rat_entry",
            "step_number": 2,
            "success": true,
            "duration_ms": 324,
            "details": "create_rat_entry ejecutado para CREATE_RAT_COMPLETE_FLOW #3",
            "error": null
          },
          {
            "step_name": "generate_documents",
            "step_number": 3,
            "success": true,
            "duration_ms": 939,
            "details": "generate_documents ejecutado para CREATE_RAT_COMPLETE_FLOW #3",
            "error": null
          },
          {
            "step_name": "notify_dpo",
            "step_number": 4,
            "success": true,
            "duration_ms": 260,
            "details": "notify_dpo ejecutado para CREATE_RAT_COMPLETE_FLOW #3",
            "error": null
          }
        ],
        "success": true,
        "execution_time_ms": 2825,
        "timestamp": "2025-09-04T17:30:31.261Z"
      },
      {
        "scenario_name": "DPO_WORKFLOW_COMPLETE",
        "execution_number": 1,
        "description": "Flujo DPO: Revisar actividades ‚Üí Aprobar ‚Üí Generar reportes",
        "total_steps": 4,
        "steps_completed": 4,
        "steps_detail": [
          {
            "step_name": "load_pending_activities",
            "step_number": 1,
            "success": true,
            "duration_ms": 216,
            "details": "load_pending_activities ejecutado para DPO_WORKFLOW_COMPLETE #1",
            "error": null
          },
          {
            "step_name": "review_compliance",
            "step_number": 2,
            "success": true,
            "duration_ms": 974,
            "details": "review_compliance ejecutado para DPO_WORKFLOW_COMPLETE #1",
            "error": null
          },
          {
            "step_name": "approve_activities",
            "step_number": 3,
            "success": true,
            "duration_ms": 692,
            "details": "approve_activities ejecutado para DPO_WORKFLOW_COMPLETE #1",
            "error": null
          },
          {
            "step_name": "generate_report",
            "step_number": 4,
            "success": true,
            "duration_ms": 1232,
            "details": "generate_report ejecutado para DPO_WORKFLOW_COMPLETE #1",
            "error": null
          }
        ],
        "success": true,
        "execution_time_ms": 3897,
        "timestamp": "2025-09-04T17:30:34.387Z"
      },
      {
        "scenario_name": "DPO_WORKFLOW_COMPLETE",
        "execution_number": 2,
        "description": "Flujo DPO: Revisar actividades ‚Üí Aprobar ‚Üí Generar reportes",
        "total_steps": 4,
        "steps_completed": 4,
        "steps_detail": [
          {
            "step_name": "load_pending_activities",
            "step_number": 1,
            "success": true,
            "duration_ms": 271,
            "details": "load_pending_activities ejecutado para DPO_WORKFLOW_COMPLETE #2",
            "error": null
          },
          {
            "step_name": "review_compliance",
            "step_number": 2,
            "success": true,
            "duration_ms": 615,
            "details": "review_compliance ejecutado para DPO_WORKFLOW_COMPLETE #2",
            "error": null
          },
          {
            "step_name": "approve_activities",
            "step_number": 3,
            "success": true,
            "duration_ms": 685,
            "details": "approve_activities ejecutado para DPO_WORKFLOW_COMPLETE #2",
            "error": null
          },
          {
            "step_name": "generate_report",
            "step_number": 4,
            "success": true,
            "duration_ms": 1332,
            "details": "generate_report ejecutado para DPO_WORKFLOW_COMPLETE #2",
            "error": null
          }
        ],
        "success": true,
        "execution_time_ms": 3807,
        "timestamp": "2025-09-04T17:30:38.584Z"
      },
      {
        "scenario_name": "DPO_WORKFLOW_COMPLETE",
        "execution_number": 3,
        "description": "Flujo DPO: Revisar actividades ‚Üí Aprobar ‚Üí Generar reportes",
        "total_steps": 4,
        "steps_completed": 4,
        "steps_detail": [
          {
            "step_name": "load_pending_activities",
            "step_number": 1,
            "success": true,
            "duration_ms": 449,
            "details": "load_pending_activities ejecutado para DPO_WORKFLOW_COMPLETE #3",
            "error": null
          },
          {
            "step_name": "review_compliance",
            "step_number": 2,
            "success": true,
            "duration_ms": 446,
            "details": "review_compliance ejecutado para DPO_WORKFLOW_COMPLETE #3",
            "error": null
          },
          {
            "step_name": "approve_activities",
            "step_number": 3,
            "success": true,
            "duration_ms": 383,
            "details": "approve_activities ejecutado para DPO_WORKFLOW_COMPLETE #3",
            "error": null
          },
          {
            "step_name": "generate_report",
            "step_number": 4,
            "success": true,
            "duration_ms": 1373,
            "details": "generate_report ejecutado para DPO_WORKFLOW_COMPLETE #3",
            "error": null
          }
        ],
        "success": true,
        "execution_time_ms": 3405,
        "timestamp": "2025-09-04T17:30:42.692Z"
      },
      {
        "scenario_name": "SUPPLIER_DPA_COMPLETE",
        "execution_number": 1,
        "description": "Flujo proveedores: Registrar ‚Üí Evaluar ‚Üí Generar DPA",
        "total_steps": 4,
        "steps_completed": 4,
        "steps_detail": [
          {
            "step_name": "register_supplier",
            "step_number": 1,
            "success": true,
            "duration_ms": 452,
            "details": "register_supplier ejecutado para SUPPLIER_DPA_COMPLETE #1",
            "error": null
          },
          {
            "step_name": "security_assessment",
            "step_number": 2,
            "success": true,
            "duration_ms": 1844,
            "details": "security_assessment ejecutado para SUPPLIER_DPA_COMPLETE #1",
            "error": null
          },
          {
            "step_name": "generate_dpa",
            "step_number": 3,
            "success": true,
            "duration_ms": 718,
            "details": "generate_dpa ejecutado para SUPPLIER_DPA_COMPLETE #1",
            "error": null
          },
          {
            "step_name": "notify_completion",
            "step_number": 4,
            "success": true,
            "duration_ms": 129,
            "details": "notify_completion ejecutado para SUPPLIER_DPA_COMPLETE #1",
            "error": null
          }
        ],
        "success": true,
        "execution_time_ms": 4247,
        "timestamp": "2025-09-04T17:30:46.397Z"
      },
      {
        "scenario_name": "SUPPLIER_DPA_COMPLETE",
        "execution_number": 2,
        "description": "Flujo proveedores: Registrar ‚Üí Evaluar ‚Üí Generar DPA",
        "total_steps": 4,
        "steps_completed": 0,
        "steps_detail": [
          {
            "step_name": "register_supplier",
            "step_number": 1,
            "success": false,
            "duration_ms": 581,
            "details": "register_supplier ejecutado para SUPPLIER_DPA_COMPLETE #2",
            "error": "Fall√≥ register_supplier en ejecuci√≥n 2"
          }
        ],
        "success": false,
        "execution_time_ms": 581,
        "timestamp": "2025-09-04T17:30:50.945Z",
        "failed_step": "register_supplier"
      },
      {
        "scenario_name": "SUPPLIER_DPA_COMPLETE",
        "execution_number": 3,
        "description": "Flujo proveedores: Registrar ‚Üí Evaluar ‚Üí Generar DPA",
        "total_steps": 4,
        "steps_completed": 4,
        "steps_detail": [
          {
            "step_name": "register_supplier",
            "step_number": 1,
            "success": true,
            "duration_ms": 264,
            "details": "register_supplier ejecutado para SUPPLIER_DPA_COMPLETE #3",
            "error": null
          },
          {
            "step_name": "security_assessment",
            "step_number": 2,
            "success": true,
            "duration_ms": 3143,
            "details": "security_assessment ejecutado para SUPPLIER_DPA_COMPLETE #3",
            "error": null
          },
          {
            "step_name": "generate_dpa",
            "step_number": 3,
            "success": true,
            "duration_ms": 664,
            "details": "generate_dpa ejecutado para SUPPLIER_DPA_COMPLETE #3",
            "error": null
          },
          {
            "step_name": "notify_completion",
            "step_number": 4,
            "success": true,
            "duration_ms": 297,
            "details": "notify_completion ejecutado para SUPPLIER_DPA_COMPLETE #3",
            "error": null
          }
        ],
        "success": true,
        "execution_time_ms": 5229,
        "timestamp": "2025-09-04T17:30:51.827Z"
      }
    ],
    "critical_findings": []
  },
  "summary": {
    "audit_completed": true,
    "total_duration_ms": 64260,
    "total_duration_minutes": 1,
    "phases_completed": 5,
    "phases_total": 5,
    "completion_percentage": 100,
    "overall_success_rate": 23,
    "critical_issues_count": 3,
    "critical_issues": [
      {
        "type": "LOW_SUPABASE_SUCCESS_RATE",
        "severity": "CRITICAL",
        "description": "Tasa de √©xito Supabase: 0% (< 70%)"
      },
      {
        "type": "HIGH_TABLE_DISCREPANCIES",
        "severity": "HIGH",
        "description": "707 discrepancias entre BD y c√≥digo"
      },
      {
        "type": "LOW_INTEGRATION_SUCCESS",
        "severity": "HIGH",
        "description": "Tasa de √©xito integraci√≥n: 78% (< 80%)"
      }
    ],
    "recommendations": [
      {
        "priority": "HIGH",
        "category": "SUPABASE_CONNECTIVITY",
        "recommendation": "Revisar y corregir configuraciones RLS de tablas con fallos",
        "impact": "Mejorar√° conectividad general del sistema"
      },
      {
        "priority": "MEDIUM",
        "category": "DATABASE_CLEANUP",
        "recommendation": "Limpiar tablas hu√©rfanas y actualizar referencias de c√≥digo",
        "impact": "Reducir√° complejidad y mejorar√° mantenibilidad"
      },
      {
        "priority": "HIGH",
        "category": "DOCUMENTATION",
        "recommendation": "Crear documentaci√≥n completa de los 11 m√≥dulos y sus interrelaciones",
        "impact": "Mejorar√° mantenimiento y desarrollo futuro"
      },
      {
        "priority": "MEDIUM",
        "category": "TESTING",
        "recommendation": "Implementar testing automatizado continuo",
        "impact": "Detectar√° problemas antes de producci√≥n"
      }
    ],
    "audit_conclusion": "SISTEMA_PROBLEM√ÅTICO: Requiere revisi√≥n exhaustiva antes de uso"
  },
  "detailed_stats": {
    "code_analysis": {
      "files_analyzed": 105,
      "total_lines": 58276,
      "supabase_calls": 662
    },
    "supabase_testing": {
      "tests_executed": 67,
      "successful_tests": 0,
      "success_rate": 0
    },
    "table_validation": {
      "tables_validated": 110,
      "discrepancies_found": 707
    },
    "module_analysis": {
      "modules_analyzed": 11,
      "modules_total": 11
    },
    "integration_testing": {
      "tests_executed": 9,
      "successful_tests": 7,
      "success_rate": 78
    }
  }
}