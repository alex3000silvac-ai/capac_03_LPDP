#!/usr/bin/env node

/**
 * üîç MONITOR RENDER DEPLOY
 * Verifica cada 30 segundos si el frontend se deploy√≥ con la correcci√≥n
 */

const { execSync } = require('child_process');

let checkCount = 0;
const maxChecks = 20; // 10 minutos m√°ximo

function checkDeploy() {
    checkCount++;
    const timestamp = new Date().toISOString();
    
    console.log(`\n[${timestamp}] üîç Check ${checkCount}/${maxChecks}: Verificando deploy...`);
    
    try {
        // Hacer request simple al frontend
        const response = execSync('curl -s -w "%{http_code}" https://scldp-frontend.onrender.com/', { encoding: 'utf8' });
        const statusCode = response.slice(-3); // √öltimos 3 caracteres
        
        if (statusCode === '200') {
            console.log(`‚úÖ Frontend responde HTTP 200`);
            
            // Verificar si ya no hay el error de JavaScript
            // (Esto requerir√≠a Puppeteer, por ahora solo verificamos que responde)
            console.log(`üìã Deploy posiblemente completado. Ejecutar agente real para verificar.`);
            return true;
        } else {
            console.log(`‚ö†Ô∏è Frontend responde HTTP ${statusCode}`);
            return false;
        }
        
    } catch (error) {
        console.log(`‚ùå Error verificando deploy: ${error.message}`);
        return false;
    }
}

function monitorDeploy() {
    console.log('üöÄ MONITOR RENDER DEPLOY - Frontend LPDP');
    console.log('‚è±Ô∏è Verificando cada 30 segundos si el deploy se complet√≥...');
    console.log('üéØ Esperando correcci√≥n: onAuthStateChange implementado\n');
    
    const interval = setInterval(() => {
        const deployReady = checkDeploy();
        
        if (deployReady || checkCount >= maxChecks) {
            clearInterval(interval);
            
            if (deployReady) {
                console.log('\nüéâ DEPLOY POSIBLEMENTE COMPLETADO');
                console.log('üìã Ejecuta el agente real para verificar:');
                console.log('   node agente-real-usuario-lpdp.js');
            } else {
                console.log('\n‚è∞ TIMEOUT - Deploy toma m√°s tiempo del esperado');
                console.log('üîß Verifica manualmente en Render Dashboard');
            }
        }
    }, 30000); // 30 segundos
    
    // Primer check inmediato
    checkDeploy();
}

if (require.main === module) {
    monitorDeploy();
}